(function (wrtc, abab) {
	'use strict';

	let State=class{isReady;#t=[];#e=[];constructor(t){let e;this.isReady="ready"===t,Object.defineProperty(this,"status",{set:t=>{if(!["ready","wait"].includes(t))throw new Error("Wrong status: "+t);this[t]();},get:()=>this.isReady?"ready":"wait"}),Object.defineProperty(this,"count",{set:t=>{e=t,t<=0?this.ready():this.isReady=!1;},get:function(){return e}});}ready(){this.isReady=!0,this.count>0?this.count=0:this.#t.forEach((t=>{t();}));}wait(){this.isReady=!1,this.#e.forEach((t=>{t();}));}onReady(t){this.#t.push(t),this.isReady&&t();}onWait(t){this.#e.push(t),this.isReady||t();}ticker(t){this.count=t;}tic(){this.count--;}};

	const inum=(()=>{let t=0;return ()=>(t++,t)})();

	const Pool=class n{length=0;#n={};include(t){let e;if(!(t&&t instanceof n))throw new Error("Only other transaction objects can be included in a transaction");e=inum(),this.#n[e]={inc:t};}push(n,t){if(!Array.isArray(n)){const e=inum();return this.#n[e]={fn:n,data:t},this.length++,e}n.forEach((n=>{this.push(n,t);}));}clear(){this.#n={},this.length=0;}remove(n){this.#n[n]&&(delete this.#n[n],this.length--);}run(n){Object.values(this.#n).forEach((t=>{const e=void 0!==t.data?[t.data,...n]:n;t.fn?t.fn(e):t.inc.run(e);}));}};

	const BinData=class{constructor(t){"number"==typeof t?this.buffer=new ArrayBuffer(t):t instanceof ArrayBuffer?this.buffer=t:t instanceof Uint8Array?(this.uint8Array=t,this.buffer=t.buffer):this.buffer=new ArrayBuffer(100),this.bufferView=new DataView(this.buffer),this.uint8Array||(this.uint8Array=new Uint8Array(this.buffer)),this.offset=0;}length(){return this.uint8Array.length}getUint8(){let t=this.bufferView.getUint8(this.offset);return this.offset++,t}getUint16(){let t=this.bufferView.getUint16(this.offset);return this.offset+=2,t}getUint32(){let t=this.bufferView.getUint32(this.offset);return this.offset+=4,t}getFloat32(){let t=this.bufferView.getFloat32(this.offset);return this.offset+=4,t}getFloat64(){let t=this.bufferView.getFloat64(this.offset);return this.offset+=8,t}getDate(){let t=this.bufferView.getFloat64(this.offset);return this.offset+=8,new Date(t)}getString(t){void 0===t&&(t=this.buffer.byteLength-this.offset);let e=(new TextDecoder).decode(this.buffer.slice(this.offset,this.offset+t));return this.offset+=t,e}getBuffer(t){void 0===t?t=this.buffer.byteLength-this.offset:this.offset+t>this.length()&&(t=this.length()-this.offset);let e=this.buffer.slice(this.offset,this.offset+t);return this.offset+=t,e}getUint8Array(t){void 0===t&&(t=this.buffer.byteLength-this.offset);let e=this.buffer.slice(this.offset,this.offset+t);return this.offset+=t,new Uint8Array(e)}init(){this.offset=0;}skip(t){this.offset+=t;}get notEnd(){return this.offset<this.length()}setUint8(t,e){return this.bufferView.setUint8(void 0!==e?e:this.offset,t),this.offset++,t}setUint16(t,e){return this.bufferView.setUint16(void 0!==e?e:this.offset,t),this.offset+=2,t}setUint32(t,e){return this.bufferView.setUint32(void 0!==e?e:this.offset,t),this.offset+=4,t}setInt32(t,e){return this.bufferView.setInt32(void 0!==e?e:this.offset,t),this.offset+=4,t}setFloat32(t,e){return this.bufferView.setUint32(void 0!==e?e:this.offset,t),this.offset+=4,t}setString(t,e){const f=new TextEncoder;this.uint8Array.set(f.encode(t),void 0!==e?e:this.offset),this.offset+=t.length;}setBuffer(t,e){t instanceof ArrayBuffer&&(t=new Uint8Array(t)),this.uint8Array.set(t,void 0!==e?e:this.offset),this.offset+=t.byteLength;}get value(){return this.buffer}};

	function evaluateThis(o){return o("return this")}const xglobal="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:evaluateThis(Function);function extractGlobal(o,e){return void 0===xglobal[o]?e:xglobal[o]}

	let TextDecoder$2 = class TextDecoder{constructor(e){}decode(e){let r="";for(let t=0;t<e.length;t++)r+=String.fromCharCode(e[t]);return r}};

	const TextDecoder$1=extractGlobal("TextDecoder",TextDecoder$2);

	let TextEncoder$2 = class TextEncoder{encode(e){const t=new Uint8Array(e.length);for(let n=0;n<e.length;n++)t[n]=e.charCodeAt(n);return t}};

	const TextEncoder$1=extractGlobal("TextEncoder",TextEncoder$2);

	function isFunction$1(n){return "function"==typeof n}

	function arrayChunk(r,t){const n=Math.ceil(r.length/t);if(1===n)return [r];const e=Array(n);for(let c=0;c<n;c++){const n=c*t;e[c]=r.slice(n,n+t);}return e}

	function arrayFlatten(t){if(0===t.length)return [];if(1===t.length)return t[0];let e=0;for(let n=0;n<t.length;n++)e+=t[n].length;const n=new Array(e);let r=-1;for(let e=0;e<t.length;e++){const l=t[e];for(let t=0;t<l.length;t++)n[++r]=l[t];}return n}

	function assert$1(n,r){if(!n)throw new Error(isFunction$1(r)?r():r)}function assertReturn(n,r){return assert$1(null!=n,r),n}function assertUnreachable(n){throw new Error(`This codepath should be unreachable. Unhandled input: ${n}`)}

	const BigInt$1="function"==typeof xglobal.BigInt&&"function"==typeof xglobal.BigInt.asIntN?xglobal.BigInt:()=>Number.NaN;

	const _0n$2=BigInt$1(0);const _1n$2=BigInt$1(1);BigInt$1(2);BigInt$1(3);BigInt$1(4);BigInt$1(5);BigInt$1(6);BigInt$1(7);BigInt$1(8);BigInt$1(9);BigInt$1(10);BigInt$1(100);BigInt$1(1e3);BigInt$1(1e6);BigInt$1(1e9);BigInt$1(Number.MAX_SAFE_INTEGER);BigInt$1(94906265);

	const U8_MAX=BigInt$1(256),U16_MAX=BigInt$1(65536);function u8aToBigInt(t,{isLe:n=!0,isNegative:e=!1}={}){if(!t||!t.length)return BigInt$1(0);const i=n?t:t.reverse(),g=new DataView(i.buffer,i.byteOffset),o=i.length%2;let r=BigInt$1(0);if(e){for(let t=i.length-2;t>=o;t-=2)r=r*U16_MAX+BigInt$1(65535^g.getUint16(t,!0));o&&(r=r*U8_MAX+BigInt$1(255^g.getUint8(0)));}else {for(let t=i.length-2;t>=o;t-=2)r=r*U16_MAX+BigInt$1(g.getUint16(t,!0));o&&(r=r*U8_MAX+BigInt$1(g.getUint8(0)));}return e?r*-_1n$2-_1n$2:r}

	const CHR="0123456789abcdef",U8$1=new Uint8Array(256),U16$1=new Uint8Array(65536);for(let t=0;t<CHR.length;t++)U8$1[0|CHR[t].charCodeAt(0)]=0|t,t>9&&(U8$1[0|CHR[t].toUpperCase().charCodeAt(0)]=0|t);for(let e=0;e<256;e++){const r=e<<8;for(let n=0;n<256;n++)U16$1[r|n]=U8$1[e]<<4|U8$1[n];}function hexToU8a(t,e=-1){if(!t)return new Uint8Array;let r=t.startsWith("0x")?2:0;const n=Math.ceil((t.length-r)/2),o=Math.ceil(-1===e?n:e/8),a=new Uint8Array(o);for(let e=o>n?o-n:0;e<o;e++,r+=2)a[e]=U16$1[t.charCodeAt(r)<<8|t.charCodeAt(r+1)];return a}

	function hexToBigInt(i,{isLe:t=!1,isNegative:o=!1}={}){return i&&"0x"!==i?u8aToBigInt(hexToU8a(i),{isLe:t,isNegative:o}):BigInt$1(0)}

	var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

	function getAugmentedNamespace(n) {
		if (n.__esModule) return n;
		var a = Object.defineProperty({}, '__esModule', {value: true});
		Object.keys(n).forEach(function (k) {
			var d = Object.getOwnPropertyDescriptor(n, k);
			Object.defineProperty(a, k, d.get ? d : {
				enumerable: true,
				get: function () {
					return n[k];
				}
			});
		});
		return a;
	}

	function commonjsRequire (path) {
		throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
	}

	var bn = {exports: {}};

	!function(t,i){function r(t,i){if(!t)throw new Error(i||"Assertion failed")}function n(t,i){t.super_=i;var r=function(){};r.prototype=i.prototype,t.prototype=new r,t.prototype.constructor=t;}function h(t,i,r){if(h.isBN(t))return t;this.negative=0,this.words=null,this.length=0,this.red=null,null!==t&&("le"!==i&&"be"!==i||(r=i,i=10),this._init(t||0,i||10,r||"be"));}var e;"object"==typeof t?t.exports=h:i.BN=h,h.BN=h,h.wordSize=26;try{e="undefined"!=typeof window&&void 0!==window.Buffer?window.Buffer:require("buffer").Buffer;}catch(t){}function o(t,i){var n=t.charCodeAt(i);return n>=48&&n<=57?n-48:n>=65&&n<=70?n-55:n>=97&&n<=102?n-87:void r(!1,"Invalid character in "+t)}function s(t,i,r){var n=o(t,r);return r-1>=i&&(n|=o(t,r-1)<<4),n}function u(t,i,n,h){for(var e=0,o=0,s=Math.min(t.length,n),u=i;u<s;u++){var a=t.charCodeAt(u)-48;e*=h,o=a>=49?a-49+10:a>=17?a-17+10:a,r(a>=0&&o<h,"Invalid character"),e+=o;}return e}function a(t,i){t.words=i.words,t.length=i.length,t.negative=i.negative,t.red=i.red;}if(h.isBN=function(t){return t instanceof h||null!==t&&"object"==typeof t&&t.constructor.wordSize===h.wordSize&&Array.isArray(t.words)},h.max=function(t,i){return t.cmp(i)>0?t:i},h.min=function(t,i){return t.cmp(i)<0?t:i},h.prototype._init=function(t,i,n){if("number"==typeof t)return this._initNumber(t,i,n);if("object"==typeof t)return this._initArray(t,i,n);"hex"===i&&(i=16),r(i===(0|i)&&i>=2&&i<=36);var h=0;"-"===(t=t.toString().replace(/\s+/g,""))[0]&&(h++,this.negative=1),h<t.length&&(16===i?this._parseHex(t,h,n):(this._parseBase(t,i,h),"le"===n&&this._initArray(this.toArray(),i,n)));},h.prototype._initNumber=function(t,i,n){t<0&&(this.negative=1,t=-t),t<67108864?(this.words=[67108863&t],this.length=1):t<4503599627370496?(this.words=[67108863&t,t/67108864&67108863],this.length=2):(r(t<9007199254740992),this.words=[67108863&t,t/67108864&67108863,1],this.length=3),"le"===n&&this._initArray(this.toArray(),i,n);},h.prototype._initArray=function(t,i,n){if(r("number"==typeof t.length),t.length<=0)return this.words=[0],this.length=1,this;this.length=Math.ceil(t.length/3),this.words=new Array(this.length);for(var h=0;h<this.length;h++)this.words[h]=0;var e,o,s=0;if("be"===n)for(h=t.length-1,e=0;h>=0;h-=3)o=t[h]|t[h-1]<<8|t[h-2]<<16,this.words[e]|=o<<s&67108863,this.words[e+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,e++);else if("le"===n)for(h=0,e=0;h<t.length;h+=3)o=t[h]|t[h+1]<<8|t[h+2]<<16,this.words[e]|=o<<s&67108863,this.words[e+1]=o>>>26-s&67108863,(s+=24)>=26&&(s-=26,e++);return this._strip()},h.prototype._parseHex=function(t,i,r){this.length=Math.ceil((t.length-i)/6),this.words=new Array(this.length);for(var n=0;n<this.length;n++)this.words[n]=0;var h,e=0,o=0;if("be"===r)for(n=t.length-1;n>=i;n-=2)h=s(t,i,n)<<e,this.words[o]|=67108863&h,e>=18?(e-=18,o+=1,this.words[o]|=h>>>26):e+=8;else for(n=(t.length-i)%2==0?i+1:i;n<t.length;n+=2)h=s(t,i,n)<<e,this.words[o]|=67108863&h,e>=18?(e-=18,o+=1,this.words[o]|=h>>>26):e+=8;this._strip();},h.prototype._parseBase=function(t,i,r){this.words=[0],this.length=1;for(var n=0,h=1;h<=67108863;h*=i)n++;n--,h=h/i|0;for(var e=t.length-r,o=e%n,s=Math.min(e,e-o)+r,a=0,l=r;l<s;l+=n)a=u(t,l,l+n,i),this.imuln(h),this.words[0]+a<67108864?this.words[0]+=a:this._iaddn(a);if(0!==o){var m=1;for(a=u(t,l,t.length,i),l=0;l<o;l++)m*=i;this.imuln(m),this.words[0]+a<67108864?this.words[0]+=a:this._iaddn(a);}this._strip();},h.prototype.copy=function(t){t.words=new Array(this.length);for(var i=0;i<this.length;i++)t.words[i]=this.words[i];t.length=this.length,t.negative=this.negative,t.red=this.red;},h.prototype._move=function(t){a(t,this);},h.prototype.clone=function(){var t=new h(null);return this.copy(t),t},h.prototype._expand=function(t){for(;this.length<t;)this.words[this.length++]=0;return this},h.prototype._strip=function(){for(;this.length>1&&0===this.words[this.length-1];)this.length--;return this._normSign()},h.prototype._normSign=function(){return 1===this.length&&0===this.words[0]&&(this.negative=0),this},"undefined"!=typeof Symbol&&"function"==typeof Symbol.for)try{h.prototype[Symbol.for("nodejs.util.inspect.custom")]=l;}catch(t){h.prototype.inspect=l;}else h.prototype.inspect=l;function l(){return (this.red?"<BN-R: ":"<BN: ")+this.toString(16)+">"}var m=["","0","00","000","0000","00000","000000","0000000","00000000","000000000","0000000000","00000000000","000000000000","0000000000000","00000000000000","000000000000000","0000000000000000","00000000000000000","000000000000000000","0000000000000000000","00000000000000000000","000000000000000000000","0000000000000000000000","00000000000000000000000","000000000000000000000000","0000000000000000000000000"],f=[0,0,25,16,12,11,10,9,8,8,7,7,7,7,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],d=[0,0,33554432,43046721,16777216,48828125,60466176,40353607,16777216,43046721,1e7,19487171,35831808,62748517,7529536,11390625,16777216,24137569,34012224,47045881,64e6,4084101,5153632,6436343,7962624,9765625,11881376,14348907,17210368,20511149,243e5,28629151,33554432,39135393,45435424,52521875,60466176];function p(t,i,r){r.negative=i.negative^t.negative;var n=t.length+i.length|0;r.length=n,n=n-1|0;var h=0|t.words[0],e=0|i.words[0],o=h*e,s=67108863&o,u=o/67108864|0;r.words[0]=s;for(var a=1;a<n;a++){for(var l=u>>>26,m=67108863&u,f=Math.min(a,i.length-1),d=Math.max(0,a-t.length+1);d<=f;d++){var p=a-d|0;l+=(o=(h=0|t.words[p])*(e=0|i.words[d])+m)/67108864|0,m=67108863&o;}r.words[a]=0|m,u=0|l;}return 0!==u?r.words[a]=0|u:r.length--,r._strip()}h.prototype.toString=function(t,i){var n;if(i=0|i||1,16===(t=t||10)||"hex"===t){n="";for(var h=0,e=0,o=0;o<this.length;o++){var s=this.words[o],u=(16777215&(s<<h|e)).toString(16);e=s>>>24-h&16777215,(h+=2)>=26&&(h-=26,o--),n=0!==e||o!==this.length-1?m[6-u.length]+u+n:u+n;}for(0!==e&&(n=e.toString(16)+n);n.length%i!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}if(t===(0|t)&&t>=2&&t<=36){var a=f[t],l=d[t];n="";var p=this.clone();for(p.negative=0;!p.isZero();){var M=p.modrn(l).toString(t);n=(p=p.idivn(l)).isZero()?M+n:m[a-M.length]+M+n;}for(this.isZero()&&(n="0"+n);n.length%i!=0;)n="0"+n;return 0!==this.negative&&(n="-"+n),n}r(!1,"Base should be between 2 and 36");},h.prototype.toNumber=function(){var t=this.words[0];return 2===this.length?t+=67108864*this.words[1]:3===this.length&&1===this.words[2]?t+=4503599627370496+67108864*this.words[1]:this.length>2&&r(!1,"Number can only safely store up to 53 bits"),0!==this.negative?-t:t},h.prototype.toJSON=function(){return this.toString(16,2)},e&&(h.prototype.toBuffer=function(t,i){return this.toArrayLike(e,t,i)}),h.prototype.toArray=function(t,i){return this.toArrayLike(Array,t,i)},h.prototype.toArrayLike=function(t,i,n){this._strip();var h=this.byteLength(),e=n||Math.max(1,h);r(h<=e,"byte array longer than desired length"),r(e>0,"Requested array length <= 0");var o=function(t,i){return t.allocUnsafe?t.allocUnsafe(i):new t(i)}(t,e);return this["_toArrayLike"+("le"===i?"LE":"BE")](o,h),o},h.prototype._toArrayLikeLE=function(t,i){for(var r=0,n=0,h=0,e=0;h<this.length;h++){var o=this.words[h]<<e|n;t[r++]=255&o,r<t.length&&(t[r++]=o>>8&255),r<t.length&&(t[r++]=o>>16&255),6===e?(r<t.length&&(t[r++]=o>>24&255),n=0,e=0):(n=o>>>24,e+=2);}if(r<t.length)for(t[r++]=n;r<t.length;)t[r++]=0;},h.prototype._toArrayLikeBE=function(t,i){for(var r=t.length-1,n=0,h=0,e=0;h<this.length;h++){var o=this.words[h]<<e|n;t[r--]=255&o,r>=0&&(t[r--]=o>>8&255),r>=0&&(t[r--]=o>>16&255),6===e?(r>=0&&(t[r--]=o>>24&255),n=0,e=0):(n=o>>>24,e+=2);}if(r>=0)for(t[r--]=n;r>=0;)t[r--]=0;},Math.clz32?h.prototype._countBits=function(t){return 32-Math.clz32(t)}:h.prototype._countBits=function(t){var i=t,r=0;return i>=4096&&(r+=13,i>>>=13),i>=64&&(r+=7,i>>>=7),i>=8&&(r+=4,i>>>=4),i>=2&&(r+=2,i>>>=2),r+i},h.prototype._zeroBits=function(t){if(0===t)return 26;var i=t,r=0;return 0==(8191&i)&&(r+=13,i>>>=13),0==(127&i)&&(r+=7,i>>>=7),0==(15&i)&&(r+=4,i>>>=4),0==(3&i)&&(r+=2,i>>>=2),0==(1&i)&&r++,r},h.prototype.bitLength=function(){var t=this.words[this.length-1],i=this._countBits(t);return 26*(this.length-1)+i},h.prototype.zeroBits=function(){if(this.isZero())return 0;for(var t=0,i=0;i<this.length;i++){var r=this._zeroBits(this.words[i]);if(t+=r,26!==r)break}return t},h.prototype.byteLength=function(){return Math.ceil(this.bitLength()/8)},h.prototype.toTwos=function(t){return 0!==this.negative?this.abs().inotn(t).iaddn(1):this.clone()},h.prototype.fromTwos=function(t){return this.testn(t-1)?this.notn(t).iaddn(1).ineg():this.clone()},h.prototype.isNeg=function(){return 0!==this.negative},h.prototype.neg=function(){return this.clone().ineg()},h.prototype.ineg=function(){return this.isZero()||(this.negative^=1),this},h.prototype.iuor=function(t){for(;this.length<t.length;)this.words[this.length++]=0;for(var i=0;i<t.length;i++)this.words[i]=this.words[i]|t.words[i];return this._strip()},h.prototype.ior=function(t){return r(0==(this.negative|t.negative)),this.iuor(t)},h.prototype.or=function(t){return this.length>t.length?this.clone().ior(t):t.clone().ior(this)},h.prototype.uor=function(t){return this.length>t.length?this.clone().iuor(t):t.clone().iuor(this)},h.prototype.iuand=function(t){var i;i=this.length>t.length?t:this;for(var r=0;r<i.length;r++)this.words[r]=this.words[r]&t.words[r];return this.length=i.length,this._strip()},h.prototype.iand=function(t){return r(0==(this.negative|t.negative)),this.iuand(t)},h.prototype.and=function(t){return this.length>t.length?this.clone().iand(t):t.clone().iand(this)},h.prototype.uand=function(t){return this.length>t.length?this.clone().iuand(t):t.clone().iuand(this)},h.prototype.iuxor=function(t){var i,r;this.length>t.length?(i=this,r=t):(i=t,r=this);for(var n=0;n<r.length;n++)this.words[n]=i.words[n]^r.words[n];if(this!==i)for(;n<i.length;n++)this.words[n]=i.words[n];return this.length=i.length,this._strip()},h.prototype.ixor=function(t){return r(0==(this.negative|t.negative)),this.iuxor(t)},h.prototype.xor=function(t){return this.length>t.length?this.clone().ixor(t):t.clone().ixor(this)},h.prototype.uxor=function(t){return this.length>t.length?this.clone().iuxor(t):t.clone().iuxor(this)},h.prototype.inotn=function(t){r("number"==typeof t&&t>=0);var i=0|Math.ceil(t/26),n=t%26;this._expand(i),n>0&&i--;for(var h=0;h<i;h++)this.words[h]=67108863&~this.words[h];return n>0&&(this.words[h]=~this.words[h]&67108863>>26-n),this._strip()},h.prototype.notn=function(t){return this.clone().inotn(t)},h.prototype.setn=function(t,i){r("number"==typeof t&&t>=0);var n=t/26|0,h=t%26;return this._expand(n+1),this.words[n]=i?this.words[n]|1<<h:this.words[n]&~(1<<h),this._strip()},h.prototype.iadd=function(t){var i,r,n;if(0!==this.negative&&0===t.negative)return this.negative=0,i=this.isub(t),this.negative^=1,this._normSign();if(0===this.negative&&0!==t.negative)return t.negative=0,i=this.isub(t),t.negative=1,i._normSign();this.length>t.length?(r=this,n=t):(r=t,n=this);for(var h=0,e=0;e<n.length;e++)i=(0|r.words[e])+(0|n.words[e])+h,this.words[e]=67108863&i,h=i>>>26;for(;0!==h&&e<r.length;e++)i=(0|r.words[e])+h,this.words[e]=67108863&i,h=i>>>26;if(this.length=r.length,0!==h)this.words[this.length]=h,this.length++;else if(r!==this)for(;e<r.length;e++)this.words[e]=r.words[e];return this},h.prototype.add=function(t){var i;return 0!==t.negative&&0===this.negative?(t.negative=0,i=this.sub(t),t.negative^=1,i):0===t.negative&&0!==this.negative?(this.negative=0,i=t.sub(this),this.negative=1,i):this.length>t.length?this.clone().iadd(t):t.clone().iadd(this)},h.prototype.isub=function(t){if(0!==t.negative){t.negative=0;var i=this.iadd(t);return t.negative=1,i._normSign()}if(0!==this.negative)return this.negative=0,this.iadd(t),this.negative=1,this._normSign();var r,n,h=this.cmp(t);if(0===h)return this.negative=0,this.length=1,this.words[0]=0,this;h>0?(r=this,n=t):(r=t,n=this);for(var e=0,o=0;o<n.length;o++)e=(i=(0|r.words[o])-(0|n.words[o])+e)>>26,this.words[o]=67108863&i;for(;0!==e&&o<r.length;o++)e=(i=(0|r.words[o])+e)>>26,this.words[o]=67108863&i;if(0===e&&o<r.length&&r!==this)for(;o<r.length;o++)this.words[o]=r.words[o];return this.length=Math.max(this.length,o),r!==this&&(this.negative=1),this._strip()},h.prototype.sub=function(t){return this.clone().isub(t)};var M=function(t,i,r){var n,h,e,o=t.words,s=i.words,u=r.words,a=0,l=0|o[0],m=8191&l,f=l>>>13,d=0|o[1],p=8191&d,M=d>>>13,v=0|o[2],g=8191&v,c=v>>>13,w=0|o[3],y=8191&w,b=w>>>13,_=0|o[4],k=8191&_,A=_>>>13,x=0|o[5],S=8191&x,B=x>>>13,q=0|o[6],R=8191&q,Z=q>>>13,L=0|o[7],N=8191&L,j=L>>>13,E=0|o[8],I=8191&E,z=E>>>13,T=0|o[9],O=8191&T,H=T>>>13,K=0|s[0],P=8191&K,C=K>>>13,D=0|s[1],F=8191&D,U=D>>>13,G=0|s[2],J=8191&G,Q=G>>>13,V=0|s[3],W=8191&V,X=V>>>13,Y=0|s[4],$=8191&Y,tt=Y>>>13,it=0|s[5],rt=8191&it,nt=it>>>13,ht=0|s[6],et=8191&ht,ot=ht>>>13,st=0|s[7],ut=8191&st,at=st>>>13,lt=0|s[8],mt=8191&lt,ft=lt>>>13,dt=0|s[9],pt=8191&dt,Mt=dt>>>13;r.negative=t.negative^i.negative,r.length=19;var vt=(a+(n=Math.imul(m,P))|0)+((8191&(h=(h=Math.imul(m,C))+Math.imul(f,P)|0))<<13)|0;a=((e=Math.imul(f,C))+(h>>>13)|0)+(vt>>>26)|0,vt&=67108863,n=Math.imul(p,P),h=(h=Math.imul(p,C))+Math.imul(M,P)|0,e=Math.imul(M,C);var gt=(a+(n=n+Math.imul(m,F)|0)|0)+((8191&(h=(h=h+Math.imul(m,U)|0)+Math.imul(f,F)|0))<<13)|0;a=((e=e+Math.imul(f,U)|0)+(h>>>13)|0)+(gt>>>26)|0,gt&=67108863,n=Math.imul(g,P),h=(h=Math.imul(g,C))+Math.imul(c,P)|0,e=Math.imul(c,C),n=n+Math.imul(p,F)|0,h=(h=h+Math.imul(p,U)|0)+Math.imul(M,F)|0,e=e+Math.imul(M,U)|0;var ct=(a+(n=n+Math.imul(m,J)|0)|0)+((8191&(h=(h=h+Math.imul(m,Q)|0)+Math.imul(f,J)|0))<<13)|0;a=((e=e+Math.imul(f,Q)|0)+(h>>>13)|0)+(ct>>>26)|0,ct&=67108863,n=Math.imul(y,P),h=(h=Math.imul(y,C))+Math.imul(b,P)|0,e=Math.imul(b,C),n=n+Math.imul(g,F)|0,h=(h=h+Math.imul(g,U)|0)+Math.imul(c,F)|0,e=e+Math.imul(c,U)|0,n=n+Math.imul(p,J)|0,h=(h=h+Math.imul(p,Q)|0)+Math.imul(M,J)|0,e=e+Math.imul(M,Q)|0;var wt=(a+(n=n+Math.imul(m,W)|0)|0)+((8191&(h=(h=h+Math.imul(m,X)|0)+Math.imul(f,W)|0))<<13)|0;a=((e=e+Math.imul(f,X)|0)+(h>>>13)|0)+(wt>>>26)|0,wt&=67108863,n=Math.imul(k,P),h=(h=Math.imul(k,C))+Math.imul(A,P)|0,e=Math.imul(A,C),n=n+Math.imul(y,F)|0,h=(h=h+Math.imul(y,U)|0)+Math.imul(b,F)|0,e=e+Math.imul(b,U)|0,n=n+Math.imul(g,J)|0,h=(h=h+Math.imul(g,Q)|0)+Math.imul(c,J)|0,e=e+Math.imul(c,Q)|0,n=n+Math.imul(p,W)|0,h=(h=h+Math.imul(p,X)|0)+Math.imul(M,W)|0,e=e+Math.imul(M,X)|0;var yt=(a+(n=n+Math.imul(m,$)|0)|0)+((8191&(h=(h=h+Math.imul(m,tt)|0)+Math.imul(f,$)|0))<<13)|0;a=((e=e+Math.imul(f,tt)|0)+(h>>>13)|0)+(yt>>>26)|0,yt&=67108863,n=Math.imul(S,P),h=(h=Math.imul(S,C))+Math.imul(B,P)|0,e=Math.imul(B,C),n=n+Math.imul(k,F)|0,h=(h=h+Math.imul(k,U)|0)+Math.imul(A,F)|0,e=e+Math.imul(A,U)|0,n=n+Math.imul(y,J)|0,h=(h=h+Math.imul(y,Q)|0)+Math.imul(b,J)|0,e=e+Math.imul(b,Q)|0,n=n+Math.imul(g,W)|0,h=(h=h+Math.imul(g,X)|0)+Math.imul(c,W)|0,e=e+Math.imul(c,X)|0,n=n+Math.imul(p,$)|0,h=(h=h+Math.imul(p,tt)|0)+Math.imul(M,$)|0,e=e+Math.imul(M,tt)|0;var bt=(a+(n=n+Math.imul(m,rt)|0)|0)+((8191&(h=(h=h+Math.imul(m,nt)|0)+Math.imul(f,rt)|0))<<13)|0;a=((e=e+Math.imul(f,nt)|0)+(h>>>13)|0)+(bt>>>26)|0,bt&=67108863,n=Math.imul(R,P),h=(h=Math.imul(R,C))+Math.imul(Z,P)|0,e=Math.imul(Z,C),n=n+Math.imul(S,F)|0,h=(h=h+Math.imul(S,U)|0)+Math.imul(B,F)|0,e=e+Math.imul(B,U)|0,n=n+Math.imul(k,J)|0,h=(h=h+Math.imul(k,Q)|0)+Math.imul(A,J)|0,e=e+Math.imul(A,Q)|0,n=n+Math.imul(y,W)|0,h=(h=h+Math.imul(y,X)|0)+Math.imul(b,W)|0,e=e+Math.imul(b,X)|0,n=n+Math.imul(g,$)|0,h=(h=h+Math.imul(g,tt)|0)+Math.imul(c,$)|0,e=e+Math.imul(c,tt)|0,n=n+Math.imul(p,rt)|0,h=(h=h+Math.imul(p,nt)|0)+Math.imul(M,rt)|0,e=e+Math.imul(M,nt)|0;var _t=(a+(n=n+Math.imul(m,et)|0)|0)+((8191&(h=(h=h+Math.imul(m,ot)|0)+Math.imul(f,et)|0))<<13)|0;a=((e=e+Math.imul(f,ot)|0)+(h>>>13)|0)+(_t>>>26)|0,_t&=67108863,n=Math.imul(N,P),h=(h=Math.imul(N,C))+Math.imul(j,P)|0,e=Math.imul(j,C),n=n+Math.imul(R,F)|0,h=(h=h+Math.imul(R,U)|0)+Math.imul(Z,F)|0,e=e+Math.imul(Z,U)|0,n=n+Math.imul(S,J)|0,h=(h=h+Math.imul(S,Q)|0)+Math.imul(B,J)|0,e=e+Math.imul(B,Q)|0,n=n+Math.imul(k,W)|0,h=(h=h+Math.imul(k,X)|0)+Math.imul(A,W)|0,e=e+Math.imul(A,X)|0,n=n+Math.imul(y,$)|0,h=(h=h+Math.imul(y,tt)|0)+Math.imul(b,$)|0,e=e+Math.imul(b,tt)|0,n=n+Math.imul(g,rt)|0,h=(h=h+Math.imul(g,nt)|0)+Math.imul(c,rt)|0,e=e+Math.imul(c,nt)|0,n=n+Math.imul(p,et)|0,h=(h=h+Math.imul(p,ot)|0)+Math.imul(M,et)|0,e=e+Math.imul(M,ot)|0;var kt=(a+(n=n+Math.imul(m,ut)|0)|0)+((8191&(h=(h=h+Math.imul(m,at)|0)+Math.imul(f,ut)|0))<<13)|0;a=((e=e+Math.imul(f,at)|0)+(h>>>13)|0)+(kt>>>26)|0,kt&=67108863,n=Math.imul(I,P),h=(h=Math.imul(I,C))+Math.imul(z,P)|0,e=Math.imul(z,C),n=n+Math.imul(N,F)|0,h=(h=h+Math.imul(N,U)|0)+Math.imul(j,F)|0,e=e+Math.imul(j,U)|0,n=n+Math.imul(R,J)|0,h=(h=h+Math.imul(R,Q)|0)+Math.imul(Z,J)|0,e=e+Math.imul(Z,Q)|0,n=n+Math.imul(S,W)|0,h=(h=h+Math.imul(S,X)|0)+Math.imul(B,W)|0,e=e+Math.imul(B,X)|0,n=n+Math.imul(k,$)|0,h=(h=h+Math.imul(k,tt)|0)+Math.imul(A,$)|0,e=e+Math.imul(A,tt)|0,n=n+Math.imul(y,rt)|0,h=(h=h+Math.imul(y,nt)|0)+Math.imul(b,rt)|0,e=e+Math.imul(b,nt)|0,n=n+Math.imul(g,et)|0,h=(h=h+Math.imul(g,ot)|0)+Math.imul(c,et)|0,e=e+Math.imul(c,ot)|0,n=n+Math.imul(p,ut)|0,h=(h=h+Math.imul(p,at)|0)+Math.imul(M,ut)|0,e=e+Math.imul(M,at)|0;var At=(a+(n=n+Math.imul(m,mt)|0)|0)+((8191&(h=(h=h+Math.imul(m,ft)|0)+Math.imul(f,mt)|0))<<13)|0;a=((e=e+Math.imul(f,ft)|0)+(h>>>13)|0)+(At>>>26)|0,At&=67108863,n=Math.imul(O,P),h=(h=Math.imul(O,C))+Math.imul(H,P)|0,e=Math.imul(H,C),n=n+Math.imul(I,F)|0,h=(h=h+Math.imul(I,U)|0)+Math.imul(z,F)|0,e=e+Math.imul(z,U)|0,n=n+Math.imul(N,J)|0,h=(h=h+Math.imul(N,Q)|0)+Math.imul(j,J)|0,e=e+Math.imul(j,Q)|0,n=n+Math.imul(R,W)|0,h=(h=h+Math.imul(R,X)|0)+Math.imul(Z,W)|0,e=e+Math.imul(Z,X)|0,n=n+Math.imul(S,$)|0,h=(h=h+Math.imul(S,tt)|0)+Math.imul(B,$)|0,e=e+Math.imul(B,tt)|0,n=n+Math.imul(k,rt)|0,h=(h=h+Math.imul(k,nt)|0)+Math.imul(A,rt)|0,e=e+Math.imul(A,nt)|0,n=n+Math.imul(y,et)|0,h=(h=h+Math.imul(y,ot)|0)+Math.imul(b,et)|0,e=e+Math.imul(b,ot)|0,n=n+Math.imul(g,ut)|0,h=(h=h+Math.imul(g,at)|0)+Math.imul(c,ut)|0,e=e+Math.imul(c,at)|0,n=n+Math.imul(p,mt)|0,h=(h=h+Math.imul(p,ft)|0)+Math.imul(M,mt)|0,e=e+Math.imul(M,ft)|0;var xt=(a+(n=n+Math.imul(m,pt)|0)|0)+((8191&(h=(h=h+Math.imul(m,Mt)|0)+Math.imul(f,pt)|0))<<13)|0;a=((e=e+Math.imul(f,Mt)|0)+(h>>>13)|0)+(xt>>>26)|0,xt&=67108863,n=Math.imul(O,F),h=(h=Math.imul(O,U))+Math.imul(H,F)|0,e=Math.imul(H,U),n=n+Math.imul(I,J)|0,h=(h=h+Math.imul(I,Q)|0)+Math.imul(z,J)|0,e=e+Math.imul(z,Q)|0,n=n+Math.imul(N,W)|0,h=(h=h+Math.imul(N,X)|0)+Math.imul(j,W)|0,e=e+Math.imul(j,X)|0,n=n+Math.imul(R,$)|0,h=(h=h+Math.imul(R,tt)|0)+Math.imul(Z,$)|0,e=e+Math.imul(Z,tt)|0,n=n+Math.imul(S,rt)|0,h=(h=h+Math.imul(S,nt)|0)+Math.imul(B,rt)|0,e=e+Math.imul(B,nt)|0,n=n+Math.imul(k,et)|0,h=(h=h+Math.imul(k,ot)|0)+Math.imul(A,et)|0,e=e+Math.imul(A,ot)|0,n=n+Math.imul(y,ut)|0,h=(h=h+Math.imul(y,at)|0)+Math.imul(b,ut)|0,e=e+Math.imul(b,at)|0,n=n+Math.imul(g,mt)|0,h=(h=h+Math.imul(g,ft)|0)+Math.imul(c,mt)|0,e=e+Math.imul(c,ft)|0;var St=(a+(n=n+Math.imul(p,pt)|0)|0)+((8191&(h=(h=h+Math.imul(p,Mt)|0)+Math.imul(M,pt)|0))<<13)|0;a=((e=e+Math.imul(M,Mt)|0)+(h>>>13)|0)+(St>>>26)|0,St&=67108863,n=Math.imul(O,J),h=(h=Math.imul(O,Q))+Math.imul(H,J)|0,e=Math.imul(H,Q),n=n+Math.imul(I,W)|0,h=(h=h+Math.imul(I,X)|0)+Math.imul(z,W)|0,e=e+Math.imul(z,X)|0,n=n+Math.imul(N,$)|0,h=(h=h+Math.imul(N,tt)|0)+Math.imul(j,$)|0,e=e+Math.imul(j,tt)|0,n=n+Math.imul(R,rt)|0,h=(h=h+Math.imul(R,nt)|0)+Math.imul(Z,rt)|0,e=e+Math.imul(Z,nt)|0,n=n+Math.imul(S,et)|0,h=(h=h+Math.imul(S,ot)|0)+Math.imul(B,et)|0,e=e+Math.imul(B,ot)|0,n=n+Math.imul(k,ut)|0,h=(h=h+Math.imul(k,at)|0)+Math.imul(A,ut)|0,e=e+Math.imul(A,at)|0,n=n+Math.imul(y,mt)|0,h=(h=h+Math.imul(y,ft)|0)+Math.imul(b,mt)|0,e=e+Math.imul(b,ft)|0;var Bt=(a+(n=n+Math.imul(g,pt)|0)|0)+((8191&(h=(h=h+Math.imul(g,Mt)|0)+Math.imul(c,pt)|0))<<13)|0;a=((e=e+Math.imul(c,Mt)|0)+(h>>>13)|0)+(Bt>>>26)|0,Bt&=67108863,n=Math.imul(O,W),h=(h=Math.imul(O,X))+Math.imul(H,W)|0,e=Math.imul(H,X),n=n+Math.imul(I,$)|0,h=(h=h+Math.imul(I,tt)|0)+Math.imul(z,$)|0,e=e+Math.imul(z,tt)|0,n=n+Math.imul(N,rt)|0,h=(h=h+Math.imul(N,nt)|0)+Math.imul(j,rt)|0,e=e+Math.imul(j,nt)|0,n=n+Math.imul(R,et)|0,h=(h=h+Math.imul(R,ot)|0)+Math.imul(Z,et)|0,e=e+Math.imul(Z,ot)|0,n=n+Math.imul(S,ut)|0,h=(h=h+Math.imul(S,at)|0)+Math.imul(B,ut)|0,e=e+Math.imul(B,at)|0,n=n+Math.imul(k,mt)|0,h=(h=h+Math.imul(k,ft)|0)+Math.imul(A,mt)|0,e=e+Math.imul(A,ft)|0;var qt=(a+(n=n+Math.imul(y,pt)|0)|0)+((8191&(h=(h=h+Math.imul(y,Mt)|0)+Math.imul(b,pt)|0))<<13)|0;a=((e=e+Math.imul(b,Mt)|0)+(h>>>13)|0)+(qt>>>26)|0,qt&=67108863,n=Math.imul(O,$),h=(h=Math.imul(O,tt))+Math.imul(H,$)|0,e=Math.imul(H,tt),n=n+Math.imul(I,rt)|0,h=(h=h+Math.imul(I,nt)|0)+Math.imul(z,rt)|0,e=e+Math.imul(z,nt)|0,n=n+Math.imul(N,et)|0,h=(h=h+Math.imul(N,ot)|0)+Math.imul(j,et)|0,e=e+Math.imul(j,ot)|0,n=n+Math.imul(R,ut)|0,h=(h=h+Math.imul(R,at)|0)+Math.imul(Z,ut)|0,e=e+Math.imul(Z,at)|0,n=n+Math.imul(S,mt)|0,h=(h=h+Math.imul(S,ft)|0)+Math.imul(B,mt)|0,e=e+Math.imul(B,ft)|0;var Rt=(a+(n=n+Math.imul(k,pt)|0)|0)+((8191&(h=(h=h+Math.imul(k,Mt)|0)+Math.imul(A,pt)|0))<<13)|0;a=((e=e+Math.imul(A,Mt)|0)+(h>>>13)|0)+(Rt>>>26)|0,Rt&=67108863,n=Math.imul(O,rt),h=(h=Math.imul(O,nt))+Math.imul(H,rt)|0,e=Math.imul(H,nt),n=n+Math.imul(I,et)|0,h=(h=h+Math.imul(I,ot)|0)+Math.imul(z,et)|0,e=e+Math.imul(z,ot)|0,n=n+Math.imul(N,ut)|0,h=(h=h+Math.imul(N,at)|0)+Math.imul(j,ut)|0,e=e+Math.imul(j,at)|0,n=n+Math.imul(R,mt)|0,h=(h=h+Math.imul(R,ft)|0)+Math.imul(Z,mt)|0,e=e+Math.imul(Z,ft)|0;var Zt=(a+(n=n+Math.imul(S,pt)|0)|0)+((8191&(h=(h=h+Math.imul(S,Mt)|0)+Math.imul(B,pt)|0))<<13)|0;a=((e=e+Math.imul(B,Mt)|0)+(h>>>13)|0)+(Zt>>>26)|0,Zt&=67108863,n=Math.imul(O,et),h=(h=Math.imul(O,ot))+Math.imul(H,et)|0,e=Math.imul(H,ot),n=n+Math.imul(I,ut)|0,h=(h=h+Math.imul(I,at)|0)+Math.imul(z,ut)|0,e=e+Math.imul(z,at)|0,n=n+Math.imul(N,mt)|0,h=(h=h+Math.imul(N,ft)|0)+Math.imul(j,mt)|0,e=e+Math.imul(j,ft)|0;var Lt=(a+(n=n+Math.imul(R,pt)|0)|0)+((8191&(h=(h=h+Math.imul(R,Mt)|0)+Math.imul(Z,pt)|0))<<13)|0;a=((e=e+Math.imul(Z,Mt)|0)+(h>>>13)|0)+(Lt>>>26)|0,Lt&=67108863,n=Math.imul(O,ut),h=(h=Math.imul(O,at))+Math.imul(H,ut)|0,e=Math.imul(H,at),n=n+Math.imul(I,mt)|0,h=(h=h+Math.imul(I,ft)|0)+Math.imul(z,mt)|0,e=e+Math.imul(z,ft)|0;var Nt=(a+(n=n+Math.imul(N,pt)|0)|0)+((8191&(h=(h=h+Math.imul(N,Mt)|0)+Math.imul(j,pt)|0))<<13)|0;a=((e=e+Math.imul(j,Mt)|0)+(h>>>13)|0)+(Nt>>>26)|0,Nt&=67108863,n=Math.imul(O,mt),h=(h=Math.imul(O,ft))+Math.imul(H,mt)|0,e=Math.imul(H,ft);var jt=(a+(n=n+Math.imul(I,pt)|0)|0)+((8191&(h=(h=h+Math.imul(I,Mt)|0)+Math.imul(z,pt)|0))<<13)|0;a=((e=e+Math.imul(z,Mt)|0)+(h>>>13)|0)+(jt>>>26)|0,jt&=67108863;var Et=(a+(n=Math.imul(O,pt))|0)+((8191&(h=(h=Math.imul(O,Mt))+Math.imul(H,pt)|0))<<13)|0;return a=((e=Math.imul(H,Mt))+(h>>>13)|0)+(Et>>>26)|0,Et&=67108863,u[0]=vt,u[1]=gt,u[2]=ct,u[3]=wt,u[4]=yt,u[5]=bt,u[6]=_t,u[7]=kt,u[8]=At,u[9]=xt,u[10]=St,u[11]=Bt,u[12]=qt,u[13]=Rt,u[14]=Zt,u[15]=Lt,u[16]=Nt,u[17]=jt,u[18]=Et,0!==a&&(u[19]=a,r.length++),r};function v(t,i,r){r.negative=i.negative^t.negative,r.length=t.length+i.length;for(var n=0,h=0,e=0;e<r.length-1;e++){var o=h;h=0;for(var s=67108863&n,u=Math.min(e,i.length-1),a=Math.max(0,e-t.length+1);a<=u;a++){var l=e-a,m=(0|t.words[l])*(0|i.words[a]),f=67108863&m;s=67108863&(f=f+s|0),h+=(o=(o=o+(m/67108864|0)|0)+(f>>>26)|0)>>>26,o&=67108863;}r.words[e]=s,n=o,o=h;}return 0!==n?r.words[e]=n:r.length--,r._strip()}function g(t,i,r){return v(t,i,r)}Math.imul||(M=p),h.prototype.mulTo=function(t,i){var r=this.length+t.length;return 10===this.length&&10===t.length?M(this,t,i):r<63?p(this,t,i):r<1024?v(this,t,i):g(this,t,i)},h.prototype.mul=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),this.mulTo(t,i)},h.prototype.mulf=function(t){var i=new h(null);return i.words=new Array(this.length+t.length),g(this,t,i)},h.prototype.imul=function(t){return this.clone().mulTo(t,this)},h.prototype.imuln=function(t){var i=t<0;i&&(t=-t),r("number"==typeof t),r(t<67108864);for(var n=0,h=0;h<this.length;h++){var e=(0|this.words[h])*t,o=(67108863&e)+(67108863&n);n>>=26,n+=e/67108864|0,n+=o>>>26,this.words[h]=67108863&o;}return 0!==n&&(this.words[h]=n,this.length++),i?this.ineg():this},h.prototype.muln=function(t){return this.clone().imuln(t)},h.prototype.sqr=function(){return this.mul(this)},h.prototype.isqr=function(){return this.imul(this.clone())},h.prototype.pow=function(t){var i=function(t){for(var i=new Array(t.bitLength()),r=0;r<i.length;r++){var n=r/26|0,h=r%26;i[r]=t.words[n]>>>h&1;}return i}(t);if(0===i.length)return new h(1);for(var r=this,n=0;n<i.length&&0===i[n];n++,r=r.sqr());if(++n<i.length)for(var e=r.sqr();n<i.length;n++,e=e.sqr())0!==i[n]&&(r=r.mul(e));return r},h.prototype.iushln=function(t){r("number"==typeof t&&t>=0);var i,n=t%26,h=(t-n)/26,e=67108863>>>26-n<<26-n;if(0!==n){var o=0;for(i=0;i<this.length;i++){var s=this.words[i]&e,u=(0|this.words[i])-s<<n;this.words[i]=u|o,o=s>>>26-n;}o&&(this.words[i]=o,this.length++);}if(0!==h){for(i=this.length-1;i>=0;i--)this.words[i+h]=this.words[i];for(i=0;i<h;i++)this.words[i]=0;this.length+=h;}return this._strip()},h.prototype.ishln=function(t){return r(0===this.negative),this.iushln(t)},h.prototype.iushrn=function(t,i,n){var h;r("number"==typeof t&&t>=0),h=i?(i-i%26)/26:0;var e=t%26,o=Math.min((t-e)/26,this.length),s=67108863^67108863>>>e<<e,u=n;if(h-=o,h=Math.max(0,h),u){for(var a=0;a<o;a++)u.words[a]=this.words[a];u.length=o;}if(0===o);else if(this.length>o)for(this.length-=o,a=0;a<this.length;a++)this.words[a]=this.words[a+o];else this.words[0]=0,this.length=1;var l=0;for(a=this.length-1;a>=0&&(0!==l||a>=h);a--){var m=0|this.words[a];this.words[a]=l<<26-e|m>>>e,l=m&s;}return u&&0!==l&&(u.words[u.length++]=l),0===this.length&&(this.words[0]=0,this.length=1),this._strip()},h.prototype.ishrn=function(t,i,n){return r(0===this.negative),this.iushrn(t,i,n)},h.prototype.shln=function(t){return this.clone().ishln(t)},h.prototype.ushln=function(t){return this.clone().iushln(t)},h.prototype.shrn=function(t){return this.clone().ishrn(t)},h.prototype.ushrn=function(t){return this.clone().iushrn(t)},h.prototype.testn=function(t){r("number"==typeof t&&t>=0);var i=t%26,n=(t-i)/26,h=1<<i;return !(this.length<=n||!(this.words[n]&h))},h.prototype.imaskn=function(t){r("number"==typeof t&&t>=0);var i=t%26,n=(t-i)/26;if(r(0===this.negative,"imaskn works only with positive numbers"),this.length<=n)return this;if(0!==i&&n++,this.length=Math.min(n,this.length),0!==i){var h=67108863^67108863>>>i<<i;this.words[this.length-1]&=h;}return this._strip()},h.prototype.maskn=function(t){return this.clone().imaskn(t)},h.prototype.iaddn=function(t){return r("number"==typeof t),r(t<67108864),t<0?this.isubn(-t):0!==this.negative?1===this.length&&(0|this.words[0])<=t?(this.words[0]=t-(0|this.words[0]),this.negative=0,this):(this.negative=0,this.isubn(t),this.negative=1,this):this._iaddn(t)},h.prototype._iaddn=function(t){this.words[0]+=t;for(var i=0;i<this.length&&this.words[i]>=67108864;i++)this.words[i]-=67108864,i===this.length-1?this.words[i+1]=1:this.words[i+1]++;return this.length=Math.max(this.length,i+1),this},h.prototype.isubn=function(t){if(r("number"==typeof t),r(t<67108864),t<0)return this.iaddn(-t);if(0!==this.negative)return this.negative=0,this.iaddn(t),this.negative=1,this;if(this.words[0]-=t,1===this.length&&this.words[0]<0)this.words[0]=-this.words[0],this.negative=1;else for(var i=0;i<this.length&&this.words[i]<0;i++)this.words[i]+=67108864,this.words[i+1]-=1;return this._strip()},h.prototype.addn=function(t){return this.clone().iaddn(t)},h.prototype.subn=function(t){return this.clone().isubn(t)},h.prototype.iabs=function(){return this.negative=0,this},h.prototype.abs=function(){return this.clone().iabs()},h.prototype._ishlnsubmul=function(t,i,n){var h,e,o=t.length+n;this._expand(o);var s=0;for(h=0;h<t.length;h++){e=(0|this.words[h+n])+s;var u=(0|t.words[h])*i;s=((e-=67108863&u)>>26)-(u/67108864|0),this.words[h+n]=67108863&e;}for(;h<this.length-n;h++)s=(e=(0|this.words[h+n])+s)>>26,this.words[h+n]=67108863&e;if(0===s)return this._strip();for(r(-1===s),s=0,h=0;h<this.length;h++)s=(e=-(0|this.words[h])+s)>>26,this.words[h]=67108863&e;return this.negative=1,this._strip()},h.prototype._wordDiv=function(t,i){var r=(this.length,t.length),n=this.clone(),e=t,o=0|e.words[e.length-1];0!=(r=26-this._countBits(o))&&(e=e.ushln(r),n.iushln(r),o=0|e.words[e.length-1]);var s,u=n.length-e.length;if("mod"!==i){(s=new h(null)).length=u+1,s.words=new Array(s.length);for(var a=0;a<s.length;a++)s.words[a]=0;}var l=n.clone()._ishlnsubmul(e,1,u);0===l.negative&&(n=l,s&&(s.words[u]=1));for(var m=u-1;m>=0;m--){var f=67108864*(0|n.words[e.length+m])+(0|n.words[e.length+m-1]);for(f=Math.min(f/o|0,67108863),n._ishlnsubmul(e,f,m);0!==n.negative;)f--,n.negative=0,n._ishlnsubmul(e,1,m),n.isZero()||(n.negative^=1);s&&(s.words[m]=f);}return s&&s._strip(),n._strip(),"div"!==i&&0!==r&&n.iushrn(r),{div:s||null,mod:n}},h.prototype.divmod=function(t,i,n){return r(!t.isZero()),this.isZero()?{div:new h(0),mod:new h(0)}:0!==this.negative&&0===t.negative?(s=this.neg().divmod(t,i),"mod"!==i&&(e=s.div.neg()),"div"!==i&&(o=s.mod.neg(),n&&0!==o.negative&&o.iadd(t)),{div:e,mod:o}):0===this.negative&&0!==t.negative?(s=this.divmod(t.neg(),i),"mod"!==i&&(e=s.div.neg()),{div:e,mod:s.mod}):0!=(this.negative&t.negative)?(s=this.neg().divmod(t.neg(),i),"div"!==i&&(o=s.mod.neg(),n&&0!==o.negative&&o.isub(t)),{div:s.div,mod:o}):t.length>this.length||this.cmp(t)<0?{div:new h(0),mod:this}:1===t.length?"div"===i?{div:this.divn(t.words[0]),mod:null}:"mod"===i?{div:null,mod:new h(this.modrn(t.words[0]))}:{div:this.divn(t.words[0]),mod:new h(this.modrn(t.words[0]))}:this._wordDiv(t,i);var e,o,s;},h.prototype.div=function(t){return this.divmod(t,"div",!1).div},h.prototype.mod=function(t){return this.divmod(t,"mod",!1).mod},h.prototype.umod=function(t){return this.divmod(t,"mod",!0).mod},h.prototype.divRound=function(t){var i=this.divmod(t);if(i.mod.isZero())return i.div;var r=0!==i.div.negative?i.mod.isub(t):i.mod,n=t.ushrn(1),h=t.andln(1),e=r.cmp(n);return e<0||1===h&&0===e?i.div:0!==i.div.negative?i.div.isubn(1):i.div.iaddn(1)},h.prototype.modrn=function(t){var i=t<0;i&&(t=-t),r(t<=67108863);for(var n=(1<<26)%t,h=0,e=this.length-1;e>=0;e--)h=(n*h+(0|this.words[e]))%t;return i?-h:h},h.prototype.modn=function(t){return this.modrn(t)},h.prototype.idivn=function(t){var i=t<0;i&&(t=-t),r(t<=67108863);for(var n=0,h=this.length-1;h>=0;h--){var e=(0|this.words[h])+67108864*n;this.words[h]=e/t|0,n=e%t;}return this._strip(),i?this.ineg():this},h.prototype.divn=function(t){return this.clone().idivn(t)},h.prototype.egcd=function(t){r(0===t.negative),r(!t.isZero());var i=this,n=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var e=new h(1),o=new h(0),s=new h(0),u=new h(1),a=0;i.isEven()&&n.isEven();)i.iushrn(1),n.iushrn(1),++a;for(var l=n.clone(),m=i.clone();!i.isZero();){for(var f=0,d=1;0==(i.words[0]&d)&&f<26;++f,d<<=1);if(f>0)for(i.iushrn(f);f-- >0;)(e.isOdd()||o.isOdd())&&(e.iadd(l),o.isub(m)),e.iushrn(1),o.iushrn(1);for(var p=0,M=1;0==(n.words[0]&M)&&p<26;++p,M<<=1);if(p>0)for(n.iushrn(p);p-- >0;)(s.isOdd()||u.isOdd())&&(s.iadd(l),u.isub(m)),s.iushrn(1),u.iushrn(1);i.cmp(n)>=0?(i.isub(n),e.isub(s),o.isub(u)):(n.isub(i),s.isub(e),u.isub(o));}return {a:s,b:u,gcd:n.iushln(a)}},h.prototype._invmp=function(t){r(0===t.negative),r(!t.isZero());var i=this,n=t.clone();i=0!==i.negative?i.umod(t):i.clone();for(var e,o=new h(1),s=new h(0),u=n.clone();i.cmpn(1)>0&&n.cmpn(1)>0;){for(var a=0,l=1;0==(i.words[0]&l)&&a<26;++a,l<<=1);if(a>0)for(i.iushrn(a);a-- >0;)o.isOdd()&&o.iadd(u),o.iushrn(1);for(var m=0,f=1;0==(n.words[0]&f)&&m<26;++m,f<<=1);if(m>0)for(n.iushrn(m);m-- >0;)s.isOdd()&&s.iadd(u),s.iushrn(1);i.cmp(n)>=0?(i.isub(n),o.isub(s)):(n.isub(i),s.isub(o));}return (e=0===i.cmpn(1)?o:s).cmpn(0)<0&&e.iadd(t),e},h.prototype.gcd=function(t){if(this.isZero())return t.abs();if(t.isZero())return this.abs();var i=this.clone(),r=t.clone();i.negative=0,r.negative=0;for(var n=0;i.isEven()&&r.isEven();n++)i.iushrn(1),r.iushrn(1);for(;;){for(;i.isEven();)i.iushrn(1);for(;r.isEven();)r.iushrn(1);var h=i.cmp(r);if(h<0){var e=i;i=r,r=e;}else if(0===h||0===r.cmpn(1))break;i.isub(r);}return r.iushln(n)},h.prototype.invm=function(t){return this.egcd(t).a.umod(t)},h.prototype.isEven=function(){return 0==(1&this.words[0])},h.prototype.isOdd=function(){return 1==(1&this.words[0])},h.prototype.andln=function(t){return this.words[0]&t},h.prototype.bincn=function(t){r("number"==typeof t);var i=t%26,n=(t-i)/26,h=1<<i;if(this.length<=n)return this._expand(n+1),this.words[n]|=h,this;for(var e=h,o=n;0!==e&&o<this.length;o++){var s=0|this.words[o];e=(s+=e)>>>26,s&=67108863,this.words[o]=s;}return 0!==e&&(this.words[o]=e,this.length++),this},h.prototype.isZero=function(){return 1===this.length&&0===this.words[0]},h.prototype.cmpn=function(t){var i,n=t<0;if(0!==this.negative&&!n)return -1;if(0===this.negative&&n)return 1;if(this._strip(),this.length>1)i=1;else {n&&(t=-t),r(t<=67108863,"Number is too big");var h=0|this.words[0];i=h===t?0:h<t?-1:1;}return 0!==this.negative?0|-i:i},h.prototype.cmp=function(t){if(0!==this.negative&&0===t.negative)return -1;if(0===this.negative&&0!==t.negative)return 1;var i=this.ucmp(t);return 0!==this.negative?0|-i:i},h.prototype.ucmp=function(t){if(this.length>t.length)return 1;if(this.length<t.length)return -1;for(var i=0,r=this.length-1;r>=0;r--){var n=0|this.words[r],h=0|t.words[r];if(n!==h){n<h?i=-1:n>h&&(i=1);break}}return i},h.prototype.gtn=function(t){return 1===this.cmpn(t)},h.prototype.gt=function(t){return 1===this.cmp(t)},h.prototype.gten=function(t){return this.cmpn(t)>=0},h.prototype.gte=function(t){return this.cmp(t)>=0},h.prototype.ltn=function(t){return -1===this.cmpn(t)},h.prototype.lt=function(t){return -1===this.cmp(t)},h.prototype.lten=function(t){return this.cmpn(t)<=0},h.prototype.lte=function(t){return this.cmp(t)<=0},h.prototype.eqn=function(t){return 0===this.cmpn(t)},h.prototype.eq=function(t){return 0===this.cmp(t)},h.red=function(t){return new x(t)},h.prototype.toRed=function(t){return r(!this.red,"Already a number in reduction context"),r(0===this.negative,"red works only with positives"),t.convertTo(this)._forceRed(t)},h.prototype.fromRed=function(){return r(this.red,"fromRed works only with numbers in reduction context"),this.red.convertFrom(this)},h.prototype._forceRed=function(t){return this.red=t,this},h.prototype.forceRed=function(t){return r(!this.red,"Already a number in reduction context"),this._forceRed(t)},h.prototype.redAdd=function(t){return r(this.red,"redAdd works only with red numbers"),this.red.add(this,t)},h.prototype.redIAdd=function(t){return r(this.red,"redIAdd works only with red numbers"),this.red.iadd(this,t)},h.prototype.redSub=function(t){return r(this.red,"redSub works only with red numbers"),this.red.sub(this,t)},h.prototype.redISub=function(t){return r(this.red,"redISub works only with red numbers"),this.red.isub(this,t)},h.prototype.redShl=function(t){return r(this.red,"redShl works only with red numbers"),this.red.shl(this,t)},h.prototype.redMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.mul(this,t)},h.prototype.redIMul=function(t){return r(this.red,"redMul works only with red numbers"),this.red._verify2(this,t),this.red.imul(this,t)},h.prototype.redSqr=function(){return r(this.red,"redSqr works only with red numbers"),this.red._verify1(this),this.red.sqr(this)},h.prototype.redISqr=function(){return r(this.red,"redISqr works only with red numbers"),this.red._verify1(this),this.red.isqr(this)},h.prototype.redSqrt=function(){return r(this.red,"redSqrt works only with red numbers"),this.red._verify1(this),this.red.sqrt(this)},h.prototype.redInvm=function(){return r(this.red,"redInvm works only with red numbers"),this.red._verify1(this),this.red.invm(this)},h.prototype.redNeg=function(){return r(this.red,"redNeg works only with red numbers"),this.red._verify1(this),this.red.neg(this)},h.prototype.redPow=function(t){return r(this.red&&!t.red,"redPow(normalNum)"),this.red._verify1(this),this.red.pow(this,t)};var w={k256:null,p224:null,p192:null,p25519:null};function y(t,i){this.name=t,this.p=new h(i,16),this.n=this.p.bitLength(),this.k=new h(1).iushln(this.n).isub(this.p),this.tmp=this._tmp();}function b(){y.call(this,"k256","ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f");}function _(){y.call(this,"p224","ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001");}function k(){y.call(this,"p192","ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff");}function A(){y.call(this,"25519","7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed");}function x(t){if("string"==typeof t){var i=h._prime(t);this.m=i.p,this.prime=i;}else r(t.gtn(1),"modulus must be greater than 1"),this.m=t,this.prime=null;}function S(t){x.call(this,t),this.shift=this.m.bitLength(),this.shift%26!=0&&(this.shift+=26-this.shift%26),this.r=new h(1).iushln(this.shift),this.r2=this.imod(this.r.sqr()),this.rinv=this.r._invmp(this.m),this.minv=this.rinv.mul(this.r).isubn(1).div(this.m),this.minv=this.minv.umod(this.r),this.minv=this.r.sub(this.minv);}y.prototype._tmp=function(){var t=new h(null);return t.words=new Array(Math.ceil(this.n/13)),t},y.prototype.ireduce=function(t){var i,r=t;do{this.split(r,this.tmp),i=(r=(r=this.imulK(r)).iadd(this.tmp)).bitLength();}while(i>this.n);var n=i<this.n?-1:r.ucmp(this.p);return 0===n?(r.words[0]=0,r.length=1):n>0?r.isub(this.p):void 0!==r.strip?r.strip():r._strip(),r},y.prototype.split=function(t,i){t.iushrn(this.n,0,i);},y.prototype.imulK=function(t){return t.imul(this.k)},n(b,y),b.prototype.split=function(t,i){for(var r=4194303,n=Math.min(t.length,9),h=0;h<n;h++)i.words[h]=t.words[h];if(i.length=n,t.length<=9)return t.words[0]=0,void(t.length=1);var e=t.words[9];for(i.words[i.length++]=e&r,h=10;h<t.length;h++){var o=0|t.words[h];t.words[h-10]=(o&r)<<4|e>>>22,e=o;}e>>>=22,t.words[h-10]=e,0===e&&t.length>10?t.length-=10:t.length-=9;},b.prototype.imulK=function(t){t.words[t.length]=0,t.words[t.length+1]=0,t.length+=2;for(var i=0,r=0;r<t.length;r++){var n=0|t.words[r];i+=977*n,t.words[r]=67108863&i,i=64*n+(i/67108864|0);}return 0===t.words[t.length-1]&&(t.length--,0===t.words[t.length-1]&&t.length--),t},n(_,y),n(k,y),n(A,y),A.prototype.imulK=function(t){for(var i=0,r=0;r<t.length;r++){var n=19*(0|t.words[r])+i,h=67108863&n;n>>>=26,t.words[r]=h,i=n;}return 0!==i&&(t.words[t.length++]=i),t},h._prime=function(t){if(w[t])return w[t];var i;if("k256"===t)i=new b;else if("p224"===t)i=new _;else if("p192"===t)i=new k;else {if("p25519"!==t)throw new Error("Unknown prime "+t);i=new A;}return w[t]=i,i},x.prototype._verify1=function(t){r(0===t.negative,"red works only with positives"),r(t.red,"red works only with red numbers");},x.prototype._verify2=function(t,i){r(0==(t.negative|i.negative),"red works only with positives"),r(t.red&&t.red===i.red,"red works only with red numbers");},x.prototype.imod=function(t){return this.prime?this.prime.ireduce(t)._forceRed(this):(a(t,t.umod(this.m)._forceRed(this)),t)},x.prototype.neg=function(t){return t.isZero()?t.clone():this.m.sub(t)._forceRed(this)},x.prototype.add=function(t,i){this._verify2(t,i);var r=t.add(i);return r.cmp(this.m)>=0&&r.isub(this.m),r._forceRed(this)},x.prototype.iadd=function(t,i){this._verify2(t,i);var r=t.iadd(i);return r.cmp(this.m)>=0&&r.isub(this.m),r},x.prototype.sub=function(t,i){this._verify2(t,i);var r=t.sub(i);return r.cmpn(0)<0&&r.iadd(this.m),r._forceRed(this)},x.prototype.isub=function(t,i){this._verify2(t,i);var r=t.isub(i);return r.cmpn(0)<0&&r.iadd(this.m),r},x.prototype.shl=function(t,i){return this._verify1(t),this.imod(t.ushln(i))},x.prototype.imul=function(t,i){return this._verify2(t,i),this.imod(t.imul(i))},x.prototype.mul=function(t,i){return this._verify2(t,i),this.imod(t.mul(i))},x.prototype.isqr=function(t){return this.imul(t,t.clone())},x.prototype.sqr=function(t){return this.mul(t,t)},x.prototype.sqrt=function(t){if(t.isZero())return t.clone();var i=this.m.andln(3);if(r(i%2==1),3===i){var n=this.m.add(new h(1)).iushrn(2);return this.pow(t,n)}for(var e=this.m.subn(1),o=0;!e.isZero()&&0===e.andln(1);)o++,e.iushrn(1);r(!e.isZero());var s=new h(1).toRed(this),u=s.redNeg(),a=this.m.subn(1).iushrn(1),l=this.m.bitLength();for(l=new h(2*l*l).toRed(this);0!==this.pow(l,a).cmp(u);)l.redIAdd(u);for(var m=this.pow(l,e),f=this.pow(t,e.addn(1).iushrn(1)),d=this.pow(t,e),p=o;0!==d.cmp(s);){for(var M=d,v=0;0!==M.cmp(s);v++)M=M.redSqr();r(v<p);var g=this.pow(m,new h(1).iushln(p-v-1));f=f.redMul(g),m=g.redSqr(),d=d.redMul(m),p=v;}return f},x.prototype.invm=function(t){var i=t._invmp(this.m);return 0!==i.negative?(i.negative=0,this.imod(i).redNeg()):this.imod(i)},x.prototype.pow=function(t,i){if(i.isZero())return new h(1).toRed(this);if(0===i.cmpn(1))return t.clone();var r=new Array(16);r[0]=new h(1).toRed(this),r[1]=t;for(var n=2;n<r.length;n++)r[n]=this.mul(r[n-1],t);var e=r[0],o=0,s=0,u=i.bitLength()%26;for(0===u&&(u=26),n=i.length-1;n>=0;n--){for(var a=i.words[n],l=u-1;l>=0;l--){var m=a>>l&1;e!==r[0]&&(e=this.sqr(e)),0!==m||0!==o?(o<<=1,o|=m,(4==++s||0===n&&0===l)&&(e=this.mul(e,r[o]),s=0,o=0)):s=0;}u=26;}return e},x.prototype.convertTo=function(t){var i=t.umod(this.m);return i===t?i.clone():i},x.prototype.convertFrom=function(t){var i=t.clone();return i.red=null,i},h.mont=function(t){return new S(t)},n(S,x),S.prototype.convertTo=function(t){return this.imod(t.ushln(this.shift))},S.prototype.convertFrom=function(t){var i=this.imod(t.mul(this.rinv));return i.red=null,i},S.prototype.imul=function(t,i){if(t.isZero()||i.isZero())return t.words[0]=0,t.length=1,t;var r=t.imul(i),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),h=r.isub(n).iushrn(this.shift),e=h;return h.cmp(this.m)>=0?e=h.isub(this.m):h.cmpn(0)<0&&(e=h.iadd(this.m)),e._forceRed(this)},S.prototype.mul=function(t,i){if(t.isZero()||i.isZero())return new h(0)._forceRed(this);var r=t.mul(i),n=r.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),e=r.isub(n).iushrn(this.shift),o=e;return e.cmp(this.m)>=0?o=e.isub(this.m):e.cmpn(0)<0&&(o=e.iadd(this.m)),o._forceRed(this)},S.prototype.invm=function(t){return this.imod(t._invmp(this.m).mul(this.r2))._forceRed(this)};}(bn,commonjsGlobal);var BN = bn.exports;

	function isBn(n){return BN.isBN(n)}

	const REGEX_HEX_PREFIXED=/^0x[\da-fA-F]+$/;const REGEX_HEX_NOPREFIX=/^[\da-fA-F]+$/;function isHex(t,E=-1,e){return "string"==typeof t&&("0x"===t||REGEX_HEX_PREFIXED.test(t))&&(-1===E?e||t.length%2==0:t.length===2+Math.ceil(E/4))}

	function isObject(t){return !!t&&"object"==typeof t}

	function isOn(...n){return i=>(isObject(i)||isFunction$1(i))&&n.every((n=>isFunction$1(i[n])))}function isOnFunction(...n){return i=>isFunction$1(i)&&n.every((n=>isFunction$1(i[n])))}function isOnObject(...n){return i=>isObject(i)&&n.every((n=>isFunction$1(i[n])))}

	const isToBigInt=isOn("toBigInt");

	const isToBn$1=isOn("toBn");

	function nToBigInt(i){return "bigint"==typeof i?i:i?isHex(i)?hexToBigInt(i.toString()):isBn(i)?BigInt$1(i.toString()):isToBigInt(i)?i.toBigInt():isToBn$1(i)?BigInt$1(i.toBn().toString()):BigInt$1(i):BigInt$1(0)}

	function createCmp(r){return (...e)=>{if(0===e.length)throw new Error("Must provide one or more arguments");let t=e[0];for(let n=1;n<e.length;n++)r(e[n],t)&&(t=e[n]);return t}}

	const hasBigInt="function"==typeof BigInt$1&&"function"==typeof BigInt$1.asIntN;const hasBuffer="function"==typeof xglobal.Buffer&&"function"==typeof xglobal.Buffer.isBuffer;const hasProcess="object"==typeof xglobal.process;

	function isBuffer(o){return hasBuffer&&isFunction$1(o&&o.readDoubleLE)&&xglobal.Buffer.isBuffer(o)}

	function isU8a(r){return (r&&r.constructor)===Uint8Array||r instanceof Uint8Array}

	const encoder=new TextEncoder$1;function stringToU8a(e){return e?encoder.encode(e.toString()):new Uint8Array}

	function u8aToU8a(r){return isU8a(r)?isBuffer(r)?new Uint8Array(r):r:isHex(r)?hexToU8a(r):Array.isArray(r)?new Uint8Array(r):stringToU8a(r)}

	function u8aConcat(...t){const n=new Array(t.length);let e=0;for(let o=0;o<t.length;o++)n[o]=u8aToU8a(t[o]),e+=n[o].length;return u8aConcatStrict(n,e)}function u8aConcatStrict(t,n=0){let e=0;if(!n)for(let e=0;e<t.length;e++)n+=t[e].length;const o=new Uint8Array(n);for(let n=0;n<t.length;n++)o.set(t[n],e),e+=t[n].length;return o}

	function u8aEmpty(t){const n=0|t.length;for(let r=0;r<n;r++)if(0|t[r])return !1;return !0}

	function u8aEq(t,e){const n=u8aToU8a(t),f=u8aToU8a(e);if(n.length===f.length){const t=new DataView(n.buffer,n.byteOffset),e=new DataView(f.buffer,f.byteOffset),r=n.length%4|0,a=n.length-r|0;for(let n=0;n<a;n+=4)if(t.getUint32(n)!==e.getUint32(n))return !1;for(let t=a;t<n.length;t++)if(n[t]!==f[t])return !1;return !0}return !1}

	function u8aFixLength(t,n=-1,e=!1){const r=Math.ceil(n/8);if(-1===n||t.length===r)return t;if(t.length>r)return t.subarray(0,r);const i=new Uint8Array(r);return i.set(t,e?0:r-t.length),i}

	function u8aToFloat(e,{bitLength:t=32,isLe:r=!0}={}){if(32!==t&&64!==t)throw new Error("Invalid bitLength provided, expected 32 or 64");if(e.length<t/8)throw new Error(`Invalid input buffer provided, expected at least ${t/8} bytes, found ${e.length}`);const n=new DataView(e.buffer,e.byteOffset);return 32===t?n.getFloat32(0,r):n.getFloat64(0,r)}

	function u8aToBn(e,{isLe:r=!0,isNegative:n=!1}={}){const t=e.length;if(t<=6){if(n){let n=0;if(r)switch(t){case 0:return new BN(0);case 1:n=255^e[0];break;case 2:n=e[0]+(e[1]<<8)^65535;break;case 3:n=e[0]+(e[1]<<8)+(e[2]<<16)^16777215;break;case 4:n=e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295;break;case 5:n=(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295)+4294967296*(255^e[4]);break;default:n=(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295)+4294967296*(e[4]+(e[5]<<8)^65535);}else for(let r=0;r<t;r++)n=256*n+(255^e[r]);return new BN(t?-1*n-1:0)}if(!r){let r=0;for(let n=0;n<t;n++)r=256*r+e[n];return new BN(r)}switch(t){case 0:return new BN(0);case 1:return new BN(e[0]);case 2:return new BN(e[0]+(e[1]<<8));case 3:return new BN(e[0]+(e[1]<<8)+(e[2]<<16));case 4:return new BN(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]);case 5:return new BN(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*(e[3]+(e[4]<<8)));default:return new BN(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*(e[3]+(e[4]<<8)+(e[5]<<16)))}}return n?new BN(e,r?"le":"be").fromTwos(8*e.length):new BN(e,r?"le":"be")}

	const U8=new Array(256),U16=new Array(65536);for(let t=0;t<256;t++)U8[t]=t.toString(16).padStart(2,"0");for(let r=0;r<256;r++){const e=r<<8;for(let n=0;n<256;n++)U16[e|n]=U8[r]+U8[n];}function hex$1(t,r){const e=t.length%2|0,n=t.length-e|0;for(let e=0;e<n;e+=2)r+=U16[t[e]<<8|t[e+1]];return e&&(r+=U8[0|t[n]]),r}function u8aToHex(t,r=-1,e=!0){const n=e?"0x":"";if(!t||!t.length)return n;if(r>0){const e=Math.ceil(r/8);if(t.length>e)return `${hex$1(t.subarray(0,e/2),n)}…${hex$1(t.subarray(t.length-e/2),"")}`}return hex$1(t,n)}

	function u8aToNumber(e,{isNegative:r=!1}={}){const a=e.length;if(r){let r=0;switch(a){case 0:return 0;case 1:r=255^e[0];break;case 2:r=e[0]+(e[1]<<8)^65535;break;case 3:r=e[0]+(e[1]<<8)+(e[2]<<16)^16777215;break;case 4:r=e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295;break;case 5:r=(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295)+4294967296*(255^e[4]);break;case 6:r=(e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]^4294967295)+4294967296*(e[4]+(e[5]<<8)^65535);break;default:throw new Error("Value more than 48-bits cannot be reliably converted")}return -1*r-1}switch(a){case 0:return 0;case 1:return e[0];case 2:return e[0]+(e[1]<<8);case 3:return e[0]+(e[1]<<8)+(e[2]<<16);case 4:return e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3];case 5:return e[0]+(e[1]<<8)+(e[2]<<16)+16777216*(e[3]+(e[4]<<8));case 6:return e[0]+(e[1]<<8)+(e[2]<<16)+16777216*(e[3]+(e[4]<<8)+(e[5]<<16));default:throw new Error("Value more than 48-bits cannot be reliably converted")}}

	const decoder=new TextDecoder$1("utf-8");function u8aToString(e){return e?decoder.decode(e):""}

	const U8A_WRAP_ETHEREUM=u8aToU8a("Ethereum Signed Message:\n");const U8A_WRAP_PREFIX=u8aToU8a("<Bytes>");const U8A_WRAP_POSTFIX=u8aToU8a("</Bytes>");const WRAP_LEN=U8A_WRAP_PREFIX.length+U8A_WRAP_POSTFIX.length;function u8aIsWrapped(t,a){return t.length>=WRAP_LEN&&u8aEq(t.subarray(0,U8A_WRAP_PREFIX.length),U8A_WRAP_PREFIX)&&u8aEq(t.slice(-U8A_WRAP_POSTFIX.length),U8A_WRAP_POSTFIX)||a&&t.length>=U8A_WRAP_ETHEREUM.length&&u8aEq(t.subarray(0,U8A_WRAP_ETHEREUM.length),U8A_WRAP_ETHEREUM)}function u8aUnwrapBytes(t){const a=u8aToU8a(t);return u8aIsWrapped(a,!1)?a.subarray(U8A_WRAP_PREFIX.length,a.length-U8A_WRAP_POSTFIX.length):a}function u8aWrapBytes(t){const a=u8aToU8a(t);return u8aIsWrapped(a,!0)?a:u8aConcatStrict([U8A_WRAP_PREFIX,a,U8A_WRAP_POSTFIX])}

	const DIV=BigInt$1(256),NEG_MASK=BigInt$1(255);function toU8a$1(n,t,i){const o=[];for(i&&(n=(n+_1n$2)*-_1n$2);n!==_0n$2;){const r=n%DIV,e=Number(i?r^NEG_MASK:r);t?o.push(e):o.unshift(e),n=(n-r)/DIV;}return Uint8Array.from(o)}function nToU8a(n,{bitLength:t=-1,isLe:i=!0,isNegative:o=!1}={}){const r=nToBigInt(n);if(r===_0n$2)return -1===t?new Uint8Array(1):new Uint8Array(Math.ceil((t||0)/8));const e=toU8a$1(r,i,o);if(-1===t)return e;const s=Math.ceil((t||0)/8),a=new Uint8Array(s);return o&&a.fill(255),a.set(e,i?0:s-e.length),a}

	const BN_ZERO=new BN(0);const BN_ONE=new BN(1);const BN_TWO=new BN(2);new BN(3);new BN(4);new BN(5);new BN(6);new BN(7);new BN(8);new BN(9);new BN(10);const BN_HUNDRED=new BN(100);new BN(1e3);const BN_MILLION=new BN(1e6);const BN_BILLION=new BN(1e9);const BN_QUINTILL=BN_BILLION.mul(BN_BILLION);const BN_MAX_INTEGER=new BN(Number.MAX_SAFE_INTEGER);const BN_SQRT_MAX_INTEGER=new BN(94906265);

	function hexStripPrefix(E){if(!E||"0x"===E)return "";if(REGEX_HEX_PREFIXED.test(E))return E.substring(2);if(REGEX_HEX_NOPREFIX.test(E))return E;throw new Error(`Expected hex value to convert, found '${E}'`)}

	function hexToBn(e,{isLe:r=!1,isNegative:i=!1}={}){if(!e||"0x"===e)return new BN(0);const t=hexStripPrefix(e),n=new BN(t,16,r?"le":"be");return i?n.fromTwos(4*t.length):n}

	const bnMax=createCmp(((e,t)=>e.gt(t)));const bnMin=createCmp(((e,t)=>e.lt(t)));

	function isBigInt(t){return "bigint"==typeof t}

	function bnToBn(i){return i?BN.isBN(i)?i:isHex(i)?hexToBn(i.toString()):isBigInt(i)?new BN(i.toString()):isToBn$1(i)?i.toBn():isToBigInt(i)?new BN(i.toBigInt().toString()):new BN(i):new BN(0)}

	function bnSqrt(o){const r=bnToBn(o);if(r.isNeg())throw new Error("square root of negative numbers is not supported");if(r.lte(BN_MAX_INTEGER))return new BN(~~Math.sqrt(r.toNumber()));let t=BN_SQRT_MAX_INTEGER.clone();for(;;){const o=r.div(t).iadd(t).ishrn(1);if(t.eq(o)||t.eq(o.sub(BN_ONE)))return t;t=o;}}

	const DEFAULT_OPTS={bitLength:-1,isLe:!0,isNegative:!1};function bnToU8a(t,{bitLength:n=-1,isLe:e=!0,isNegative:i=!1}=DEFAULT_OPTS){const r=bnToBn(t),o=-1===n?Math.ceil(r.bitLength()/8):Math.ceil((n||0)/8);if(!t)return -1===n?new Uint8Array(1):new Uint8Array(o);const s=new Uint8Array(o),a=i?r.toTwos(8*o):r;return s.set(a.toArray(e?"le":"be",o),0),s}

	function bnToHex(e,{bitLength:i=-1,isLe:o=!1,isNegative:t=!1}={}){return u8aToHex(bnToU8a(e,{bitLength:i,isLe:o,isNegative:t}))}

	const MAX_U8=BN_TWO.pow(new BN(6)).isub(BN_ONE),MAX_U16=BN_TWO.pow(new BN(14)).isub(BN_ONE),MAX_U32=BN_TWO.pow(new BN(30)).isub(BN_ONE),BL_16={bitLength:16},BL_32={bitLength:32};function compactToU8a(n){const t=bnToBn(n);if(t.lte(MAX_U8))return new Uint8Array([t.toNumber()<<2]);if(t.lte(MAX_U16))return bnToU8a(t.shln(2).iadd(BN_ONE),BL_16);if(t.lte(MAX_U32))return bnToU8a(t.shln(2).iadd(BN_TWO),BL_32);const r=bnToU8a(t);let o=r.length;for(;0===r[o-1];)o--;if(o<4)throw new Error("Invalid length, previous checks match anything less than 2^30");return u8aConcatStrict([new Uint8Array([3+(o-4<<2)]),r.subarray(0,o)])}

	function compactAddLength(t){return u8aConcatStrict([compactToU8a(t.length),t])}

	function compactFromU8a(e){const r=u8aToU8a(e);switch(3&r[0]){case 0:return [1,new BN(r[0]>>>2)];case 1:return [2,new BN(r[0]+(r[1]<<8)>>>2)];case 2:return [4,new BN(r[0]+(r[1]<<8)+(r[2]<<16)+16777216*r[3]>>>2)];default:{const e=5+(r[0]>>>2);switch(e){case 5:return [5,new BN(r[1]+(r[2]<<8)+(r[3]<<16)+16777216*r[4])];case 6:return [6,new BN(r[1]+(r[2]<<8)+(r[3]<<16)+16777216*(r[4]+(r[5]<<8)))];case 7:return [7,new BN(r[1]+(r[2]<<8)+(r[3]<<16)+16777216*(r[4]+(r[5]<<8)+(r[6]<<16)))];default:return [e,u8aToBn(r.subarray(1,e))]}}}}function compactFromU8aLim(e){switch(3&e[0]){case 0:return [1,e[0]>>>2];case 1:return [2,e[0]+(e[1]<<8)>>>2];case 2:return [4,e[0]+(e[1]<<8)+(e[2]<<16)+16777216*e[3]>>>2];default:switch(5+(e[0]>>>2)){case 5:return [5,e[1]+(e[2]<<8)+(e[3]<<16)+16777216*e[4]];case 6:return [6,e[1]+(e[2]<<8)+(e[3]<<16)+16777216*(e[4]+(e[5]<<8))];case 7:return [7,e[1]+(e[2]<<8)+(e[3]<<16)+16777216*(e[4]+(e[5]<<8)+(e[6]<<16))];default:throw new Error("Compact input is > Number.MAX_SAFE_INTEGER")}}}

	function compactStripLength(o){const[r,t]=compactFromU8a(o),m=r+t.toNumber();return [m,o.subarray(r,m)]}

	function floatToU8a(e=0,{bitLength:t=32,isLe:r=!0}={}){if(32!==t&&64!==t)throw new Error("Invalid bitLength provided, expected 32 or 64");const n=new Uint8Array(t/8),o=new DataView(n.buffer,n.byteOffset);return 32===t?o.setFloat32(0,Number(e),r):o.setFloat64(0,Number(e),r),n}

	function isBoolean(o){return "boolean"==typeof o}

	const NUMBER_REGEX=new RegExp("(\\d+?)(?=(\\d{3})+(?!\\d)|$)","g");function formatDecimal(t,E=","){const n=t[0].startsWith("-"),R=n?t.substring(1).match(NUMBER_REGEX):t.match(NUMBER_REGEX);return R?`${n?"-":""}${R.join(E)}`:t}

	function getSeparator(t){return {decimal:.1.toLocaleString(t).substring(1,2),thousand:1e3.toLocaleString(t).substring(1,2)}}

	const SI_MID=8;const SI=[{power:-24,text:"yocto",value:"y"},{power:-21,text:"zepto",value:"z"},{power:-18,text:"atto",value:"a"},{power:-15,text:"femto",value:"f"},{power:-12,text:"pico",value:"p"},{power:-9,text:"nano",value:"n"},{power:-6,text:"micro",value:"µ"},{power:-3,text:"milli",value:"m"},{power:0,text:"Unit",value:"-"},{power:3,text:"Kilo",value:"k"},{power:6,text:"Mill",value:"M"},{power:9,text:"Bill",value:"B"},{power:12,text:"Tril",value:"T"},{power:15,text:"Peta",value:"P"},{power:18,text:"Exa",value:"E"},{power:21,text:"Zeta",value:"Z"},{power:24,text:"Yotta",value:"Y"}];function findSi(e){for(let t=0;t<SI.length;t++)if(SI[t].value===e)return SI[t];return SI[SI_MID]}function calcSi(e,t,o){if(o)return findSi(o);const l=SI_MID-1+Math.ceil((e.length-t)/3);return SI[l]||SI[l<0?0:SI.length-1]}

	const DEFAULT_UNIT=SI[SI_MID].text;let defaultDecimals=0,defaultUnit=DEFAULT_UNIT;function _formatBalance(t,{decimals:a=defaultDecimals,forceUnit:e,locale:i="en",withAll:l=!1,withSi:r=!0,withSiFull:o=!1,withUnit:n=!0,withZero:s=!0}={}){let f=bnToBn(t).toString();if(0===f.length||"0"===f)return "0";let c="";f[0].startsWith("-")&&(c="-",f=f.substring(1));const m=calcSi(f,a,e),u=f.length-(a+m.power),d=u<=0?"0":f.substring(0,u);let S=f.padStart(u<0?a:1,"0").substring(u<0?0:u).padEnd(l?Math.max(a,4):4,"0").substring(0,l?Math.max(4,a+m.power):4);if(!s){let t=S.length-1;do{"0"===S[t]&&t--;}while("0"===S[t]);S=S.substring(0,t+1);}const D=isBoolean(n)?SI[SI_MID].text:n,I=r||o?"-"===m.value?n?` ${D}`:"":` ${o?`${m.text}${n?" ":""}`:m.value}${n?D:""}`:"",{decimal:p,thousand:g}=getSeparator(i);return `${c}${formatDecimal(d,g)}${S&&`${p}${S}`}${I}`}const formatBalance=_formatBalance;formatBalance.calcSi=(t,a=defaultDecimals)=>calcSi(t,a),formatBalance.findSi=findSi,formatBalance.getDefaults=()=>({decimals:defaultDecimals,unit:defaultUnit}),formatBalance.getOptions=(t=defaultDecimals)=>SI.filter((({power:a})=>!(a<0)||t+a>=0)),formatBalance.setDefaults=({decimals:t,unit:a})=>{defaultDecimals=void 0===t?defaultDecimals:Array.isArray(t)?t[0]:t,defaultUnit=void 0===a?defaultUnit:Array.isArray(a)?a[0]:a,SI[SI_MID].text=defaultUnit;};

	function zeroPad(t){return t.toString().padStart(2,"0")}function formatDate(t){return `${t.getFullYear().toString()}-${zeroPad(t.getMonth()+1)}-${zeroPad(t.getDate())} ${zeroPad(t.getHours())}:${zeroPad(t.getMinutes())}:${zeroPad(t.getSeconds())}`}

	function formatNumber(o,{locale:r="en"}={}){const{thousand:t}=getSeparator(r);return formatDecimal(bnToBn(o).toString(),t)}

	function isString(n){return "string"==typeof n||n instanceof String}

	function isAsciiStr(i){const t=0|i.length;for(let s=0;s<t;s++){const t=i.charCodeAt(s);if(t<32||t>126)return !1}return !0}function isAsciiBytes(i){const t=0|i.length;for(let s=0;s<t;s++){const t=0|i[s];if(t<32||t>126)return !1}return !0}function isAscii(i){return isString(i)?isHex(i)?isAsciiBytes(u8aToU8a(i)):isAsciiStr(i):!!i&&isAsciiBytes(i)}

	const isClass=isOnFunction("isPrototypeOf","hasOwnProperty");

	function isChildClass(s,i){return !(!isClass(i)||!isClass(s))&&(s===i||s.isPrototypeOf(i))}

	const checkCodec=isOnObject("toHex","toU8a"),checkRegistry=isOnObject("get");function isCodec$1(e){return checkCodec(e)&&checkRegistry(e.registry)}

	const isCompact=isOnObject("toBigInt","toBn","toNumber","unwrap");

	function replacer(i,r){return isBigInt(r)?r.toString():r}function stringify(i,r){return JSON.stringify(i,replacer,r)}

	function isNull(l){return null===l}

	function isNumber(e){return "number"==typeof e}

	function isUndefined(n){return void 0===n}

	function isUtf8(r){if(!r)return isString(r);const e=u8aToU8a(r),i=e.length;let f=0;for(;f<i;)if(e[f]<=127)f+=1;else if(e[f]>=194&&e[f]<=223){if(!(f+1<i))return !1;if(e[f+1]<128||e[f+1]>191)return !1;f+=2;}else if(224===e[f]){if(!(f+2<i))return !1;if(e[f+1]<160||e[f+1]>191)return !1;if(e[f+2]<128||e[f+2]>191)return !1;f+=3;}else if(e[f]>=225&&e[f]<=236){if(!(f+2<i))return !1;if(e[f+1]<128||e[f+1]>191)return !1;if(e[f+2]<128||e[f+2]>191)return !1;f+=3;}else if(237===e[f]){if(!(f+2<i))return !1;if(e[f+1]<128||e[f+1]>159)return !1;if(e[f+2]<128||e[f+2]>191)return !1;f+=3;}else if(e[f]>=238&&e[f]<=239){if(!(f+2<i))return !1;if(e[f+1]<128||e[f+1]>191)return !1;if(e[f+2]<128||e[f+2]>191)return !1;f+=3;}else if(240===e[f]){if(!(f+3<i))return !1;if(e[f+1]<144||e[f+1]>191)return !1;if(e[f+2]<128||e[f+2]>191)return !1;if(e[f+3]<128||e[f+3]>191)return !1;f+=4;}else if(e[f]>=241&&e[f]<=243){if(!(f+3<i))return !1;if(e[f+1]<128||e[f+1]>191)return !1;if(e[f+2]<128||e[f+2]>191)return !1;if(e[f+3]<128||e[f+3]>191)return !1;f+=4;}else {if(244!==e[f])return !1;if(!(f+3<i))return !1;if(e[f+1]<128||e[f+1]>143)return !1;if(e[f+2]<128||e[f+2]>191)return !1;if(e[f+3]<128||e[f+3]>191)return !1;f+=4;}return !0}

	function lazyMethod(t,e,n,o,r=0){const i=o?o(e,r):e.toString();let c;Object.defineProperty(t,i,{configurable:!0,enumerable:!0,get:function(){if(void 0===c){c=n(e,r,this);try{Object.defineProperty(this,i,{value:c});}catch{}}return c}});}function lazyMethods(t,e,n,o){for(let r=0;r<e.length;r++)lazyMethod(t,e[r],n,o,r);return t}

	const logTo={debug:"log",error:"error",log:"log",warn:"warn"};function formatOther(r){if(r&&isObject(r)&&r.constructor===Object){const o={};for(const t of Object.keys(r))o[t]=loggerFormat(r[t]);return o}return r}function loggerFormat(r){return Array.isArray(r)?r.map(loggerFormat):isBn(r)?r.toString():isU8a(r)||isBuffer(r)?u8aToHex(u8aToU8a(r)):formatOther(r)}function formatWithLength(r){return o=>{if(r<=0)return o;const t=`${o}`;return t.length<r?o:`${t.substring(0,r)} ...`}}function apply(r,o,t,e=-1){if(1===t.length&&isFunction$1(t[0])){const n=t[0]();return apply(r,o,Array.isArray(n)?n:[n],e)}console[logTo[r]](formatDate(new Date),o,...t.map(loggerFormat).map(formatWithLength(e)));}function noop$1(){}function isDebugOn(r,o){return !!r&&("*"===r||o===r||r.endsWith("*")&&o.startsWith(r.slice(0,-1)))}function isDebugOff(r,o){return !!r&&r.startsWith("-")&&(o===r.slice(1)||r.endsWith("*")&&o.startsWith(r.slice(1,-1)))}function getDebugFlag(r,o){let t=!1;for(const e of r)isDebugOn(e,o)?t=!0:isDebugOff(e,o)&&(t=!1);return t}function parseEnv(r){const o=(hasProcess?xglobal.process:{}).env||{},t=parseInt(o.DEBUG_MAX||"-1",10);return [getDebugFlag((o.DEBUG||"").toLowerCase().split(","),r),isNaN(t)?-1:t]}function logger(r){const o=`${r.toUpperCase()}:`.padStart(16),[t,e]=parseEnv(r.toLowerCase());return {debug:t?(...r)=>apply("debug",o,r,e):noop$1,error:(...r)=>apply("error",o,r),log:(...r)=>apply("log",o,r),noop:noop$1,warn:(...r)=>apply("warn",o,r)}}

	function defaultGetId(){return "none"}function memoize(t,{getInstanceId:n=defaultGetId}={}){const e={},i=(...i)=>{const o=stringify(i),r=n();return e[r]||(e[r]={}),void 0===e[r][o]&&(e[r][o]=t(...i)),e[r][o]};return i.unmemoize=(...t)=>{const i=stringify(t),o=n();e[o]&&void 0!==e[o][i]&&delete e[o][i];},i}

	function nextTick(e,o){setTimeout((()=>{Promise.resolve().then((()=>{e();})).catch((e=>{o?o(e):console.error(e);}));}),0);}

	function objectClear(e){const t=Object.keys(e);for(let n=0;n<t.length;n++)delete e[t[n]];return e}

	function objectSpread(e,...t){for(let n=0;n<t.length;n++){const o=t[n];if(o)if("function"==typeof o.entries)for(const[t,n]of o.entries())e[t]=n;else Object.assign(e,o);}return e}

	function objectProperty(e,t,o,r,n=0){const c=r?r(t,n):t;c in e||Object.defineProperty(e,c,{enumerable:!0,get:function(){return o(t,n,this)}});}function objectProperties(e,t,o,r){for(let n=0;n<t.length;n++)objectProperty(e,t[n],o,r,n);}

	const CC_TO_UP=new Array(256);const CC_TO_LO=new Array(256);for(let e=0;e<CC_TO_UP.length;e++)CC_TO_LO[e]=String.fromCharCode(e).toLowerCase(),CC_TO_UP[e]=String.fromCharCode(e).toUpperCase();function formatAllCaps(e){return e.slice(0,e.length-1).toLowerCase()+CC_TO_UP[e.charCodeAt(e.length-1)]}function converter$1(e){return r=>{const t=r.replace(/[-_., ]+/g," ").trim().split(" "),C=t.length;let o="";for(let r=0;r<C;r++){const C=t[r];o+=e(/^[\dA-Z]+$/.test(C)?C.toLowerCase():C.replace(/^[\dA-Z]{2,}[^a-z]/,formatAllCaps),r);}return o}}const stringCamelCase=converter$1(((e,r)=>(r?CC_TO_UP[e.charCodeAt(0)]:CC_TO_LO[e.charCodeAt(0)])+e.slice(1)));const stringPascalCase=converter$1((e=>CC_TO_UP[e.charCodeAt(0)]+e.slice(1)));

	function converter(r){return e=>e?r[e.charCodeAt(0)]+e.slice(1):""}const stringUpperFirst=converter(CC_TO_UP);

	function stringToHex(o){return u8aToHex(stringToU8a(o))}

	const packageInfo={name:"@polkadot/api",path:({ url: (document.currentScript && document.currentScript.src || new URL('index.js', document.baseURI).href) })&&(document.currentScript && document.currentScript.src || new URL('index.js', document.baseURI).href)?new URL((document.currentScript && document.currentScript.src || new URL('index.js', document.baseURI).href)).pathname.substring(0,new URL((document.currentScript && document.currentScript.src || new URL('index.js', document.baseURI).href)).pathname.lastIndexOf("/")+1):"auto",type:"esm",version:"10.1.3"};

	var extendStatics=function(e,t){return extendStatics=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t;}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r]);},extendStatics(e,t)};function __extends(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Class extends value "+String(t)+" is not a constructor or null");function r(){this.constructor=e;}extendStatics(e,t),e.prototype=null===t?Object.create(t):(r.prototype=t.prototype,new r);}function __awaiter(e,t,r,n){return new(r||(r=Promise))((function(o,a){function i(e){try{u(n.next(e));}catch(e){a(e);}}function c(e){try{u(n.throw(e));}catch(e){a(e);}}function u(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t);}))).then(i,c);}u((n=n.apply(e,t||[])).next());}))}function __generator(e,t){var r,n,o,a,i={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return a={next:c(0),throw:c(1),return:c(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function c(c){return function(u){return function(c){if(r)throw new TypeError("Generator is already executing.");for(;a&&(a=0,c[0]&&(i=0)),i;)try{if(r=1,n&&(o=2&c[0]?n.return:c[0]?n.throw||((o=n.return)&&o.call(n),0):n.next)&&!(o=o.call(n,c[1])).done)return o;switch(n=0,o&&(c=[2&c[0],o.value]),c[0]){case 0:case 1:o=c;break;case 4:return i.label++,{value:c[1],done:!1};case 5:i.label++,n=c[1],c=[0];continue;case 7:c=i.ops.pop(),i.trys.pop();continue;default:if(!(o=i.trys,(o=o.length>0&&o[o.length-1])||6!==c[0]&&2!==c[0])){i=0;continue}if(3===c[0]&&(!o||c[1]>o[0]&&c[1]<o[3])){i.label=c[1];break}if(6===c[0]&&i.label<o[1]){i.label=o[1],o=c;break}if(o&&i.label<o[2]){i.label=o[2],i.ops.push(c);break}o[2]&&i.ops.pop(),i.trys.pop();continue}c=t.call(e,i);}catch(e){c=[6,e],n=0;}finally{r=o=0;}if(5&c[0])throw c[1];return {value:c[0]?c[1]:void 0,done:!0}}([c,u])}}}function __values(e){var t="function"==typeof Symbol&&Symbol.iterator,r=t&&e[t],n=0;if(r)return r.call(e);if(e&&"number"==typeof e.length)return {next:function(){return e&&n>=e.length&&(e=void 0),{value:e&&e[n++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")}function __read(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,o,a=r.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(n=a.next()).done;)i.push(n.value);}catch(e){o={error:e};}finally{try{n&&!n.done&&(r=a.return)&&r.call(a);}finally{if(o)throw o.error}}return i}function __spreadArray(e,t,r){if(r||2===arguments.length)for(var n,o=0,a=t.length;o<a;o++)!n&&o in t||(n||(n=Array.prototype.slice.call(t,0,o)),n[o]=t[o]);return e.concat(n||Array.prototype.slice.call(t))}function __await(e){return this instanceof __await?(this.v=e,this):new __await(e)}function __asyncGenerator(e,t,r){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var n,o=r.apply(e,t||[]),a=[];return n={},i("next"),i("throw"),i("return"),n[Symbol.asyncIterator]=function(){return this},n;function i(e){o[e]&&(n[e]=function(t){return new Promise((function(r,n){a.push([e,t,r,n])>1||c(e,t);}))});}function c(e,t){try{(r=o[e](t)).value instanceof __await?Promise.resolve(r.value.v).then(u,f):l(a[0][2],r);}catch(e){l(a[0][3],e);}var r;}function u(e){c("next",e);}function f(e){c("throw",e);}function l(e,t){e(t),a.shift(),a.length&&c(a[0][0],a[0][1]);}}function __asyncValues(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,r=e[Symbol.asyncIterator];return r?r.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},n("next"),n("throw"),n("return"),t[Symbol.asyncIterator]=function(){return this},t);function n(r){t[r]=e[r]&&function(t){return new Promise((function(n,o){(function(e,t,r,n){Promise.resolve(n).then((function(t){e({value:t,done:r});}),t);})(n,o,(t=e[r](t)).done,t.value);}))};}}function __classPrivateFieldGet(e,t,r,n){if("a"===r&&!n)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return "m"===r?n:"a"===r?n.call(e):n?n.value:t.get(e)}function __classPrivateFieldSet(e,t,r,n,o){if("m"===n)throw new TypeError("Private method is not writable");if("a"===n&&!o)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!o:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return "a"===n?o.call(e,r):o?o.value=r:t.set(e,r),r}

	function getRandomValues(o){return xglobal.crypto.getRandomValues(o)}

	var _nodeResolve_empty = {};

	var _nodeResolve_empty$1 = /*#__PURE__*/Object.freeze({
		__proto__: null,
		default: _nodeResolve_empty
	});

	/*! noble-secp256k1 - MIT License (c) 2019 Paul Miller (paulmillr.com) */
	const _0n$1=BigInt(0),_1n$1=BigInt(1),_2n$1=BigInt(2),_3n=BigInt(3),_8n=BigInt(8),CURVE=Object.freeze({a:_0n$1,b:BigInt(7),P:BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),n:BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),h:_1n$1,Gx:BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),Gy:BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee")}),divNearest=(t,e)=>(t+e/_2n$1)/e,endo={beta:BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),splitScalar(t){const{n:e}=CURVE,n=BigInt("0x3086d221a7d46bcde86c90e49284eb15"),r=-_1n$1*BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),i=BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),o=n,s=BigInt("0x100000000000000000000000000000000"),a=divNearest(o*t,e),c=divNearest(-r*t,e);let f=mod(t-a*n-c*i,e),u=mod(-a*r-c*o,e);const h=f>s,d=u>s;if(h&&(f=e-f),d&&(u=e-u),f>s||u>s)throw new Error("splitScalarEndo: Endomorphism failed, k="+t);return {k1neg:h,k1:f,k2neg:d,k2:u}}},fieldLen=32,groupLen=32,compressedLen=fieldLen+1,uncompressedLen=2*fieldLen+1;function weierstrass(t){const{a:e,b:n}=CURVE,r=mod(t*t),i=mod(r*t);return mod(i+e*t+n)}const USE_ENDOMORPHISM=CURVE.a===_0n$1;class ShaError extends Error{constructor(t){super(t);}}function assertJacPoint(t){if(!(t instanceof JacobianPoint))throw new TypeError("JacobianPoint expected")}class JacobianPoint{constructor(t,e,n){this.x=t,this.y=e,this.z=n;}static fromAffine(t){if(!(t instanceof Point))throw new TypeError("JacobianPoint#fromAffine: expected Point");return t.equals(Point.ZERO)?JacobianPoint.ZERO:new JacobianPoint(t.x,t.y,_1n$1)}static toAffineBatch(t){const e=invertBatch(t.map((t=>t.z)));return t.map(((t,n)=>t.toAffine(e[n])))}static normalizeZ(t){return JacobianPoint.toAffineBatch(t).map(JacobianPoint.fromAffine)}equals(t){assertJacPoint(t);const{x:e,y:n,z:r}=this,{x:i,y:o,z:s}=t,a=mod(r*r),c=mod(s*s),f=mod(e*c),u=mod(i*a),h=mod(mod(n*s)*c),d=mod(mod(o*r)*a);return f===u&&h===d}negate(){return new JacobianPoint(this.x,mod(-this.y),this.z)}double(){const{x:t,y:e,z:n}=this,r=mod(t*t),i=mod(e*e),o=mod(i*i),s=t+i,a=mod(_2n$1*(mod(s*s)-r-o)),c=mod(_3n*r),f=mod(c*c),u=mod(f-_2n$1*a),h=mod(c*(a-u)-_8n*o),d=mod(_2n$1*e*n);return new JacobianPoint(u,h,d)}add(t){assertJacPoint(t);const{x:e,y:n,z:r}=this,{x:i,y:o,z:s}=t;if(i===_0n$1||o===_0n$1)return this;if(e===_0n$1||n===_0n$1)return t;const a=mod(r*r),c=mod(s*s),f=mod(e*c),u=mod(i*a),h=mod(mod(n*s)*c),d=mod(mod(o*r)*a),y=mod(u-f),l=mod(d-h);if(y===_0n$1)return l===_0n$1?this.double():JacobianPoint.ZERO;const m=mod(y*y),g=mod(y*m),w=mod(f*m),p=mod(l*l-g-_2n$1*w),b=mod(l*(w-p)-h*g),S=mod(r*s*y);return new JacobianPoint(p,b,S)}subtract(t){return this.add(t.negate())}multiplyUnsafe(t){const e=JacobianPoint.ZERO;if("bigint"==typeof t&&t===_0n$1)return e;let n=normalizeScalar(t);if(n===_1n$1)return this;if(!USE_ENDOMORPHISM){let t=e,r=this;for(;n>_0n$1;)n&_1n$1&&(t=t.add(r)),r=r.double(),n>>=_1n$1;return t}let{k1neg:r,k1:i,k2neg:o,k2:s}=endo.splitScalar(n),a=e,c=e,f=this;for(;i>_0n$1||s>_0n$1;)i&_1n$1&&(a=a.add(f)),s&_1n$1&&(c=c.add(f)),f=f.double(),i>>=_1n$1,s>>=_1n$1;return r&&(a=a.negate()),o&&(c=c.negate()),c=new JacobianPoint(mod(c.x*endo.beta),c.y,c.z),a.add(c)}precomputeWindow(t){const e=USE_ENDOMORPHISM?128/t+1:256/t+1,n=[];let r=this,i=r;for(let o=0;o<e;o++){i=r,n.push(i);for(let e=1;e<2**(t-1);e++)i=i.add(r),n.push(i);r=i.double();}return n}wNAF(t,e){!e&&this.equals(JacobianPoint.BASE)&&(e=Point.BASE);const n=e&&e._WINDOW_SIZE||1;if(256%n)throw new Error("Point#wNAF: Invalid precomputation window, must be power of 2");let r=e&&pointPrecomputes.get(e);r||(r=this.precomputeWindow(n),e&&1!==n&&(r=JacobianPoint.normalizeZ(r),pointPrecomputes.set(e,r)));let i=JacobianPoint.ZERO,o=JacobianPoint.BASE;const s=1+(USE_ENDOMORPHISM?128/n:256/n),a=2**(n-1),c=BigInt(2**n-1),f=2**n,u=BigInt(n);for(let e=0;e<s;e++){const n=e*a;let s=Number(t&c);t>>=u,s>a&&(s-=f,t+=_1n$1);const h=n,d=n+Math.abs(s)-1,y=e%2!=0,l=s<0;0===s?o=o.add(constTimeNegate(y,r[h])):i=i.add(constTimeNegate(l,r[d]));}return {p:i,f:o}}multiply(t,e){let n,r,i=normalizeScalar(t);if(USE_ENDOMORPHISM){const{k1neg:t,k1:o,k2neg:s,k2:a}=endo.splitScalar(i);let{p:c,f:f}=this.wNAF(o,e),{p:u,f:h}=this.wNAF(a,e);c=constTimeNegate(t,c),u=constTimeNegate(s,u),u=new JacobianPoint(mod(u.x*endo.beta),u.y,u.z),n=c.add(u),r=f.add(h);}else {const{p:t,f:o}=this.wNAF(i,e);n=t,r=o;}return JacobianPoint.normalizeZ([n,r])[0]}toAffine(t){const{x:e,y:n,z:r}=this,i=this.equals(JacobianPoint.ZERO);null==t&&(t=i?_8n:invert(r));const o=t,s=mod(o*o),a=mod(s*o),c=mod(e*s),f=mod(n*a),u=mod(r*o);if(i)return Point.ZERO;if(u!==_1n$1)throw new Error("invZ was invalid");return new Point(c,f)}}function constTimeNegate(t,e){const n=e.negate();return t?n:e}JacobianPoint.BASE=new JacobianPoint(CURVE.Gx,CURVE.Gy,_1n$1),JacobianPoint.ZERO=new JacobianPoint(_0n$1,_1n$1,_0n$1);const pointPrecomputes=new WeakMap;class Point{constructor(t,e){this.x=t,this.y=e;}_setWindowSize(t){this._WINDOW_SIZE=t,pointPrecomputes.delete(this);}hasEvenY(){return this.y%_2n$1===_0n$1}static fromCompressedHex(t){const e=32===t.length,n=bytesToNumber(e?t:t.subarray(1));if(!isValidFieldElement(n))throw new Error("Point is not on curve");let r=sqrtMod(weierstrass(n));const i=(r&_1n$1)===_1n$1;if(e)i&&(r=mod(-r));else {1==(1&t[0])!==i&&(r=mod(-r));}const o=new Point(n,r);return o.assertValidity(),o}static fromUncompressedHex(t){const e=bytesToNumber(t.subarray(1,fieldLen+1)),n=bytesToNumber(t.subarray(fieldLen+1,2*fieldLen+1)),r=new Point(e,n);return r.assertValidity(),r}static fromHex(t){const e=ensureBytes(t),n=e.length,r=e[0];if(n===fieldLen)return this.fromCompressedHex(e);if(n===compressedLen&&(2===r||3===r))return this.fromCompressedHex(e);if(n===uncompressedLen&&4===r)return this.fromUncompressedHex(e);throw new Error(`Point.fromHex: received invalid point. Expected 32-${compressedLen} compressed bytes or ${uncompressedLen} uncompressed bytes, not ${n}`)}static fromPrivateKey(t){return Point.BASE.multiply(normalizePrivateKey(t))}static fromSignature(t,e,n){const{r:r,s:i}=normalizeSignature(e);if(![0,1,2,3].includes(n))throw new Error("Cannot recover: invalid recovery bit");const o=truncateHash(ensureBytes(t)),{n:s}=CURVE,a=2===n||3===n?r+s:r,c=invert(a,s),f=mod(-o*c,s),u=mod(i*c,s),h=1&n?"03":"02",d=Point.fromHex(h+numTo32bStr(a)),y=Point.BASE.multiplyAndAddUnsafe(d,f,u);if(!y)throw new Error("Cannot recover signature: point at infinify");return y.assertValidity(),y}toRawBytes(t=!1){return hexToBytes(this.toHex(t))}toHex(t=!1){const e=numTo32bStr(this.x);if(t){return `${this.hasEvenY()?"02":"03"}${e}`}return `04${e}${numTo32bStr(this.y)}`}toHexX(){return this.toHex(!0).slice(2)}toRawX(){return this.toRawBytes(!0).slice(1)}assertValidity(){const t="Point is not on elliptic curve",{x:e,y:n}=this;if(!isValidFieldElement(e)||!isValidFieldElement(n))throw new Error(t);const r=mod(n*n);if(mod(r-weierstrass(e))!==_0n$1)throw new Error(t)}equals(t){return this.x===t.x&&this.y===t.y}negate(){return new Point(this.x,mod(-this.y))}double(){return JacobianPoint.fromAffine(this).double().toAffine()}add(t){return JacobianPoint.fromAffine(this).add(JacobianPoint.fromAffine(t)).toAffine()}subtract(t){return this.add(t.negate())}multiply(t){return JacobianPoint.fromAffine(this).multiply(t,this).toAffine()}multiplyAndAddUnsafe(t,e,n){const r=JacobianPoint.fromAffine(this),i=e===_0n$1||e===_1n$1||this!==Point.BASE?r.multiplyUnsafe(e):r.multiply(e),o=JacobianPoint.fromAffine(t).multiplyUnsafe(n),s=i.add(o);return s.equals(JacobianPoint.ZERO)?void 0:s.toAffine()}}function sliceDER(t){return Number.parseInt(t[0],16)>=8?"00"+t:t}function parseDERInt(t){if(t.length<2||2!==t[0])throw new Error(`Invalid signature integer tag: ${bytesToHex(t)}`);const e=t[1],n=t.subarray(2,e+2);if(!e||n.length!==e)throw new Error("Invalid signature integer: wrong length");if(0===n[0]&&n[1]<=127)throw new Error("Invalid signature integer: trailing length");return {data:bytesToNumber(n),left:t.subarray(e+2)}}function parseDERSignature(t){if(t.length<2||48!=t[0])throw new Error(`Invalid signature tag: ${bytesToHex(t)}`);if(t[1]!==t.length-2)throw new Error("Invalid signature: incorrect length");const{data:e,left:n}=parseDERInt(t.subarray(2)),{data:r,left:i}=parseDERInt(n);if(i.length)throw new Error(`Invalid signature: left bytes after parsing: ${bytesToHex(i)}`);return {r:e,s:r}}Point.BASE=new Point(CURVE.Gx,CURVE.Gy),Point.ZERO=new Point(_0n$1,_0n$1);class Signature{constructor(t,e){this.r=t,this.s=e,this.assertValidity();}static fromCompact(t){const e=t instanceof Uint8Array,n="Signature.fromCompact";if("string"!=typeof t&&!e)throw new TypeError(`${n}: Expected string or Uint8Array`);const r=e?bytesToHex(t):t;if(128!==r.length)throw new Error(`${n}: Expected 64-byte hex`);return new Signature(hexToNumber(r.slice(0,64)),hexToNumber(r.slice(64,128)))}static fromDER(t){const e=t instanceof Uint8Array;if("string"!=typeof t&&!e)throw new TypeError("Signature.fromDER: Expected string or Uint8Array");const{r:n,s:r}=parseDERSignature(e?t:hexToBytes(t));return new Signature(n,r)}static fromHex(t){return this.fromDER(t)}assertValidity(){const{r:t,s:e}=this;if(!isWithinCurveOrder(t))throw new Error("Invalid Signature: r must be 0 < r < n");if(!isWithinCurveOrder(e))throw new Error("Invalid Signature: s must be 0 < s < n")}hasHighS(){const t=CURVE.n>>_1n$1;return this.s>t}normalizeS(){return this.hasHighS()?new Signature(this.r,mod(-this.s,CURVE.n)):this}toDERRawBytes(){return hexToBytes(this.toDERHex())}toDERHex(){const t=sliceDER(numberToHexUnpadded(this.s)),e=sliceDER(numberToHexUnpadded(this.r)),n=t.length/2,r=e.length/2,i=numberToHexUnpadded(n),o=numberToHexUnpadded(r);return `30${numberToHexUnpadded(r+n+4)}02${o}${e}02${i}${t}`}toRawBytes(){return this.toDERRawBytes()}toHex(){return this.toDERHex()}toCompactRawBytes(){return hexToBytes(this.toCompactHex())}toCompactHex(){return numTo32bStr(this.r)+numTo32bStr(this.s)}}function concatBytes(...t){if(!t.every((t=>t instanceof Uint8Array)))throw new Error("Uint8Array list expected");if(1===t.length)return t[0];const e=t.reduce(((t,e)=>t+e.length),0),n=new Uint8Array(e);for(let e=0,r=0;e<t.length;e++){const i=t[e];n.set(i,r),r+=i.length;}return n}const hexes=Array.from({length:256},((t,e)=>e.toString(16).padStart(2,"0")));function bytesToHex(t){if(!(t instanceof Uint8Array))throw new Error("Expected Uint8Array");let e="";for(let n=0;n<t.length;n++)e+=hexes[t[n]];return e}const POW_2_256=BigInt("0x10000000000000000000000000000000000000000000000000000000000000000");function numTo32bStr(t){if("bigint"!=typeof t)throw new Error("Expected bigint");if(!(_0n$1<=t&&t<POW_2_256))throw new Error("Expected number 0 <= n < 2^256");return t.toString(16).padStart(64,"0")}function numTo32b(t){const e=hexToBytes(numTo32bStr(t));if(32!==e.length)throw new Error("Error: expected 32 bytes");return e}function numberToHexUnpadded(t){const e=t.toString(16);return 1&e.length?`0${e}`:e}function hexToNumber(t){if("string"!=typeof t)throw new TypeError("hexToNumber: expected string, got "+typeof t);return BigInt(`0x${t}`)}function hexToBytes(t){if("string"!=typeof t)throw new TypeError("hexToBytes: expected string, got "+typeof t);if(t.length%2)throw new Error("hexToBytes: received invalid unpadded hex"+t.length);const e=new Uint8Array(t.length/2);for(let n=0;n<e.length;n++){const r=2*n,i=t.slice(r,r+2),o=Number.parseInt(i,16);if(Number.isNaN(o)||o<0)throw new Error("Invalid byte sequence");e[n]=o;}return e}function bytesToNumber(t){return hexToNumber(bytesToHex(t))}function ensureBytes(t){return t instanceof Uint8Array?Uint8Array.from(t):hexToBytes(t)}function normalizeScalar(t){if("number"==typeof t&&Number.isSafeInteger(t)&&t>0)return BigInt(t);if("bigint"==typeof t&&isWithinCurveOrder(t))return t;throw new TypeError("Expected valid private scalar: 0 < scalar < curve.n")}function mod(t,e=CURVE.P){const n=t%e;return n>=_0n$1?n:e+n}function pow2(t,e){const{P:n}=CURVE;let r=t;for(;e-- >_0n$1;)r*=r,r%=n;return r}function sqrtMod(t){const{P:e}=CURVE,n=BigInt(6),r=BigInt(11),i=BigInt(22),o=BigInt(23),s=BigInt(44),a=BigInt(88),c=t*t*t%e,f=c*c*t%e,u=pow2(f,_3n)*f%e,h=pow2(u,_3n)*f%e,d=pow2(h,_2n$1)*c%e,y=pow2(d,r)*d%e,l=pow2(y,i)*y%e,m=pow2(l,s)*l%e,g=pow2(m,a)*m%e,w=pow2(g,s)*l%e,p=pow2(w,_3n)*f%e,b=pow2(p,o)*y%e,S=pow2(b,n)*c%e,E=pow2(S,_2n$1);if(E*E%e!==t)throw new Error("Cannot find square root");return E}function invert(t,e=CURVE.P){if(t===_0n$1||e<=_0n$1)throw new Error(`invert: expected positive integers, got n=${t} mod=${e}`);let n=mod(t,e),r=e,i=_0n$1,s=_1n$1;for(;n!==_0n$1;){const t=r/n,e=r%n,c=i-s*t;r=n,n=e,i=s,s=c;}if(r!==_1n$1)throw new Error("invert: does not exist");return mod(i,e)}function invertBatch(t,e=CURVE.P){const n=new Array(t.length),r=invert(t.reduce(((t,r,i)=>r===_0n$1?t:(n[i]=t,mod(t*r,e))),_1n$1),e);return t.reduceRight(((t,r,i)=>r===_0n$1?t:(n[i]=mod(t*n[i],e),mod(t*r,e))),r),n}function bits2int_2(t){const e=8*t.length-8*groupLen,n=bytesToNumber(t);return e>0?n>>BigInt(e):n}function truncateHash(t,e=!1){const n=bits2int_2(t);if(e)return n;const{n:r}=CURVE;return n>=r?n-r:n}let _sha256Sync,_hmacSha256Sync;class HmacDrbg{constructor(t,e){if(this.hashLen=t,this.qByteLen=e,"number"!=typeof t||t<2)throw new Error("hashLen must be a number");if("number"!=typeof e||e<2)throw new Error("qByteLen must be a number");this.v=new Uint8Array(t).fill(1),this.k=new Uint8Array(t).fill(0),this.counter=0;}hmac(...t){return utils.hmacSha256(this.k,...t)}hmacSync(...t){return _hmacSha256Sync(this.k,...t)}checkSync(){if("function"!=typeof _hmacSha256Sync)throw new ShaError("hmacSha256Sync needs to be set")}incr(){if(this.counter>=1e3)throw new Error("Tried 1,000 k values for sign(), all were invalid");this.counter+=1;}async reseed(t=new Uint8Array){this.k=await this.hmac(this.v,Uint8Array.from([0]),t),this.v=await this.hmac(this.v),0!==t.length&&(this.k=await this.hmac(this.v,Uint8Array.from([1]),t),this.v=await this.hmac(this.v));}reseedSync(t=new Uint8Array){this.checkSync(),this.k=this.hmacSync(this.v,Uint8Array.from([0]),t),this.v=this.hmacSync(this.v),0!==t.length&&(this.k=this.hmacSync(this.v,Uint8Array.from([1]),t),this.v=this.hmacSync(this.v));}async generate(){this.incr();let t=0;const e=[];for(;t<this.qByteLen;){this.v=await this.hmac(this.v);const n=this.v.slice();e.push(n),t+=this.v.length;}return concatBytes(...e)}generateSync(){this.checkSync(),this.incr();let t=0;const e=[];for(;t<this.qByteLen;){this.v=this.hmacSync(this.v);const n=this.v.slice();e.push(n),t+=this.v.length;}return concatBytes(...e)}}function isWithinCurveOrder(t){return _0n$1<t&&t<CURVE.n}function isValidFieldElement(t){return _0n$1<t&&t<CURVE.P}function kmdToSig(t,e,n,r=!0){const{n:i}=CURVE,o=truncateHash(t,!0);if(!isWithinCurveOrder(o))return;const s=invert(o,i),a=Point.BASE.multiply(o),c=mod(a.x,i);if(c===_0n$1)return;const f=mod(s*mod(e+n*c,i),i);if(f===_0n$1)return;let u=new Signature(c,f),h=(a.x===u.r?0:2)|Number(a.y&_1n$1);return r&&u.hasHighS()&&(u=u.normalizeS(),h^=1),{sig:u,recovery:h}}function normalizePrivateKey(t){let e;if("bigint"==typeof t)e=t;else if("number"==typeof t&&Number.isSafeInteger(t)&&t>0)e=BigInt(t);else if("string"==typeof t){if(t.length!==2*groupLen)throw new Error("Expected 32 bytes of private key");e=hexToNumber(t);}else {if(!(t instanceof Uint8Array))throw new TypeError("Expected valid private key");if(t.length!==groupLen)throw new Error("Expected 32 bytes of private key");e=bytesToNumber(t);}if(!isWithinCurveOrder(e))throw new Error("Expected private key: 0 < key < n");return e}function normalizeSignature(t){if(t instanceof Signature)return t.assertValidity(),t;try{return Signature.fromDER(t)}catch(e){return Signature.fromCompact(t)}}function getPublicKey(t,e=!1){return Point.fromPrivateKey(t).toRawBytes(e)}function recoverPublicKey(t,e,n,r=!1){return Point.fromSignature(t,e,n).toRawBytes(r)}function bits2int(t){return bytesToNumber(t.length>fieldLen?t.slice(0,fieldLen):t)}function bits2octets(t){const e=bits2int(t),n=mod(e,CURVE.n);return int2octets(n<_0n$1?e:n)}function int2octets(t){return numTo32b(t)}function initSigArgs(t,e,n){if(null==t)throw new Error(`sign: expected valid message hash, not "${t}"`);const r=ensureBytes(t),i=normalizePrivateKey(e),o=[int2octets(i),bits2octets(r)];if(null!=n){!0===n&&(n=utils.randomBytes(fieldLen));const t=ensureBytes(n);if(t.length!==fieldLen)throw new Error(`sign: Expected ${fieldLen} bytes of extra data`);o.push(t);}return {seed:concatBytes(...o),m:bits2int(r),d:i}}function finalizeSig(t,e){const{sig:n,recovery:r}=t,{der:i,recovered:o}=Object.assign({canonical:!0,der:!0},e),s=i?n.toDERRawBytes():n.toCompactRawBytes();return o?[s,r]:s}function signSync(t,e,n={}){const{seed:r,m:i,d:o}=initSigArgs(t,e,n.extraEntropy),s=new HmacDrbg(32,groupLen);let a;for(s.reseedSync(r);!(a=kmdToSig(s.generateSync(),i,o,n.canonical));)s.reseedSync();return finalizeSig(a,n)}Point.BASE._setWindowSize(8);const crypto={node:_nodeResolve_empty$1,web:"object"==typeof self&&"crypto"in self?self.crypto:void 0},TAGGED_HASH_PREFIXES={};const utils={bytesToHex:bytesToHex,hexToBytes:hexToBytes,concatBytes:concatBytes,mod:mod,invert:invert,isValidPrivateKey(t){try{return normalizePrivateKey(t),!0}catch(t){return !1}},_bigintTo32Bytes:numTo32b,_normalizePrivateKey:normalizePrivateKey,hashToPrivateKey:t=>{t=ensureBytes(t);const e=groupLen+8;if(t.length<e||t.length>1024)throw new Error("Expected valid bytes of private key as per FIPS 186");return numTo32b(mod(bytesToNumber(t),CURVE.n-_1n$1)+_1n$1)},randomBytes:(t=32)=>{if(crypto.web)return crypto.web.getRandomValues(new Uint8Array(t));if(crypto.node){const{randomBytes:e}=crypto.node;return Uint8Array.from(e(t))}throw new Error("The environment doesn't have randomBytes function")},randomPrivateKey:()=>utils.hashToPrivateKey(utils.randomBytes(groupLen+8)),precompute(t=8,e=Point.BASE){const n=e===Point.BASE?e:new Point(e.x,e.y);return n._setWindowSize(t),n.multiply(_3n),n},sha256:async(...t)=>{if(crypto.web){const e=await crypto.web.subtle.digest("SHA-256",concatBytes(...t));return new Uint8Array(e)}if(crypto.node){const{createHash:e}=crypto.node,n=e("sha256");return t.forEach((t=>n.update(t))),Uint8Array.from(n.digest())}throw new Error("The environment doesn't have sha256 function")},hmacSha256:async(t,...e)=>{if(crypto.web){const n=await crypto.web.subtle.importKey("raw",t,{name:"HMAC",hash:{name:"SHA-256"}},!1,["sign"]),r=concatBytes(...e),i=await crypto.web.subtle.sign("HMAC",n,r);return new Uint8Array(i)}if(crypto.node){const{createHmac:n}=crypto.node,r=n("sha256",t);return e.forEach((t=>r.update(t))),Uint8Array.from(r.digest())}throw new Error("The environment doesn't have hmac-sha256 function")},sha256Sync:void 0,hmacSha256Sync:void 0,taggedHash:async(t,...e)=>{let n=TAGGED_HASH_PREFIXES[t];if(void 0===n){const e=await utils.sha256(Uint8Array.from(t,(t=>t.charCodeAt(0))));n=concatBytes(e,e),TAGGED_HASH_PREFIXES[t]=n;}return utils.sha256(n,...e)},taggedHashSync:(t,...e)=>{if("function"!=typeof _sha256Sync)throw new ShaError("sha256Sync is undefined, you need to set it");let n=TAGGED_HASH_PREFIXES[t];if(void 0===n){const e=_sha256Sync(Uint8Array.from(t,(t=>t.charCodeAt(0))));n=concatBytes(e,e),TAGGED_HASH_PREFIXES[t]=n;}return _sha256Sync(n,...e)},_JacobianPoint:JacobianPoint};Object.defineProperties(utils,{sha256Sync:{configurable:!1,get:()=>_sha256Sync,set(t){_sha256Sync||(_sha256Sync=t);}},hmacSha256Sync:{configurable:!1,get:()=>_hmacSha256Sync,set(t){_hmacSha256Sync||(_hmacSha256Sync=t);}}});

	function number(e){if(!Number.isSafeInteger(e)||e<0)throw new Error(`Wrong positive integer: ${e}`)}function bool$1(e){if("boolean"!=typeof e)throw new Error(`Expected boolean, not ${e}`)}function bytes$1(e,...t){if(!(e instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(t.length>0&&!t.includes(e.length))throw new TypeError(`Expected Uint8Array of length ${t}, not of length=${e.length}`)}function hash(e){if("function"!=typeof e||"function"!=typeof e.create)throw new Error("Hash should be wrapped by utils.wrapConstructor");number(e.outputLen),number(e.blockLen);}function exists(e,t=!0){if(e.destroyed)throw new Error("Hash instance has been destroyed");if(t&&e.finished)throw new Error("Hash#digest() has already been called")}function output(e,t){bytes$1(e);const o=t.outputLen;if(e.length<o)throw new Error(`digestInto() expects output buffer of length at least ${o}`)}const assert={number:number,bool:bool$1,bytes:bytes$1,hash:hash,exists:exists,output:output};

	/*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
	const u32$2=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4));const createView=t=>new DataView(t.buffer,t.byteOffset,t.byteLength);const rotr=(t,e)=>t<<32-e|t>>>e;const isLE=68===new Uint8Array(new Uint32Array([287454020]).buffer)[0];if(!isLE)throw new Error("Non little-endian hardware is not supported");Array.from({length:256},((t,e)=>e.toString(16).padStart(2,"0")));function utf8ToBytes(t){if("string"!=typeof t)throw new TypeError("utf8ToBytes expected string, got "+typeof t);return (new TextEncoder).encode(t)}function toBytes(t){if("string"==typeof t&&(t=utf8ToBytes(t)),!(t instanceof Uint8Array))throw new TypeError(`Expected input type is Uint8Array (got ${typeof t})`);return t}class Hash{clone(){return this._cloneInto()}}function checkOpts(t,e){if(void 0!==e&&("object"!=typeof e||(r=e,"[object Object]"!==Object.prototype.toString.call(r)||r.constructor!==Object)))throw new TypeError("Options should be object or undefined");var r;return Object.assign(t,e)}function wrapConstructor(t){const e=e=>t().update(toBytes(e)).digest(),r=t();return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=()=>t(),e}function wrapConstructorWithOpts(t){const e=(e,r)=>t(r).update(toBytes(e)).digest(),r=t({});return e.outputLen=r.outputLen,e.blockLen=r.blockLen,e.create=e=>t(e),e}

	class HMAC extends Hash{constructor(t,s){super(),this.finished=!1,this.destroyed=!1,assert.hash(t);const e=toBytes(s);if(this.iHash=t.create(),"function"!=typeof this.iHash.update)throw new TypeError("Expected instance of class which extends utils.Hash");this.blockLen=this.iHash.blockLen,this.outputLen=this.iHash.outputLen;const i=this.blockLen,h=new Uint8Array(i);h.set(e.length>i?t.create().update(e).digest():e);for(let t=0;t<h.length;t++)h[t]^=54;this.iHash.update(h),this.oHash=t.create();for(let t=0;t<h.length;t++)h[t]^=106;this.oHash.update(h),h.fill(0);}update(t){return assert.exists(this),this.iHash.update(t),this}digestInto(t){assert.exists(this),assert.bytes(t,this.outputLen),this.finished=!0,this.iHash.digestInto(t),this.oHash.update(t),this.oHash.digestInto(t),this.destroy();}digest(){const t=new Uint8Array(this.oHash.outputLen);return this.digestInto(t),t}_cloneInto(t){t||(t=Object.create(Object.getPrototypeOf(this),{}));const{oHash:s,iHash:e,finished:i,destroyed:h,blockLen:o,outputLen:a}=this;return t.finished=i,t.destroyed=h,t.blockLen=o,t.outputLen=a,t.oHash=s._cloneInto(t.oHash),t.iHash=e._cloneInto(t.iHash),t}destroy(){this.destroyed=!0,this.oHash.destroy(),this.iHash.destroy();}}const hmac=(t,s,e)=>new HMAC(t,s).update(e).digest();hmac.create=(t,s)=>new HMAC(t,s);

	function setBigUint64(t,s,e,i){if("function"==typeof t.setBigUint64)return t.setBigUint64(s,e,i);const n=BigInt(32),o=BigInt(4294967295),r=Number(e>>n&o),h=Number(e&o),f=i?4:0,u=i?0:4;t.setUint32(s+f,r,i),t.setUint32(s+u,h,i);}class SHA2 extends Hash{constructor(t,s,e,i){super(),this.blockLen=t,this.outputLen=s,this.padOffset=e,this.isLE=i,this.finished=!1,this.length=0,this.pos=0,this.destroyed=!1,this.buffer=new Uint8Array(t),this.view=createView(this.buffer);}update(t){assert.exists(this);const{view:s,buffer:e,blockLen:i}=this,n=(t=toBytes(t)).length;for(let o=0;o<n;){const r=Math.min(i-this.pos,n-o);if(r!==i)e.set(t.subarray(o,o+r),this.pos),this.pos+=r,o+=r,this.pos===i&&(this.process(s,0),this.pos=0);else {const s=createView(t);for(;i<=n-o;o+=i)this.process(s,o);}}return this.length+=t.length,this.roundClean(),this}digestInto(t){assert.exists(this),assert.output(t,this),this.finished=!0;const{buffer:s,view:e,blockLen:i,isLE:n}=this;let{pos:o}=this;s[o++]=128,this.buffer.subarray(o).fill(0),this.padOffset>i-o&&(this.process(e,0),o=0);for(let t=o;t<i;t++)s[t]=0;setBigUint64(e,i-8,BigInt(8*this.length),n),this.process(e,0);const r=createView(t),h=this.outputLen;if(h%4)throw new Error("_sha2: outputLen should be aligned to 32bit");const f=h/4,u=this.get();if(f>u.length)throw new Error("_sha2: outputLen bigger than state");for(let t=0;t<f;t++)r.setUint32(4*t,u[t],n);}digest(){const{buffer:t,outputLen:s}=this;this.digestInto(t);const e=t.slice(0,s);return this.destroy(),e}_cloneInto(t){t||(t=new this.constructor),t.set(...this.get());const{blockLen:s,buffer:e,length:i,finished:n,destroyed:o,pos:r}=this;return t.length=i,t.pos=r,t.finished=n,t.destroyed=o,i%s&&t.buffer.set(e),t}}

	const Maj=(t,s,r)=>t&s^t&r^s&r,SHA256_K=new Uint32Array([1116352408,1899447441,3049323471,3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,2361852424,2428436474,2756734187,3204031479,3329325298]),IV$1=new Uint32Array([1779033703,3144134277,1013904242,2773480762,1359893119,2600822924,528734635,1541459225]),SHA256_W=new Uint32Array(64);class SHA256 extends SHA2{constructor(){super(64,32,8,!1),this.A=0|IV$1[0],this.B=0|IV$1[1],this.C=0|IV$1[2],this.D=0|IV$1[3],this.E=0|IV$1[4],this.F=0|IV$1[5],this.G=0|IV$1[6],this.H=0|IV$1[7];}get(){const{A:t,B:s,C:r,D:i,E:h,F:o,G:e,H:A}=this;return [t,s,r,i,h,o,e,A]}set(t,s,r,i,h,o,e,A){this.A=0|t,this.B=0|s,this.C=0|r,this.D=0|i,this.E=0|h,this.F=0|o,this.G=0|e,this.H=0|A;}process(t,s){for(let r=0;r<16;r++,s+=4)SHA256_W[r]=t.getUint32(s,!1);for(let t=16;t<64;t++){const s=SHA256_W[t-15],r=SHA256_W[t-2],i=rotr(s,7)^rotr(s,18)^s>>>3,h=rotr(r,17)^rotr(r,19)^r>>>10;SHA256_W[t]=h+SHA256_W[t-7]+i+SHA256_W[t-16]|0;}let{A:r,B:i,C:h,D:o,E:e,F:A,G:n,H:H}=this;for(let t=0;t<64;t++){const s=H+(rotr(e,6)^rotr(e,11)^rotr(e,25))+((S=e)&A^~S&n)+SHA256_K[t]+SHA256_W[t]|0,c=(rotr(r,2)^rotr(r,13)^rotr(r,22))+Maj(r,i,h)|0;H=n,n=A,A=e,e=o+s|0,o=h,h=i,i=r,r=s+c|0;}var S;r=r+this.A|0,i=i+this.B|0,h=h+this.C|0,o=o+this.D|0,e=e+this.E|0,A=A+this.F|0,n=n+this.G|0,H=H+this.H|0,this.set(r,i,h,o,e,A,n,H);}roundClean(){SHA256_W.fill(0);}destroy(){this.set(0,0,0,0,0,0,0,0),this.buffer.fill(0);}}class SHA224 extends SHA256{constructor(){super(),this.A=-1056596264,this.B=914150663,this.C=812702999,this.D=-150054599,this.E=-4191439,this.F=1750603025,this.G=1694076839,this.H=-1090891868,this.outputLen=28;}}const sha256$1=wrapConstructor((()=>new SHA256));wrapConstructor((()=>new SHA224));

	const U32_MASK64=BigInt(2**32-1),_32n$1=BigInt(32);function fromBig(r,t=!1){return t?{h:Number(r&U32_MASK64),l:Number(r>>_32n$1&U32_MASK64)}:{h:0|Number(r>>_32n$1&U32_MASK64),l:0|Number(r&U32_MASK64)}}function split(r,t=!1){let o=new Uint32Array(r.length),d=new Uint32Array(r.length);for(let n=0;n<r.length;n++){const{h:H,l:L}=fromBig(r[n],t);[o[n],d[n]]=[H,L];}return [o,d]}const toBig=(r,t)=>BigInt(r>>>0)<<_32n$1|BigInt(t>>>0);const shrSH=(r,t,o)=>r>>>o,shrSL=(r,t,o)=>r<<32-o|t>>>o,rotrSH=(r,t,o)=>r>>>o|t<<32-o,rotrSL=(r,t,o)=>r<<32-o|t>>>o,rotrBH=(r,t,o)=>r<<64-o|t>>>o-32,rotrBL=(r,t,o)=>r>>>o-32|t<<64-o,rotr32H=(r,t)=>t,rotr32L=(r,t)=>r,rotlSH=(r,t,o)=>r<<o|t>>>32-o,rotlSL=(r,t,o)=>t<<o|r>>>32-o,rotlBH=(r,t,o)=>t<<o-32|r>>>64-o,rotlBL=(r,t,o)=>r<<o-32|t>>>64-o;function add(r,t,o,d){const n=(t>>>0)+(d>>>0);return {h:r+o+(n/2**32|0)|0,l:0|n}}const add3L=(r,t,o)=>(r>>>0)+(t>>>0)+(o>>>0),add3H=(r,t,o,d)=>t+o+d+(r/2**32|0)|0,add4L=(r,t,o,d)=>(r>>>0)+(t>>>0)+(o>>>0)+(d>>>0),add4H=(r,t,o,d,n)=>t+o+d+n+(r/2**32|0)|0,add5L=(r,t,o,d,n)=>(r>>>0)+(t>>>0)+(o>>>0)+(d>>>0)+(n>>>0),add5H=(r,t,o,d,n,H)=>t+o+d+n+H+(r/2**32|0)|0,u64$1={fromBig:fromBig,split:split,toBig:toBig,shrSH:shrSH,shrSL:shrSL,rotrSH:rotrSH,rotrSL:rotrSL,rotrBH:rotrBH,rotrBL:rotrBL,rotr32H:rotr32H,rotr32L:rotr32L,rotlSH:rotlSH,rotlSL:rotlSL,rotlBH:rotlBH,rotlBL:rotlBL,add:add,add3L:add3L,add3H:add3H,add4L:add4L,add4H:add4H,add5H:add5H,add5L:add5L};

	const[SHA512_Kh,SHA512_Kl]=u64$1.split(["0x428a2f98d728ae22","0x7137449123ef65cd","0xb5c0fbcfec4d3b2f","0xe9b5dba58189dbbc","0x3956c25bf348b538","0x59f111f1b605d019","0x923f82a4af194f9b","0xab1c5ed5da6d8118","0xd807aa98a3030242","0x12835b0145706fbe","0x243185be4ee4b28c","0x550c7dc3d5ffb4e2","0x72be5d74f27b896f","0x80deb1fe3b1696b1","0x9bdc06a725c71235","0xc19bf174cf692694","0xe49b69c19ef14ad2","0xefbe4786384f25e3","0x0fc19dc68b8cd5b5","0x240ca1cc77ac9c65","0x2de92c6f592b0275","0x4a7484aa6ea6e483","0x5cb0a9dcbd41fbd4","0x76f988da831153b5","0x983e5152ee66dfab","0xa831c66d2db43210","0xb00327c898fb213f","0xbf597fc7beef0ee4","0xc6e00bf33da88fc2","0xd5a79147930aa725","0x06ca6351e003826f","0x142929670a0e6e70","0x27b70a8546d22ffc","0x2e1b21385c26c926","0x4d2c6dfc5ac42aed","0x53380d139d95b3df","0x650a73548baf63de","0x766a0abb3c77b2a8","0x81c2c92e47edaee6","0x92722c851482353b","0xa2bfe8a14cf10364","0xa81a664bbc423001","0xc24b8b70d0f89791","0xc76c51a30654be30","0xd192e819d6ef5218","0xd69906245565a910","0xf40e35855771202a","0x106aa07032bbd1b8","0x19a4c116b8d2d0c8","0x1e376c085141ab53","0x2748774cdf8eeb99","0x34b0bcb5e19b48a8","0x391c0cb3c5c95a63","0x4ed8aa4ae3418acb","0x5b9cca4f7763e373","0x682e6ff3d6b2b8a3","0x748f82ee5defb2fc","0x78a5636f43172f60","0x84c87814a1f0ab72","0x8cc702081a6439ec","0x90befffa23631e28","0xa4506cebde82bde9","0xbef9a3f7b2c67915","0xc67178f2e372532b","0xca273eceea26619c","0xd186b8c721c0c207","0xeada7dd6cde0eb1e","0xf57d4f7fee6ed178","0x06f067aa72176fba","0x0a637dc5a2c898a6","0x113f9804bef90dae","0x1b710b35131c471b","0x28db77f523047d84","0x32caab7b40c72493","0x3c9ebe0a15c9bebc","0x431d67c49c100d4c","0x4cc5d4becb3e42b6","0x597f299cfc657e2a","0x5fcb6fab3ad6faec","0x6c44198c4a475817"].map((h=>BigInt(h)))),SHA512_W_H=new Uint32Array(80),SHA512_W_L=new Uint32Array(80);class SHA512 extends SHA2{constructor(){super(128,64,16,!1),this.Ah=1779033703,this.Al=-205731576,this.Bh=-1150833019,this.Bl=-2067093701,this.Ch=1013904242,this.Cl=-23791573,this.Dh=-1521486534,this.Dl=1595750129,this.Eh=1359893119,this.El=-1377402159,this.Fh=-1694144372,this.Fl=725511199,this.Gh=528734635,this.Gl=-79577749,this.Hh=1541459225,this.Hl=327033209;}get(){const{Ah:h,Al:t,Bh:s,Bl:e,Ch:c,Cl:i,Dh:a,Dl:d,Eh:b,El:r,Fh:l,Fl:x,Gh:f,Gl:H,Hh:o,Hl:u}=this;return [h,t,s,e,c,i,a,d,b,r,l,x,f,H,o,u]}set(h,t,s,e,c,i,a,d,b,r,l,x,f,H,o,u){this.Ah=0|h,this.Al=0|t,this.Bh=0|s,this.Bl=0|e,this.Ch=0|c,this.Cl=0|i,this.Dh=0|a,this.Dl=0|d,this.Eh=0|b,this.El=0|r,this.Fh=0|l,this.Fl=0|x,this.Gh=0|f,this.Gl=0|H,this.Hh=0|o,this.Hl=0|u;}process(h,t){for(let s=0;s<16;s++,t+=4)SHA512_W_H[s]=h.getUint32(t),SHA512_W_L[s]=h.getUint32(t+=4);for(let h=16;h<80;h++){const t=0|SHA512_W_H[h-15],s=0|SHA512_W_L[h-15],e=u64$1.rotrSH(t,s,1)^u64$1.rotrSH(t,s,8)^u64$1.shrSH(t,s,7),c=u64$1.rotrSL(t,s,1)^u64$1.rotrSL(t,s,8)^u64$1.shrSL(t,s,7),i=0|SHA512_W_H[h-2],a=0|SHA512_W_L[h-2],d=u64$1.rotrSH(i,a,19)^u64$1.rotrBH(i,a,61)^u64$1.shrSH(i,a,6),b=u64$1.rotrSL(i,a,19)^u64$1.rotrBL(i,a,61)^u64$1.shrSL(i,a,6),r=u64$1.add4L(c,b,SHA512_W_L[h-7],SHA512_W_L[h-16]),l=u64$1.add4H(r,e,d,SHA512_W_H[h-7],SHA512_W_H[h-16]);SHA512_W_H[h]=0|l,SHA512_W_L[h]=0|r;}let{Ah:s,Al:e,Bh:c,Bl:i,Ch:a,Cl:d,Dh:b,Dl:r,Eh:l,El:x,Fh:f,Fl:H,Gh:o,Gl:u,Hh:A,Hl:S}=this;for(let h=0;h<80;h++){const t=u64$1.rotrSH(l,x,14)^u64$1.rotrSH(l,x,18)^u64$1.rotrBH(l,x,41),_=u64$1.rotrSL(l,x,14)^u64$1.rotrSL(l,x,18)^u64$1.rotrBL(l,x,41),n=l&f^~l&o,L=x&H^~x&u,B=u64$1.add5L(S,_,L,SHA512_Kl[h],SHA512_W_L[h]),p=u64$1.add5H(B,A,t,n,SHA512_Kh[h],SHA512_W_H[h]),C=0|B,W=u64$1.rotrSH(s,e,28)^u64$1.rotrBH(s,e,34)^u64$1.rotrBH(s,e,39),D=u64$1.rotrSL(s,e,28)^u64$1.rotrBL(s,e,34)^u64$1.rotrBL(s,e,39),E=s&c^s&a^c&a,F=e&i^e&d^i&d;A=0|o,S=0|u,o=0|f,u=0|H,f=0|l,H=0|x,({h:l,l:x}=u64$1.add(0|b,0|r,0|p,0|C)),b=0|a,r=0|d,a=0|c,d=0|i,c=0|s,i=0|e;const G=u64$1.add3L(C,D,F);s=u64$1.add3H(G,p,W,E),e=0|G;}(({h:s,l:e}=u64$1.add(0|this.Ah,0|this.Al,0|s,0|e))),({h:c,l:i}=u64$1.add(0|this.Bh,0|this.Bl,0|c,0|i)),({h:a,l:d}=u64$1.add(0|this.Ch,0|this.Cl,0|a,0|d)),({h:b,l:r}=u64$1.add(0|this.Dh,0|this.Dl,0|b,0|r)),({h:l,l:x}=u64$1.add(0|this.Eh,0|this.El,0|l,0|x)),({h:f,l:H}=u64$1.add(0|this.Fh,0|this.Fl,0|f,0|H)),({h:o,l:u}=u64$1.add(0|this.Gh,0|this.Gl,0|o,0|u)),({h:A,l:S}=u64$1.add(0|this.Hh,0|this.Hl,0|A,0|S)),this.set(s,e,c,i,a,d,b,r,l,x,f,H,o,u,A,S);}roundClean(){SHA512_W_H.fill(0),SHA512_W_L.fill(0);}destroy(){this.buffer.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);}}class SHA512_224 extends SHA512{constructor(){super(),this.Ah=-1942145080,this.Al=424955298,this.Bh=1944164710,this.Bl=-1982016298,this.Ch=502970286,this.Cl=855612546,this.Dh=1738396948,this.Dl=1479516111,this.Eh=258812777,this.El=2077511080,this.Fh=2011393907,this.Fl=79989058,this.Gh=1067287976,this.Gl=1780299464,this.Hh=286451373,this.Hl=-1848208735,this.outputLen=28;}}class SHA512_256 extends SHA512{constructor(){super(),this.Ah=573645204,this.Al=-64227540,this.Bh=-1621794909,this.Bl=-934517566,this.Ch=596883563,this.Cl=1867755857,this.Dh=-1774684391,this.Dl=1497426621,this.Eh=-1775747358,this.El=-1467023389,this.Fh=-1101128155,this.Fl=1401305490,this.Gh=721525244,this.Gl=746961066,this.Hh=246885852,this.Hl=-2117784414,this.outputLen=32;}}class SHA384 extends SHA512{constructor(){super(),this.Ah=-876896931,this.Al=-1056596264,this.Bh=1654270250,this.Bl=914150663,this.Ch=-1856437926,this.Cl=812702999,this.Dh=355462360,this.Dl=-150054599,this.Eh=1731405415,this.El=-4191439,this.Fh=-1900787065,this.Fl=1750603025,this.Gh=-619958771,this.Gl=1694076839,this.Hh=1203062813,this.Hl=-1090891868,this.outputLen=48;}}const sha512$1=wrapConstructor((()=>new SHA512));wrapConstructor((()=>new SHA512_224));wrapConstructor((()=>new SHA512_256));wrapConstructor((()=>new SHA384));

	var _Wbg_bridge;const DEFAULT_CRYPTO={getRandomValues:getRandomValues},DEFAULT_SELF={crypto:DEFAULT_CRYPTO};class Wbg{constructor(e){_Wbg_bridge.set(this,void 0),this.abort=()=>{throw new Error("abort")},this.__wbindgen_is_undefined=e=>void 0===__classPrivateFieldGet(this,_Wbg_bridge,"f").getObject(e),this.__wbindgen_throw=(e,_)=>{throw new Error(__classPrivateFieldGet(this,_Wbg_bridge,"f").getString(e,_))},this.__wbg_self_1b7a39e3a92c949c=()=>__classPrivateFieldGet(this,_Wbg_bridge,"f").addObject(DEFAULT_SELF),this.__wbg_require_604837428532a733=(e,_)=>{throw new Error(`Unable to require ${__classPrivateFieldGet(this,_Wbg_bridge,"f").getString(e,_)}`)},this.__wbg_crypto_968f1772287e2df0=e=>__classPrivateFieldGet(this,_Wbg_bridge,"f").addObject(DEFAULT_CRYPTO),this.__wbg_getRandomValues_a3d34b4fee3c2869=e=>__classPrivateFieldGet(this,_Wbg_bridge,"f").addObject(DEFAULT_CRYPTO.getRandomValues),this.__wbg_getRandomValues_f5e14ab7ac8e995d=(e,_,t)=>{DEFAULT_CRYPTO.getRandomValues(__classPrivateFieldGet(this,_Wbg_bridge,"f").getU8a(_,t));},this.__wbg_randomFillSync_d5bd2d655fdf256a=(e,_,t)=>{throw new Error("randomFillsync is not available")},this.__wbindgen_object_drop_ref=e=>{__classPrivateFieldGet(this,_Wbg_bridge,"f").takeObject(e);},__classPrivateFieldSet(this,_Wbg_bridge,e,"f");}}_Wbg_bridge=new WeakMap;

	var _Bridge_cachegetInt32,_Bridge_cachegetUint8,_Bridge_createWasm,_Bridge_heap,_Bridge_heapNext,_Bridge_wasm,_Bridge_wasmError,_Bridge_wasmPromise,_Bridge_wbg,_Bridge_type;class Bridge{constructor(e){_Bridge_cachegetInt32.set(this,void 0),_Bridge_cachegetUint8.set(this,void 0),_Bridge_createWasm.set(this,void 0),_Bridge_heap.set(this,void 0),_Bridge_heapNext.set(this,void 0),_Bridge_wasm.set(this,void 0),_Bridge_wasmError.set(this,void 0),_Bridge_wasmPromise.set(this,void 0),_Bridge_wbg.set(this,void 0),_Bridge_type.set(this,void 0),__classPrivateFieldSet(this,_Bridge_createWasm,e,"f"),__classPrivateFieldSet(this,_Bridge_cachegetInt32,null,"f"),__classPrivateFieldSet(this,_Bridge_cachegetUint8,null,"f"),__classPrivateFieldSet(this,_Bridge_heap,new Array(32).fill(void 0).concat(void 0,null,!0,!1),"f"),__classPrivateFieldSet(this,_Bridge_heapNext,__classPrivateFieldGet(this,_Bridge_heap,"f").length,"f"),__classPrivateFieldSet(this,_Bridge_type,"none","f"),__classPrivateFieldSet(this,_Bridge_wasm,null,"f"),__classPrivateFieldSet(this,_Bridge_wasmError,null,"f"),__classPrivateFieldSet(this,_Bridge_wasmPromise,null,"f"),__classPrivateFieldSet(this,_Bridge_wbg,{...new Wbg(this)},"f");}get error(){return __classPrivateFieldGet(this,_Bridge_wasmError,"f")}get type(){return __classPrivateFieldGet(this,_Bridge_type,"f")}get wasm(){return __classPrivateFieldGet(this,_Bridge_wasm,"f")}async init(e){__classPrivateFieldGet(this,_Bridge_wasmPromise,"f")&&!e||__classPrivateFieldSet(this,_Bridge_wasmPromise,(e||__classPrivateFieldGet(this,_Bridge_createWasm,"f"))(__classPrivateFieldGet(this,_Bridge_wbg,"f")),"f");const{error:t,type:i,wasm:_}=await __classPrivateFieldGet(this,_Bridge_wasmPromise,"f");return __classPrivateFieldSet(this,_Bridge_type,i,"f"),__classPrivateFieldSet(this,_Bridge_wasm,_,"f"),__classPrivateFieldSet(this,_Bridge_wasmError,t,"f"),__classPrivateFieldGet(this,_Bridge_wasm,"f")}getObject(e){return __classPrivateFieldGet(this,_Bridge_heap,"f")[e]}dropObject(e){e<36||(__classPrivateFieldGet(this,_Bridge_heap,"f")[e]=__classPrivateFieldGet(this,_Bridge_heapNext,"f"),__classPrivateFieldSet(this,_Bridge_heapNext,e,"f"));}takeObject(e){const t=this.getObject(e);return this.dropObject(e),t}addObject(e){__classPrivateFieldGet(this,_Bridge_heapNext,"f")===__classPrivateFieldGet(this,_Bridge_heap,"f").length&&__classPrivateFieldGet(this,_Bridge_heap,"f").push(__classPrivateFieldGet(this,_Bridge_heap,"f").length+1);const t=__classPrivateFieldGet(this,_Bridge_heapNext,"f");return __classPrivateFieldSet(this,_Bridge_heapNext,__classPrivateFieldGet(this,_Bridge_heap,"f")[t],"f"),__classPrivateFieldGet(this,_Bridge_heap,"f")[t]=e,t}getInt32(){return null!==__classPrivateFieldGet(this,_Bridge_cachegetInt32,"f")&&__classPrivateFieldGet(this,_Bridge_cachegetInt32,"f").buffer===__classPrivateFieldGet(this,_Bridge_wasm,"f").memory.buffer||__classPrivateFieldSet(this,_Bridge_cachegetInt32,new Int32Array(__classPrivateFieldGet(this,_Bridge_wasm,"f").memory.buffer),"f"),__classPrivateFieldGet(this,_Bridge_cachegetInt32,"f")}getUint8(){return null!==__classPrivateFieldGet(this,_Bridge_cachegetUint8,"f")&&__classPrivateFieldGet(this,_Bridge_cachegetUint8,"f").buffer===__classPrivateFieldGet(this,_Bridge_wasm,"f").memory.buffer||__classPrivateFieldSet(this,_Bridge_cachegetUint8,new Uint8Array(__classPrivateFieldGet(this,_Bridge_wasm,"f").memory.buffer),"f"),__classPrivateFieldGet(this,_Bridge_cachegetUint8,"f")}getU8a(e,t){return this.getUint8().subarray(e/1,e/1+t)}getString(e,t){return u8aToString(this.getU8a(e,t))}allocU8a(e){const t=__classPrivateFieldGet(this,_Bridge_wasm,"f").__wbindgen_malloc(1*e.length);return this.getUint8().set(e,t/1),[t,e.length]}allocString(e){return this.allocU8a(stringToU8a(e))}resultU8a(){const e=this.getInt32()[2],t=this.getInt32()[3],i=this.getU8a(e,t).slice();return __classPrivateFieldGet(this,_Bridge_wasm,"f").__wbindgen_free(e,1*t),i}resultString(){return u8aToString(this.resultU8a())}}_Bridge_cachegetInt32=new WeakMap,_Bridge_cachegetUint8=new WeakMap,_Bridge_createWasm=new WeakMap,_Bridge_heap=new WeakMap,_Bridge_heapNext=new WeakMap,_Bridge_wasm=new WeakMap,_Bridge_wasmError=new WeakMap,_Bridge_wasmPromise=new WeakMap,_Bridge_wbg=new WeakMap,_Bridge_type=new WeakMap;

	function createWasmFn(e,t,n){return async o=>{const r={error:null,type:"none",wasm:null};try{if(!t||!t.length)throw new Error("No WebAssembly provided for initialization");if("object"!=typeof WebAssembly||"function"!=typeof WebAssembly.instantiate)throw new Error("WebAssembly is not available in your environment");const e=await WebAssembly.instantiate(t,{wbg:o});r.wasm=e.instance.exports,r.type="wasm";}catch(t){"function"==typeof n?(r.wasm=n(o),r.type="asm"):(r.error=`FATAL: Unable to initialize @polkadot/wasm-${e}:: ${t.message}`,console.error(r.error));}return r}}

	const chr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",map$1=new Array(256);for(let e=0;e<chr.length;e++)map$1[chr.charCodeAt(e)]=e;function base64Decode$1(e,r){const t=r.length;let c=0,o=0,n=-1;for(let a=0;n<t;a++)c=c<<6|map$1[e.charCodeAt(a)],(o+=6)>=8&&(r[++n]=c>>>(o-=8)&255);return r}

	const u8$1=Uint8Array,u16$1=Uint16Array,u32$1=Uint32Array,clim=new u8$1([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),fleb=new u8$1([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),fdeb=new u8$1([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),freb=(t,e)=>{const n=new u16$1(31);for(let r=0;r<31;++r)n[r]=e+=1<<t[r-1];const r=new u32$1(n[30]);for(let t=1;t<30;++t)for(let e=n[t];e<n[t+1];++e)r[e]=e-n[t]<<5|t;return [n,r]},[fl,revfl]=freb(fleb,2);fl[28]=258,revfl[258]=28;const[fd]=freb(fdeb,0),rev=new u16$1(32768);for(let t=0;t<32768;++t){let e=(43690&t)>>>1|(21845&t)<<1;e=(52428&e)>>>2|(13107&e)<<2,e=(61680&e)>>>4|(3855&e)<<4,rev[t]=((65280&e)>>>8|(255&e)<<8)>>>1;}const hMap=(t,e,n)=>{const r=t.length;let f=0;const l=new u16$1(e);for(;f<r;++f)++l[t[f]-1];const o=new u16$1(e);for(f=0;f<e;++f)o[f]=o[f-1]+l[f-1]<<1;let s;if(n){s=new u16$1(1<<e);const n=15-e;for(f=0;f<r;++f)if(t[f]){const r=f<<4|t[f],l=e-t[f];let i=o[t[f]-1]++<<l;for(const t=i|(1<<l)-1;i<=t;++i)s[rev[i]>>>n]=r;}}else for(s=new u16$1(r),f=0;f<r;++f)s[f]=rev[o[t[f]-1]++]>>>15-t[f];return s},flt=new u8$1(288);for(let n=0;n<144;++n)flt[n]=8;for(let r=144;r<256;++r)flt[r]=9;for(let f=256;f<280;++f)flt[f]=7;for(let l=280;l<288;++l)flt[l]=8;const fdt=new u8$1(32);for(let o=0;o<32;++o)fdt[o]=5;const flrm=hMap(flt,9,1),fdrm=hMap(fdt,5,1),bits=(t,e,n)=>{const r=e>>>3;return (t[r]|t[r+1]<<8)>>>(7&e)&n},bits16=(t,e)=>{const n=e>>>3;return (t[n]|t[n+1]<<8|t[n+2]<<16)>>>(7&e)},slc=(t,e,n)=>{(null==e||e<0)&&(e=0),(null==n||n>t.length)&&(n=t.length);const r=new(t instanceof u16$1?u16$1:t instanceof u32$1?u32$1:u8$1)(n-e);return r.set(t.subarray(e,n)),r},max=t=>{let e=t[0];for(let n=1;n<t.length;++n)t[n]>e&&(e=t[n]);return e},inflt=(t,e,n)=>{const r=!n||n.i;n||(n={});const f=t.length,l=!e||!r;e||(e=new u8$1(3*f));const o=t=>{let n=e.length;if(t>n){const r=new u8$1(Math.max(n<<1,t));r.set(e),e=r;}};let s=n.f||0,i=n.p||0,c=n.b||0,u=n.l,a=n.d,b=n.m,d=n.n;if(s&&!u)return e;const w=f<<3;do{if(!u){n.f=s=bits(t,i,1);const p=bits(t,i+1,3);if(i+=3,!p){const s=((h=i)>>>3)+(7&h&&1)+4,u=t[s-4]|t[s-3]<<8,a=s+u;if(a>f){if(r)throw "unexpected EOF";break}l&&o(c+u),e.set(t.subarray(s,a),c),n.b=c+=u,n.p=i=a<<3;continue}if(1==p)u=flrm,a=fdrm,b=9,d=5;else {if(2!=p)throw "invalid block type";{const e=bits(t,i,31)+257,n=bits(t,i+10,15)+4,f=e+bits(t,i+5,31)+1;i+=14;const l=new u8$1(f),o=new u8$1(19);for(let e=0;e<n;++e)o[clim[e]]=bits(t,i+3*e,7);i+=3*n;const s=max(o),c=(1<<s)-1;if(!r&&i+f*(s+7)>w)break;const h=hMap(o,s,1);for(let e=0;e<f;){const n=h[bits(t,i,c)];i+=15&n;const r=n>>>4;if(r<16)l[e++]=r;else {let n=0,f=0;for(16==r?(f=3+bits(t,i,3),i+=2,n=l[e-1]):17==r?(f=3+bits(t,i,7),i+=3):18==r&&(f=11+bits(t,i,127),i+=7);f--;)l[e++]=n;}}const p=l.subarray(0,e),v=l.subarray(e);b=max(p),d=max(v),u=hMap(p,b,1),a=hMap(v,d,1);}}if(i>w)throw "unexpected EOF"}l&&o(c+131072);const p=(1<<b)-1,v=(1<<d)-1,m=b+d+18;for(;r||i+m<w;){const n=u[bits16(t,i)&p],r=n>>>4;if(i+=15&n,i>w)throw "unexpected EOF";if(!n)throw "invalid length/literal";if(r<256)e[c++]=r;else {if(256==r){u=void 0;break}{let n=r-254;if(r>264){const e=r-257,f=fleb[e];n=bits(t,i,(1<<f)-1)+fl[e],i+=f;}const f=a[bits16(t,i)&v],s=f>>>4;if(!f)throw "invalid distance";i+=15&f;let u=fd[s];if(s>3){const e=fdeb[s];u+=bits16(t,i)&(1<<e)-1,i+=e;}if(i>w)throw "unexpected EOF";l&&o(c+131072);const b=c+n;for(;c<b;c+=4)e[c]=e[c-u],e[c+1]=e[c+1-u],e[c+2]=e[c+2-u],e[c+3]=e[c+3-u];c=b;}}}n.l=u,n.p=i,n.b=c,u&&(s=1,n.m=b,n.d=a,n.n=d);}while(!s);var h;return c==e.length?e:slc(e,0,c)},zlv=t=>{if(8!=(15&t[0])||t[0]>>>4>7||(t[0]<<8|t[1])%31)throw "invalid zlib data";if(32&t[1])throw "invalid zlib data: preset dictionaries not supported"};function unzlibSync(t,e){return inflt((zlv(t),t.subarray(2,-4)),e)}

	const lenIn=171005,bytes="";var bytes_1={bytes:bytes,lenIn:lenIn,lenOut:339466};

	const wasmBytes=unzlibSync(base64Decode$1(bytes_1.bytes,new Uint8Array(bytes_1.lenIn)),new Uint8Array(bytes_1.lenOut));

	const createWasm=createWasmFn("crypto",wasmBytes,null);

	const bridge=new Bridge(createWasm);async function initBridge(r){return bridge.init(r)}

	function withWasm(e){return (...r)=>{if(!bridge.wasm)throw new Error("The WASM interface has not been initialized. Ensure that you wait for the initialization Promise with waitReady() from @polkadot/wasm-crypto (or cryptoWaitReady() from @polkadot/util-crypto) before attempting to use WASM-only interfaces.");return e(bridge.wasm,...r)}}const bip39ToEntropy=withWasm(((e,r)=>(e.ext_bip39_to_entropy(8,...bridge.allocString(r)),bridge.resultU8a())));const bip39ToMiniSecret=withWasm(((e,r,a)=>(e.ext_bip39_to_mini_secret(8,...bridge.allocString(r),...bridge.allocString(a)),bridge.resultU8a())));const bip39ToSeed=withWasm(((e,r,a)=>(e.ext_bip39_to_seed(8,...bridge.allocString(r),...bridge.allocString(a)),bridge.resultU8a())));const bip39Validate=withWasm(((e,r)=>0!==e.ext_bip39_validate(...bridge.allocString(r))));const ed25519KeypairFromSeed=withWasm(((e,r)=>(e.ext_ed_from_seed(8,...bridge.allocU8a(r)),bridge.resultU8a())));const ed25519Sign$1=withWasm(((e,r,a,t)=>(e.ext_ed_sign(8,...bridge.allocU8a(r),...bridge.allocU8a(a),...bridge.allocU8a(t)),bridge.resultU8a())));const ed25519Verify$1=withWasm(((e,r,a,t)=>0!==e.ext_ed_verify(...bridge.allocU8a(r),...bridge.allocU8a(a),...bridge.allocU8a(t))));const secp256k1FromSeed=withWasm(((e,r)=>(e.ext_secp_from_seed(8,...bridge.allocU8a(r)),bridge.resultU8a())));const secp256k1Compress$1=withWasm(((e,r)=>(e.ext_secp_pub_compress(8,...bridge.allocU8a(r)),bridge.resultU8a())));const secp256k1Expand$1=withWasm(((e,r)=>(e.ext_secp_pub_expand(8,...bridge.allocU8a(r)),bridge.resultU8a())));const secp256k1Recover$1=withWasm(((e,r,a,t)=>(e.ext_secp_recover(8,...bridge.allocU8a(r),...bridge.allocU8a(a),t),bridge.resultU8a())));const secp256k1Sign$1=withWasm(((e,r,a)=>(e.ext_secp_sign(8,...bridge.allocU8a(r),...bridge.allocU8a(a)),bridge.resultU8a())));const sr25519DeriveKeypairHard=withWasm(((e,r,a)=>(e.ext_sr_derive_keypair_hard(8,...bridge.allocU8a(r),...bridge.allocU8a(a)),bridge.resultU8a())));const sr25519DeriveKeypairSoft=withWasm(((e,r,a)=>(e.ext_sr_derive_keypair_soft(8,...bridge.allocU8a(r),...bridge.allocU8a(a)),bridge.resultU8a())));const sr25519KeypairFromSeed=withWasm(((e,r)=>(e.ext_sr_from_seed(8,...bridge.allocU8a(r)),bridge.resultU8a())));const sr25519Sign$1=withWasm(((e,r,a,t)=>(e.ext_sr_sign(8,...bridge.allocU8a(r),...bridge.allocU8a(a),...bridge.allocU8a(t)),bridge.resultU8a())));const sr25519Verify$1=withWasm(((e,r,a,t)=>0!==e.ext_sr_verify(...bridge.allocU8a(r),...bridge.allocU8a(a),...bridge.allocU8a(t))));const vrfSign=withWasm(((e,r,a,t,i)=>(e.ext_vrf_sign(8,...bridge.allocU8a(r),...bridge.allocU8a(a),...bridge.allocU8a(t),...bridge.allocU8a(i)),bridge.resultU8a())));const vrfVerify=withWasm(((e,r,a,t,i,o)=>0!==e.ext_vrf_verify(...bridge.allocU8a(r),...bridge.allocU8a(a),...bridge.allocU8a(t),...bridge.allocU8a(i),...bridge.allocU8a(o))));const blake2b$1=withWasm(((e,r,a,t)=>(e.ext_blake2b(8,...bridge.allocU8a(r),...bridge.allocU8a(a),t),bridge.resultU8a())));const hmacSha256=withWasm(((e,r,a)=>(e.ext_hmac_sha256(8,...bridge.allocU8a(r),...bridge.allocU8a(a)),bridge.resultU8a())));const hmacSha512=withWasm(((e,r,a)=>(e.ext_hmac_sha512(8,...bridge.allocU8a(r),...bridge.allocU8a(a)),bridge.resultU8a())));const keccak256=withWasm(((e,r)=>(e.ext_keccak256(8,...bridge.allocU8a(r)),bridge.resultU8a())));const keccak512=withWasm(((e,r)=>(e.ext_keccak512(8,...bridge.allocU8a(r)),bridge.resultU8a())));const pbkdf2$1=withWasm(((e,r,a,t)=>(e.ext_pbkdf2(8,...bridge.allocU8a(r),...bridge.allocU8a(a),t),bridge.resultU8a())));const scrypt$1=withWasm(((e,r,a,t,i,o)=>(e.ext_scrypt(8,...bridge.allocU8a(r),...bridge.allocU8a(a),t,i,o),bridge.resultU8a())));const sha256=withWasm(((e,r)=>(e.ext_sha256(8,...bridge.allocU8a(r)),bridge.resultU8a())));const sha512=withWasm(((e,r)=>(e.ext_sha512(8,...bridge.allocU8a(r)),bridge.resultU8a())));const twox=withWasm(((e,r,a)=>(e.ext_twox(8,...bridge.allocU8a(r),a),bridge.resultU8a())));function isReady(){return !!bridge.wasm}async function waitReady(){try{return !!await initBridge()}catch{return !1}}

	const JS_HASH={256:sha256$1,512:sha512$1},WA_MHAC={256:hmacSha256,512:hmacSha512};function hmacShaAsU8a(a,h,o=256,s){const t=u8aToU8a(a);return !hasBigInt||!s&&isReady()?WA_MHAC[o](t,h):hmac(JS_HASH[o],t,h)}

	function cryptoWaitReady(){return waitReady().then((()=>{if(!isReady())throw new Error("Unable to initialize @polkadot/util-crypto");return !0})).catch((()=>!1))}

	/*! scure-base - MIT License (c) 2022 Paul Miller (paulmillr.com) */
	function assertNumber(r){if(!Number.isSafeInteger(r))throw new Error(`Wrong integer: ${r}`)}function chain$1(...r){const e=(r,e)=>o=>r(e(o));return {encode:Array.from(r).reverse().reduce(((r,o)=>r?e(r,o.encode):o.encode),void 0),decode:r.reduce(((r,o)=>r?e(r,o.decode):o.decode),void 0)}}function alphabet(r){return {encode:e=>{if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw new Error("alphabet.encode input should be an array of numbers");return e.map((e=>{if(assertNumber(e),e<0||e>=r.length)throw new Error(`Digit index outside alphabet: ${e} (alphabet: ${r.length})`);return r[e]}))},decode:e=>{if(!Array.isArray(e)||e.length&&"string"!=typeof e[0])throw new Error("alphabet.decode input should be array of strings");return e.map((e=>{if("string"!=typeof e)throw new Error(`alphabet.decode: not string element=${e}`);const o=r.indexOf(e);if(-1===o)throw new Error(`Unknown letter: "${e}". Allowed: ${r}`);return o}))}}}function join(r=""){if("string"!=typeof r)throw new Error("join separator should be string");return {encode:e=>{if(!Array.isArray(e)||e.length&&"string"!=typeof e[0])throw new Error("join.encode input should be array of strings");for(let r of e)if("string"!=typeof r)throw new Error(`join.encode: non-string input=${r}`);return e.join(r)},decode:e=>{if("string"!=typeof e)throw new Error("join.decode input should be string");return e.split(r)}}}function padding(r,e="="){if(assertNumber(r),"string"!=typeof e)throw new Error("padding chr should be string");return {encode(o){if(!Array.isArray(o)||o.length&&"string"!=typeof o[0])throw new Error("padding.encode input should be array of strings");for(let r of o)if("string"!=typeof r)throw new Error(`padding.encode: non-string input=${r}`);for(;o.length*r%8;)o.push(e);return o},decode(o){if(!Array.isArray(o)||o.length&&"string"!=typeof o[0])throw new Error("padding.encode input should be array of strings");for(let r of o)if("string"!=typeof r)throw new Error(`padding.decode: non-string input=${r}`);let n=o.length;if(n*r%8)throw new Error("Invalid padding: string should have whole number of bytes");for(;n>0&&o[n-1]===e;n--)if(!((n-1)*r%8))throw new Error("Invalid padding: string has too much padding");return o.slice(0,n)}}}function normalize$1(r){if("function"!=typeof r)throw new Error("normalize fn should be function");return {encode:r=>r,decode:e=>r(e)}}function convertRadix(r,e,o){if(e<2)throw new Error(`convertRadix: wrong from=${e}, base cannot be less than 2`);if(o<2)throw new Error(`convertRadix: wrong to=${o}, base cannot be less than 2`);if(!Array.isArray(r))throw new Error("convertRadix: data should be array");if(!r.length)return [];let n=0;const t=[],i=Array.from(r);for(i.forEach((r=>{if(assertNumber(r),r<0||r>=e)throw new Error(`Wrong integer: ${r}`)}));;){let r=0,a=!0;for(let t=n;t<i.length;t++){const s=i[t],c=e*r+s;if(!Number.isSafeInteger(c)||e*r/e!==r||c-s!=e*r)throw new Error("convertRadix: carry overflow");if(r=c%o,i[t]=Math.floor(c/o),!Number.isSafeInteger(i[t])||i[t]*o+r!==c)throw new Error("convertRadix: carry overflow");a&&(i[t]?a=!1:n=t);}if(t.push(r),a)break}for(let e=0;e<r.length-1&&0===r[e];e++)t.push(0);return t.reverse()}const gcd=(r,e)=>e?gcd(e,r%e):r,radix2carry=(r,e)=>r+(e-gcd(r,e));function convertRadix2(r,e,o,n){if(!Array.isArray(r))throw new Error("convertRadix2: data should be array");if(e<=0||e>32)throw new Error(`convertRadix2: wrong from=${e}`);if(o<=0||o>32)throw new Error(`convertRadix2: wrong to=${o}`);if(radix2carry(e,o)>32)throw new Error(`convertRadix2: carry overflow from=${e} to=${o} carryBits=${radix2carry(e,o)}`);let t=0,i=0;const a=2**o-1,s=[];for(const n of r){if(assertNumber(n),n>=2**e)throw new Error(`convertRadix2: invalid data word=${n} from=${e}`);if(t=t<<e|n,i+e>32)throw new Error(`convertRadix2: carry overflow pos=${i} from=${e}`);for(i+=e;i>=o;i-=o)s.push((t>>i-o&a)>>>0);t&=2**i-1;}if(t=t<<o-i&a,!n&&i>=e)throw new Error("Excess padding");if(!n&&t)throw new Error(`Non-zero padding: ${t}`);return n&&i>0&&s.push(t>>>0),s}function radix(r){return assertNumber(r),{encode:e=>{if(!(e instanceof Uint8Array))throw new Error("radix.encode input should be Uint8Array");return convertRadix(Array.from(e),256,r)},decode:e=>{if(!Array.isArray(e)||e.length&&"number"!=typeof e[0])throw new Error("radix.decode input should be array of strings");return Uint8Array.from(convertRadix(e,r,256))}}}function radix2(r,e=!1){if(assertNumber(r),r<=0||r>32)throw new Error("radix2: bits should be in (0..32]");if(radix2carry(8,r)>32||radix2carry(r,8)>32)throw new Error("radix2: carry overflow");return {encode:o=>{if(!(o instanceof Uint8Array))throw new Error("radix2.encode input should be Uint8Array");return convertRadix2(Array.from(o),8,r,!e)},decode:o=>{if(!Array.isArray(o)||o.length&&"number"!=typeof o[0])throw new Error("radix2.decode input should be array of strings");return Uint8Array.from(convertRadix2(o,r,8,e))}}}function unsafeWrapper(r){if("function"!=typeof r)throw new Error("unsafeWrapper fn should be function");return function(...e){try{return r.apply(null,e)}catch(r){}}}const base16=chain$1(radix2(4),alphabet("0123456789ABCDEF"),join(""));const base32=chain$1(radix2(5),alphabet("ABCDEFGHIJKLMNOPQRSTUVWXYZ234567"),padding(5),join(""));chain$1(radix2(5),alphabet("0123456789ABCDEFGHIJKLMNOPQRSTUV"),padding(5),join(""));chain$1(radix2(5),alphabet("0123456789ABCDEFGHJKMNPQRSTVWXYZ"),join(""),normalize$1((r=>r.toUpperCase().replace(/O/g,"0").replace(/[IL]/g,"1"))));const base64=chain$1(radix2(6),alphabet("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"),padding(6),join(""));const base64url=chain$1(radix2(6),alphabet("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"),padding(6),join(""));const genBase58=r=>chain$1(radix(58),alphabet(r),join(""));const base58=genBase58("123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz");genBase58("123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ");genBase58("rpshnaf39wBUDNEGHJKLM4PQRST7VWXYZ2bcdeCg65jkm8oFqi1tuvAxyz");const XMR_BLOCK_LEN=[0,2,3,5,6,7,9,10,11];const base58xmr={encode(r){let e="";for(let o=0;o<r.length;o+=8){const n=r.subarray(o,o+8);e+=base58.encode(n).padStart(XMR_BLOCK_LEN[n.length],"1");}return e},decode(r){let e=[];for(let o=0;o<r.length;o+=11){const n=r.slice(o,o+11),t=XMR_BLOCK_LEN.indexOf(n.length),i=base58.decode(n);for(let r=0;r<i.length-t;r++)if(0!==i[r])throw new Error("base58xmr: wrong padding");e=e.concat(Array.from(i.slice(i.length-t)));}return Uint8Array.from(e)}};const BECH_ALPHABET=chain$1(alphabet("qpzry9x8gf2tvdw0s3jn54khce6mua7l"),join("")),POLYMOD_GENERATORS=[996825010,642813549,513874426,1027748829,705979059];function bech32Polymod(r){const e=r>>25;let o=(33554431&r)<<5;for(let r=0;r<POLYMOD_GENERATORS.length;r++)1==(e>>r&1)&&(o^=POLYMOD_GENERATORS[r]);return o}function bechChecksum(r,e,o=1){const n=r.length;let t=1;for(let e=0;e<n;e++){const o=r.charCodeAt(e);if(o<33||o>126)throw new Error(`Invalid prefix (${r})`);t=bech32Polymod(t)^o>>5;}t=bech32Polymod(t);for(let e=0;e<n;e++)t=bech32Polymod(t)^31&r.charCodeAt(e);for(let r of e)t=bech32Polymod(t)^r;for(let r=0;r<6;r++)t=bech32Polymod(t);return t^=o,BECH_ALPHABET.encode(convertRadix2([t%2**30],30,5,!1))}function genBech32(r){const e="bech32"===r?1:734539939,o=radix2(5),n=o.decode,t=o.encode,i=unsafeWrapper(n);function a(r,o=90){if("string"!=typeof r)throw new Error("bech32.decode input should be string, not "+typeof r);if(r.length<8||!1!==o&&r.length>o)throw new TypeError(`Wrong string length: ${r.length} (${r}). Expected (8..${o})`);const n=r.toLowerCase();if(r!==n&&r!==r.toUpperCase())throw new Error("String must be lowercase or uppercase");const t=(r=n).lastIndexOf("1");if(0===t||-1===t)throw new Error('Letter "1" must be present between prefix and data only');const i=r.slice(0,t),a=r.slice(t+1);if(a.length<6)throw new Error("Data must be at least 6 characters long");const s=BECH_ALPHABET.decode(a).slice(0,-6),c=bechChecksum(i,s,e);if(!a.endsWith(c))throw new Error(`Invalid checksum in ${r}: expected "${c}"`);return {prefix:i,words:s}}return {encode:function(r,o,n=90){if("string"!=typeof r)throw new Error("bech32.encode prefix should be string, not "+typeof r);if(!Array.isArray(o)||o.length&&"number"!=typeof o[0])throw new Error("bech32.encode words should be array of numbers, not "+typeof o);const t=r.length+7+o.length;if(!1!==n&&t>n)throw new TypeError(`Length ${t} exceeds limit ${n}`);return `${r=r.toLowerCase()}1${BECH_ALPHABET.encode(o)}${bechChecksum(r,o,e)}`},decode:a,decodeToBytes:function(r){const{prefix:e,words:o}=a(r,!1);return {prefix:e,words:o,bytes:n(o)}},decodeUnsafe:unsafeWrapper(a),fromWords:n,fromWordsUnsafe:i,toWords:t}}genBech32("bech32");genBech32("bech32m");const utf8={encode:r=>(new TextDecoder).decode(r),decode:r=>(new TextEncoder).encode(r)};const hex=chain$1(radix2(4),alphabet("0123456789abcdef"),join(""),normalize$1((r=>{if("string"!=typeof r||r.length%2)throw new TypeError(`hex.decode: expected string, got ${typeof r} with length ${r.length}`);return r.toLowerCase()})));const CODERS={utf8:utf8,hex:hex,base16:base16,base32:base32,base64:base64,base64url:base64url,base58:base58,base58xmr:base58xmr};`Invalid encoding type. Available types: ${Object.keys(CODERS).join(", ")}`;

	function createDecode({coder:t,ipfs:r},e){return (n,o)=>(e(n,o),t.decode(r&&o?n.substring(1):n))}function createEncode({coder:t,ipfs:r}){return (e,n)=>{const o=t.encode(u8aToU8a(e));return r&&n?`${r}${o}`:o}}function createValidate({chars:t,ipfs:r,type:e}){return (n,o)=>{if(!n||"string"!=typeof n)throw new Error(`Expected non-null, non-empty ${e} string input`);if(r&&o&&n[0]!==r)throw new Error(`Expected ipfs-compatible ${e} to start with '${r}'`);for(let r=o?1:0;r<n.length;r++)if(!t.includes(n[r])&&("="!==n[r]||r!==n.length-1&&t.includes(n[r+1])))throw new Error(`Invalid ${e} character "${n[r]}" (0x${n.charCodeAt(r).toString(16)}) at index ${r}`);return !0}}

	const config$2={chars:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz",coder:base58,ipfs:"z",type:"base58"};const base58Validate=createValidate(config$2);const base58Decode=createDecode(config$2,base58Validate);const base58Encode=createEncode(config$2);

	const SIGMA=new Uint8Array([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3,11,8,12,0,5,2,15,13,10,14,3,6,7,1,9,4,7,9,3,1,13,12,11,14,2,6,5,10,4,0,15,8,9,0,5,7,2,4,10,15,14,1,11,12,6,8,3,13,2,12,6,10,0,11,8,3,4,13,7,5,15,14,1,9,12,5,1,15,14,13,4,10,0,7,6,3,9,2,8,11,13,11,7,14,12,1,3,9,5,0,15,4,8,6,2,10,6,15,14,9,11,3,0,8,12,2,13,7,1,4,10,5,10,2,8,4,7,6,1,5,15,11,9,14,3,12,13,0,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,14,10,4,8,9,15,13,6,1,12,0,2,11,7,5,3]);class BLAKE2 extends Hash{constructor(t,s,e={},r,o,n){if(super(),this.blockLen=t,this.outputLen=s,this.length=0,this.pos=0,this.finished=!1,this.destroyed=!1,assert.number(t),assert.number(s),assert.number(r),s<0||s>r)throw new Error("Blake2: outputLen bigger than keyLen");if(void 0!==e.key&&(e.key.length<1||e.key.length>r))throw new Error(`Key should be up 1..${r} byte long or undefined`);if(void 0!==e.salt&&e.salt.length!==o)throw new Error(`Salt should be ${o} byte long or undefined`);if(void 0!==e.personalization&&e.personalization.length!==n)throw new Error(`Personalization should be ${n} byte long or undefined`);this.buffer32=u32$2(this.buffer=new Uint8Array(t));}update(t){assert.exists(this);const{blockLen:s,buffer:e,buffer32:r}=this,o=(t=toBytes(t)).length;for(let n=0;n<o;){this.pos===s&&(this.compress(r,0,!1),this.pos=0);const i=Math.min(s-this.pos,o-n),h=t.byteOffset+n;if(i!==s||h%4||!(n+i<o))e.set(t.subarray(n,n+i),this.pos),this.pos+=i,this.length+=i,n+=i;else {const e=new Uint32Array(t.buffer,h,Math.floor((o-n)/4));for(let t=0;n+s<o;t+=r.length,n+=s)this.length+=s,this.compress(e,t,!1);}}return this}digestInto(t){assert.exists(this),assert.output(t,this);const{pos:s,buffer32:e}=this;this.finished=!0,this.buffer.subarray(s).fill(0),this.compress(e,0,!0);const r=u32$2(t);this.get().forEach(((t,s)=>r[s]=t));}digest(){const{buffer:t,outputLen:s}=this;this.digestInto(t);const e=t.slice(0,s);return this.destroy(),e}_cloneInto(t){const{buffer:s,length:e,finished:r,destroyed:o,outputLen:n,pos:i}=this;return t||(t=new this.constructor({dkLen:n})),t.set(...this.get()),t.length=e,t.finished=r,t.destroyed=o,t.outputLen=n,t.buffer.set(s),t.pos=i,t}}

	const IV=new Uint32Array([4089235720,1779033703,2227873595,3144134277,4271175723,1013904242,1595750129,2773480762,2917565137,1359893119,725511199,2600822924,4215389547,528734635,327033209,1541459225]),BUF=new Uint32Array(32);function G1(t,h,s,B,i,l){const U=i[l],v=i[l+1];let F=BUF[2*t],o=BUF[2*t+1],r=BUF[2*h],e=BUF[2*h+1],n=BUF[2*s],u=BUF[2*s+1],I=BUF[2*B],a=BUF[2*B+1],d=u64$1.add3L(F,r,U);o=u64$1.add3H(d,o,e,v),F=0|d,({Dh:a,Dl:I}={Dh:a^o,Dl:I^F}),({Dh:a,Dl:I}={Dh:u64$1.rotr32H(a,I),Dl:u64$1.rotr32L(a,I)}),({h:u,l:n}=u64$1.add(u,n,a,I)),({Bh:e,Bl:r}={Bh:e^u,Bl:r^n}),({Bh:e,Bl:r}={Bh:u64$1.rotrSH(e,r,24),Bl:u64$1.rotrSL(e,r,24)}),BUF[2*t]=F,BUF[2*t+1]=o,BUF[2*h]=r,BUF[2*h+1]=e,BUF[2*s]=n,BUF[2*s+1]=u,BUF[2*B]=I,BUF[2*B+1]=a;}function G2(t,h,s,B,i,l){const U=i[l],v=i[l+1];let F=BUF[2*t],o=BUF[2*t+1],r=BUF[2*h],e=BUF[2*h+1],n=BUF[2*s],u=BUF[2*s+1],I=BUF[2*B],a=BUF[2*B+1],d=u64$1.add3L(F,r,U);o=u64$1.add3H(d,o,e,v),F=0|d,({Dh:a,Dl:I}={Dh:a^o,Dl:I^F}),({Dh:a,Dl:I}={Dh:u64$1.rotrSH(a,I,16),Dl:u64$1.rotrSL(a,I,16)}),({h:u,l:n}=u64$1.add(u,n,a,I)),({Bh:e,Bl:r}={Bh:e^u,Bl:r^n}),({Bh:e,Bl:r}={Bh:u64$1.rotrBH(e,r,63),Bl:u64$1.rotrBL(e,r,63)}),BUF[2*t]=F,BUF[2*t+1]=o,BUF[2*h]=r,BUF[2*h+1]=e,BUF[2*s]=n,BUF[2*s+1]=u,BUF[2*B]=I,BUF[2*B+1]=a;}class BLAKE2b extends BLAKE2{constructor(t={}){super(128,void 0===t.dkLen?64:t.dkLen,t,64,16,16),this.v0l=0|IV[0],this.v0h=0|IV[1],this.v1l=0|IV[2],this.v1h=0|IV[3],this.v2l=0|IV[4],this.v2h=0|IV[5],this.v3l=0|IV[6],this.v3h=0|IV[7],this.v4l=0|IV[8],this.v4h=0|IV[9],this.v5l=0|IV[10],this.v5h=0|IV[11],this.v6l=0|IV[12],this.v6h=0|IV[13],this.v7l=0|IV[14],this.v7h=0|IV[15];const h=t.key?t.key.length:0;if(this.v0l^=this.outputLen|h<<8|65536|1<<24,t.salt){const h=u32$2(toBytes(t.salt));this.v4l^=h[0],this.v4h^=h[1],this.v5l^=h[2],this.v5h^=h[3];}if(t.personalization){const h=u32$2(toBytes(t.personalization));this.v6l^=h[0],this.v6h^=h[1],this.v7l^=h[2],this.v7h^=h[3];}if(t.key){const h=new Uint8Array(this.blockLen);h.set(toBytes(t.key)),this.update(h);}}get(){let{v0l:t,v0h:h,v1l:s,v1h:B,v2l:i,v2h:l,v3l:U,v3h:v,v4l:F,v4h:o,v5l:r,v5h:e,v6l:n,v6h:u,v7l:I,v7h:a}=this;return [t,h,s,B,i,l,U,v,F,o,r,e,n,u,I,a]}set(t,h,s,B,i,l,U,v,F,o,r,e,n,u,I,a){this.v0l=0|t,this.v0h=0|h,this.v1l=0|s,this.v1h=0|B,this.v2l=0|i,this.v2h=0|l,this.v3l=0|U,this.v3h=0|v,this.v4l=0|F,this.v4h=0|o,this.v5l=0|r,this.v5h=0|e,this.v6l=0|n,this.v6h=0|u,this.v7l=0|I,this.v7h=0|a;}compress(t,h,s){this.get().forEach(((t,h)=>BUF[h]=t)),BUF.set(IV,16);let{h:B,l:i}=u64$1.fromBig(BigInt(this.length));BUF[24]=IV[8]^i,BUF[25]=IV[9]^B,s&&(BUF[28]=~BUF[28],BUF[29]=~BUF[29]);let l=0;const U=SIGMA;for(let s=0;s<12;s++)G1(0,4,8,12,t,h+2*U[l++]),G2(0,4,8,12,t,h+2*U[l++]),G1(1,5,9,13,t,h+2*U[l++]),G2(1,5,9,13,t,h+2*U[l++]),G1(2,6,10,14,t,h+2*U[l++]),G2(2,6,10,14,t,h+2*U[l++]),G1(3,7,11,15,t,h+2*U[l++]),G2(3,7,11,15,t,h+2*U[l++]),G1(0,5,10,15,t,h+2*U[l++]),G2(0,5,10,15,t,h+2*U[l++]),G1(1,6,11,12,t,h+2*U[l++]),G2(1,6,11,12,t,h+2*U[l++]),G1(2,7,8,13,t,h+2*U[l++]),G2(2,7,8,13,t,h+2*U[l++]),G1(3,4,9,14,t,h+2*U[l++]),G2(3,4,9,14,t,h+2*U[l++]);this.v0l^=BUF[0]^BUF[16],this.v0h^=BUF[1]^BUF[17],this.v1l^=BUF[2]^BUF[18],this.v1h^=BUF[3]^BUF[19],this.v2l^=BUF[4]^BUF[20],this.v2h^=BUF[5]^BUF[21],this.v3l^=BUF[6]^BUF[22],this.v3h^=BUF[7]^BUF[23],this.v4l^=BUF[8]^BUF[24],this.v4h^=BUF[9]^BUF[25],this.v5l^=BUF[10]^BUF[26],this.v5h^=BUF[11]^BUF[27],this.v6l^=BUF[12]^BUF[28],this.v6h^=BUF[13]^BUF[29],this.v7l^=BUF[14]^BUF[30],this.v7h^=BUF[15]^BUF[31],BUF.fill(0);}destroy(){this.destroyed=!0,this.buffer32.fill(0),this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);}}const blake2b=wrapConstructorWithOpts((t=>new BLAKE2b(t)));

	function createAsHex(t){return (...r)=>u8aToHex(t(...r))}function createBitHasher(t,r){return (e,o)=>r(e,t,o)}function createDualHasher(t,r){return (e,o=256,a)=>{const n=u8aToU8a(e);return !hasBigInt||!a&&isReady()?t[o](n):r[o](n)}}

	function blake2AsU8a(a,e=256,o,s){const t=Math.ceil(e/8),b=u8aToU8a(a);return !hasBigInt||!s&&isReady()?blake2b$1(b,u8aToU8a(o),t):blake2b(b,{dkLen:t,key:o||void 0})}const blake2AsHex=createAsHex(blake2AsU8a);

	const SS58_PREFIX=stringToU8a("SS58PRE");function sshash(a){return blake2AsU8a(u8aConcat(SS58_PREFIX,a),512)}

	function checkAddressChecksum(s){const h=64&s[0]?2:1,e=1===h?s[0]:(63&s[0])<<2|s[1]>>6|(63&s[1])<<8,n=[34+h,35+h].includes(s.length),t=s.length-(n?2:1),r=sshash(s.subarray(0,t));return [0==(128&s[0])&&![46,47].includes(s[0])&&(n?s[s.length-2]===r[0]&&s[s.length-1]===r[1]:s[s.length-1]===r[0]),t,h,e]}

	var knownSubstrate = [{prefix:0,network:"polkadot",displayName:"Polkadot Relay Chain",symbols:["DOT"],decimals:[10],standardAccount:"*25519",website:"https://polkadot.network"},{prefix:1,network:"BareSr25519",displayName:"Bare 32-bit Schnorr/Ristretto (S/R 25519) public key.",symbols:[],decimals:[],standardAccount:"Sr25519",website:null},{prefix:2,network:"kusama",displayName:"Kusama Relay Chain",symbols:["KSM"],decimals:[12],standardAccount:"*25519",website:"https://kusama.network"},{prefix:3,network:"BareEd25519",displayName:"Bare 32-bit Ed25519 public key.",symbols:[],decimals:[],standardAccount:"Ed25519",website:null},{prefix:4,network:"katalchain",displayName:"Katal Chain",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:5,network:"astar",displayName:"Astar Network",symbols:["ASTR"],decimals:[18],standardAccount:"*25519",website:"https://astar.network"},{prefix:6,network:"bifrost",displayName:"Bifrost",symbols:["BNC"],decimals:[12],standardAccount:"*25519",website:"https://bifrost.finance/"},{prefix:7,network:"edgeware",displayName:"Edgeware",symbols:["EDG"],decimals:[18],standardAccount:"*25519",website:"https://edgewa.re"},{prefix:8,network:"karura",displayName:"Karura",symbols:["KAR"],decimals:[12],standardAccount:"*25519",website:"https://karura.network/"},{prefix:9,network:"reynolds",displayName:"Laminar Reynolds Canary",symbols:["REY"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:10,network:"acala",displayName:"Acala",symbols:["ACA"],decimals:[12],standardAccount:"*25519",website:"https://acala.network/"},{prefix:11,network:"laminar",displayName:"Laminar",symbols:["LAMI"],decimals:[18],standardAccount:"*25519",website:"http://laminar.network/"},{prefix:12,network:"polymesh",displayName:"Polymesh",symbols:["POLYX"],decimals:[6],standardAccount:"*25519",website:"https://polymath.network/"},{prefix:13,network:"integritee",displayName:"Integritee",symbols:["TEER"],decimals:[12],standardAccount:"*25519",website:"https://integritee.network"},{prefix:14,network:"totem",displayName:"Totem",symbols:["TOTEM"],decimals:[0],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:15,network:"synesthesia",displayName:"Synesthesia",symbols:["SYN"],decimals:[12],standardAccount:"*25519",website:"https://synesthesia.network/"},{prefix:16,network:"kulupu",displayName:"Kulupu",symbols:["KLP"],decimals:[12],standardAccount:"*25519",website:"https://kulupu.network/"},{prefix:17,network:"dark",displayName:"Dark Mainnet",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:18,network:"darwinia",displayName:"Darwinia Network",symbols:["RING","KTON"],decimals:[9,9],standardAccount:"*25519",website:"https://darwinia.network/"},{prefix:19,network:"watr",displayName:"Watr Protocol",symbols:["WATR"],decimals:[18],standardAccount:"*25519",website:"https://www.watr.org"},{prefix:20,network:"stafi",displayName:"Stafi",symbols:["FIS"],decimals:[12],standardAccount:"*25519",website:"https://stafi.io"},{prefix:22,network:"dock-pos-mainnet",displayName:"Dock Mainnet",symbols:["DCK"],decimals:[6],standardAccount:"*25519",website:"https://dock.io"},{prefix:23,network:"shift",displayName:"ShiftNrg",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:24,network:"zero",displayName:"ZERO",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:25,network:"zero-alphaville",displayName:"ZERO Alphaville",symbols:["ZERO"],decimals:[18],standardAccount:"*25519",website:"https://zero.io"},{prefix:26,network:"jupiter",displayName:"Jupiter",symbols:["jDOT"],decimals:[10],standardAccount:"*25519",website:"https://jupiter.patract.io"},{prefix:27,network:"kabocha",displayName:"Kabocha",symbols:["KAB"],decimals:[12],standardAccount:"*25519",website:"https://kabocha.network"},{prefix:28,network:"subsocial",displayName:"Subsocial",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:29,network:"cord",displayName:"CORD Network",symbols:["DHI","WAY"],decimals:[12,12],standardAccount:"*25519",website:"https://cord.network/"},{prefix:30,network:"phala",displayName:"Phala Network",symbols:["PHA"],decimals:[12],standardAccount:"*25519",website:"https://phala.network"},{prefix:31,network:"litentry",displayName:"Litentry Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:32,network:"robonomics",displayName:"Robonomics",symbols:["XRT"],decimals:[9],standardAccount:"*25519",website:"https://robonomics.network"},{prefix:33,network:"datahighway",displayName:"DataHighway",symbols:[],decimals:[],standardAccount:"*25519",website:null},{prefix:34,network:"ares",displayName:"Ares Protocol",symbols:["ARES"],decimals:[12],standardAccount:"*25519",website:"https://www.aresprotocol.com/"},{prefix:35,network:"vln",displayName:"Valiu Liquidity Network",symbols:["USDv"],decimals:[15],standardAccount:"*25519",website:"https://valiu.com/"},{prefix:36,network:"centrifuge",displayName:"Centrifuge Chain",symbols:["CFG"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:37,network:"nodle",displayName:"Nodle Chain",symbols:["NODL"],decimals:[11],standardAccount:"*25519",website:"https://nodle.io/"},{prefix:38,network:"kilt",displayName:"KILT Spiritnet",symbols:["KILT"],decimals:[15],standardAccount:"*25519",website:"https://kilt.io/"},{prefix:39,network:"mathchain",displayName:"MathChain mainnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:40,network:"mathchain-testnet",displayName:"MathChain testnet",symbols:["MATH"],decimals:[18],standardAccount:"*25519",website:"https://mathwallet.org"},{prefix:41,network:"poli",displayName:"Polimec Chain",symbols:[],decimals:[],standardAccount:"*25519",website:"https://polimec.io/"},{prefix:42,network:"substrate",displayName:"Substrate",symbols:[],decimals:[],standardAccount:"*25519",website:"https://substrate.io/"},{prefix:43,network:"BareSecp256k1",displayName:"Bare 32-bit ECDSA SECP-256k1 public key.",symbols:[],decimals:[],standardAccount:"secp256k1",website:null},{prefix:44,network:"chainx",displayName:"ChainX",symbols:["PCX"],decimals:[8],standardAccount:"*25519",website:"https://chainx.org/"},{prefix:45,network:"uniarts",displayName:"UniArts Network",symbols:["UART","UINK"],decimals:[12,12],standardAccount:"*25519",website:"https://uniarts.me"},{prefix:46,network:"reserved46",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:47,network:"reserved47",displayName:"This prefix is reserved.",symbols:[],decimals:[],standardAccount:null,website:null},{prefix:48,network:"neatcoin",displayName:"Neatcoin Mainnet",symbols:["NEAT"],decimals:[12],standardAccount:"*25519",website:"https://neatcoin.org"},{prefix:49,network:"picasso",displayName:"Picasso",symbols:["PICA"],decimals:[12],standardAccount:"*25519",website:"https://picasso.composable.finance"},{prefix:50,network:"composable",displayName:"Composable",symbols:["LAYR"],decimals:[12],standardAccount:"*25519",website:"https://composable.finance"},{prefix:51,network:"oak",displayName:"OAK Network",symbols:["OAK","TUR"],decimals:[10,10],standardAccount:"*25519",website:"https://oak.tech"},{prefix:52,network:"KICO",displayName:"KICO",symbols:["KICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:53,network:"DICO",displayName:"DICO",symbols:["DICO"],decimals:[14],standardAccount:"*25519",website:"https://dico.io"},{prefix:54,network:"cere",displayName:"Cere Network",symbols:["CERE"],decimals:[10],standardAccount:"*25519",website:"https://cere.network"},{prefix:55,network:"xxnetwork",displayName:"xx network",symbols:["XX"],decimals:[9],standardAccount:"*25519",website:"https://xx.network"},{prefix:56,network:"pendulum",displayName:"Pendulum chain",symbols:["PEN"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:57,network:"amplitude",displayName:"Amplitude chain",symbols:["AMPE"],decimals:[12],standardAccount:"*25519",website:"https://pendulumchain.org/"},{prefix:63,network:"hydradx",displayName:"HydraDX",symbols:["HDX"],decimals:[12],standardAccount:"*25519",website:"https://hydradx.io"},{prefix:65,network:"aventus",displayName:"AvN Mainnet",symbols:["AVT"],decimals:[18],standardAccount:"*25519",website:"https://aventus.io"},{prefix:66,network:"crust",displayName:"Crust Network",symbols:["CRU"],decimals:[12],standardAccount:"*25519",website:"https://crust.network"},{prefix:67,network:"genshiro",displayName:"Genshiro Network",symbols:["GENS","EQD","LPT0"],decimals:[9,9,9],standardAccount:"*25519",website:"https://genshiro.equilibrium.io"},{prefix:68,network:"equilibrium",displayName:"Equilibrium Network",symbols:["EQ"],decimals:[9],standardAccount:"*25519",website:"https://equilibrium.io"},{prefix:69,network:"sora",displayName:"SORA Network",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:71,network:"p3d",displayName:"3DP network",symbols:["P3D"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:72,network:"p3dt",displayName:"3DP test network",symbols:["P3Dt"],decimals:[12],standardAccount:"*25519",website:"https://3dpass.org"},{prefix:73,network:"zeitgeist",displayName:"Zeitgeist",symbols:["ZTG"],decimals:[10],standardAccount:"*25519",website:"https://zeitgeist.pm"},{prefix:77,network:"manta",displayName:"Manta network",symbols:["MANTA"],decimals:[18],standardAccount:"*25519",website:"https://manta.network"},{prefix:78,network:"calamari",displayName:"Calamari: Manta Canary Network",symbols:["KMA"],decimals:[12],standardAccount:"*25519",website:"https://manta.network"},{prefix:81,network:"sora_dot_para",displayName:"SORA Polkadot Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:88,network:"polkadex",displayName:"Polkadex Mainnet",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:89,network:"polkadexparachain",displayName:"Polkadex Parachain",symbols:["PDEX"],decimals:[12],standardAccount:"*25519",website:"https://polkadex.trade"},{prefix:90,network:"frequency",displayName:"Frequency",symbols:["FRQCY"],decimals:[8],standardAccount:"*25519",website:"https://www.frequency.xyz"},{prefix:92,network:"anmol",displayName:"Anmol Network",symbols:["ANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:93,network:"fragnova",displayName:"Fragnova Network",symbols:["NOVA"],decimals:[12],standardAccount:"*25519",website:"https://fragnova.com"},{prefix:98,network:"polkasmith",displayName:"PolkaSmith Canary Network",symbols:["PKS"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:99,network:"polkafoundry",displayName:"PolkaFoundry Network",symbols:["PKF"],decimals:[18],standardAccount:"*25519",website:"https://polkafoundry.com"},{prefix:100,network:"ibtida",displayName:"Anmol Network Ibtida Canary network",symbols:["IANML"],decimals:[18],standardAccount:"*25519",website:"https://anmol.network/"},{prefix:101,network:"origintrail-parachain",displayName:"OriginTrail Parachain",symbols:["OTP"],decimals:[12],standardAccount:"*25519",website:"https://parachain.origintrail.io/"},{prefix:105,network:"pontem-network",displayName:"Pontem Network",symbols:["PONT"],decimals:[10],standardAccount:"*25519",website:"https://pontem.network"},{prefix:110,network:"heiko",displayName:"Heiko",symbols:["HKO"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:113,network:"integritee-incognito",displayName:"Integritee Incognito",symbols:[],decimals:[],standardAccount:"*25519",website:"https://integritee.network"},{prefix:117,network:"tinker",displayName:"Tinker",symbols:["TNKR"],decimals:[12],standardAccount:"*25519",website:"https://invarch.network"},{prefix:126,network:"joystream",displayName:"Joystream",symbols:["JOY"],decimals:[10],standardAccount:"*25519",website:"https://www.joystream.org"},{prefix:128,network:"clover",displayName:"Clover Finance",symbols:["CLV"],decimals:[18],standardAccount:"*25519",website:"https://clover.finance"},{prefix:129,network:"dorafactory-polkadot",displayName:"Dorafactory Polkadot Network",symbols:["DORA"],decimals:[12],standardAccount:"*25519",website:"https://dorafactory.org"},{prefix:131,network:"litmus",displayName:"Litmus Network",symbols:["LIT"],decimals:[12],standardAccount:"*25519",website:"https://litentry.com/"},{prefix:136,network:"altair",displayName:"Altair",symbols:["AIR"],decimals:[18],standardAccount:"*25519",website:"https://centrifuge.io/"},{prefix:137,network:"vara",displayName:"Vara Network",symbols:["VARA"],decimals:[12],standardAccount:"*25519",website:"https://vara-network.io/"},{prefix:172,network:"parallel",displayName:"Parallel",symbols:["PARA"],decimals:[12],standardAccount:"*25519",website:"https://parallel.fi/"},{prefix:252,network:"social-network",displayName:"Social Network",symbols:["NET"],decimals:[18],standardAccount:"*25519",website:"https://social.network"},{prefix:255,network:"quartz_mainnet",displayName:"QUARTZ by UNIQUE",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:268,network:"pioneer_network",displayName:"Pioneer Network by Bit.Country",symbols:["NEER"],decimals:[18],standardAccount:"*25519",website:"https://bit.country"},{prefix:420,network:"sora_kusama_para",displayName:"SORA Kusama Parachain",symbols:["XOR"],decimals:[18],standardAccount:"*25519",website:"https://sora.org"},{prefix:789,network:"geek",displayName:"GEEK Network",symbols:["GEEK"],decimals:[18],standardAccount:"*25519",website:"https://geek.gl"},{prefix:995,network:"ternoa",displayName:"Ternoa",symbols:["CAPS"],decimals:[18],standardAccount:"*25519",website:"https://www.ternoa.network"},{prefix:1110,network:"efinity",displayName:"Efinity",symbols:["EFI"],decimals:[18],standardAccount:"*25519",website:"https://efinity.io/"},{prefix:1221,network:"peaq",displayName:"Peaq Network",symbols:["PEAQ"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1222,network:"krest",displayName:"Krest Network",symbols:["KREST"],decimals:[18],standardAccount:"Sr25519",website:"https://www.peaq.network/"},{prefix:1284,network:"moonbeam",displayName:"Moonbeam",symbols:["GLMR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1285,network:"moonriver",displayName:"Moonriver",symbols:["MOVR"],decimals:[18],standardAccount:"secp256k1",website:"https://moonbeam.network"},{prefix:1328,network:"ajuna",displayName:"Ajuna Network",symbols:["AJUN"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1337,network:"bajun",displayName:"Bajun Network",symbols:["BAJU"],decimals:[12],standardAccount:"*25519",website:"https://ajuna.io"},{prefix:1516,network:"societal",displayName:"Societal",symbols:["SCTL"],decimals:[12],standardAccount:"*25519",website:"https://www.sctl.xyz"},{prefix:1985,network:"seals",displayName:"Seals Network",symbols:["SEAL"],decimals:[9],standardAccount:"*25519",website:"https://seals.app"},{prefix:2007,network:"kapex",displayName:"Kapex",symbols:["KAPEX"],decimals:[12],standardAccount:"*25519",website:"https://totemaccounting.com"},{prefix:2009,network:"cloudwalk_mainnet",displayName:"CloudWalk Network Mainnet",symbols:["CWN"],decimals:[18],standardAccount:"*25519",website:"https://explorer.mainnet.cloudwalk.io"},{prefix:2032,network:"interlay",displayName:"Interlay",symbols:["INTR"],decimals:[10],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2092,network:"kintsugi",displayName:"Kintsugi",symbols:["KINT"],decimals:[12],standardAccount:"*25519",website:"https://interlay.io/"},{prefix:2106,network:"bitgreen",displayName:"Bitgreen",symbols:["BBB"],decimals:[18],standardAccount:"*25519",website:"https://bitgreen.org/"},{prefix:2112,network:"chainflip",displayName:"Chainflip",symbols:["FLIP"],decimals:[18],standardAccount:"*25519",website:"https://chainflip.io/"},{prefix:2206,network:"ICE",displayName:"ICE Network",symbols:["ICY"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2207,network:"SNOW",displayName:"SNOW: ICE Canary Network",symbols:["ICZ"],decimals:[18],standardAccount:"*25519",website:"https://icenetwork.io"},{prefix:2254,network:"subspace_testnet",displayName:"Subspace testnet",symbols:["tSSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:4006,network:"tangle",displayName:"Tangle Network",symbols:["TNT"],decimals:[18],standardAccount:"*25519",website:"https://www.webb.tools/"},{prefix:4450,network:"g1",displayName:"Ğ1",symbols:["G1"],decimals:[2],standardAccount:"*25519",website:"https://duniter.org"},{prefix:5234,network:"humanode",displayName:"Humanode Network",symbols:["HMND"],decimals:[18],standardAccount:"*25519",website:"https://humanode.io"},{prefix:6094,network:"subspace",displayName:"Subspace",symbols:["SSC"],decimals:[18],standardAccount:"*25519",website:"https://subspace.network"},{prefix:7007,network:"tidefi",displayName:"Tidefi",symbols:["TDFY"],decimals:[12],standardAccount:"*25519",website:"https://tidefi.com"},{prefix:7013,network:"gm",displayName:"GM",symbols:["FREN","GM","GN"],decimals:[12,0,0],standardAccount:"*25519",website:"https://gmordie.com"},{prefix:7391,network:"unique_mainnet",displayName:"Unique Network",symbols:["UNQ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:8883,network:"sapphire_mainnet",displayName:"Sapphire by Unique",symbols:["QTZ"],decimals:[18],standardAccount:"*25519",website:"https://unique.network"},{prefix:9072,network:"hashed",displayName:"Hashed Network",symbols:["HASH"],decimals:[18],standardAccount:"*25519",website:"https://hashed.network"},{prefix:9807,network:"dentnet",displayName:"DENTNet",symbols:["DENTX"],decimals:[18],standardAccount:"*25519",website:"https://www.dentnet.io"},{prefix:9935,network:"t3rn",displayName:"t3rn",symbols:["TRN"],decimals:[12],standardAccount:"*25519",website:"https://t3rn.io/"},{prefix:10041,network:"basilisk",displayName:"Basilisk",symbols:["BSX"],decimals:[12],standardAccount:"*25519",website:"https://bsx.fi"},{prefix:11330,network:"cess-testnet",displayName:"CESS Testnet",symbols:["TCESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11331,network:"cess",displayName:"CESS",symbols:["CESS"],decimals:[12],standardAccount:"*25519",website:"https://cess.cloud"},{prefix:11486,network:"luhn",displayName:"Luhn Network",symbols:["LUHN"],decimals:[18],standardAccount:"*25519",website:"https://luhn.network"},{prefix:11820,network:"contextfree",displayName:"Automata ContextFree",symbols:["CTX"],decimals:[18],standardAccount:"*25519",website:"https://ata.network"},{prefix:12191,network:"nftmart",displayName:"NFTMart",symbols:["NMT"],decimals:[12],standardAccount:"*25519",website:"https://nftmart.io"},{prefix:13116,network:"bittensor",displayName:"Bittensor",symbols:["TAO"],decimals:[9],standardAccount:"*25519",website:"https://bittensor.com"}];

	const knownGenesis={acala:["0xfc41b9bd8ef8fe53d58c7ea67c794c7ec9a73daf05e6d54b14ff6342c99ba64c"],ajuna:["0xe358eb1d11b31255a286c12e44fe6780b7edb171d657905a97e39f71d9c6c3ee"],"aleph-node":["0x70255b4d28de0fc4e1a193d7e175ad1ccef431598211c55538f1018651a0344e"],astar:["0x9eb76c5184c4ab8679d2d5d819fdf90b9c001403e9e17da2e14b6d8aec4029c6"],basilisk:["0xa85cfb9b9fd4d622a5b28289a02347af987d8f73fa3108450e2b4a11c1ce5755"],bifrost:["0x262e1b2ad728475fd6fe88e62d34c200abe6fd693931ddad144059b1eb884e5b"],"bifrost-kusama":["0x9f28c6a68e0fc9646eff64935684f6eeeece527e37bbe1f213d22caa1d9d6bed"],centrifuge:["0xb3db41421702df9a7fcac62b53ffeac85f7853cc4e689e0b93aeb3db18c09d82","0x67dddf2673b69e5f875f6f25277495834398eafd67f492e09f3f3345e003d1b5"],composable:["0xdaab8df776eb52ec604a5df5d388bb62a050a0aaec4556a64265b9d42755552d"],darwinia:["0xe71578b37a7c799b0ab4ee87ffa6f059a6b98f71f06fb8c84a8d88013a548ad6"],"dock-mainnet":["0x6bfe24dca2a3be10f22212678ac13a6446ec764103c0f3471c71609eac384aae","0xf73467c6544aa68df2ee546b135f955c46b90fa627e9b5d7935f41061bb8a5a9"],edgeware:["0x742a2ca70c2fda6cee4f8df98d64c4c670a052d9568058982dad9d5a7a135c5b"],equilibrium:["0x6f1a800de3daff7f5e037ddf66ab22ce03ab91874debeddb1086f5f7dbd48925"],genshiro:["0x9b8cefc0eb5c568b527998bdd76c184e2b76ae561be76e4667072230217ea243"],hydradx:["0xafdc188f45c71dacbaa0b62e16a91f726c7b8699a9748cdf715459de6b7f366d","0xd2a620c27ec5cbc5621ff9a522689895074f7cca0d08e7134a7804e1a3ba86fc","0x10af6e84234477d84dc572bac0789813b254aa490767ed06fb9591191d1073f9","0x3d75507dd46301767e601265791da1d9cb47b6ebc94e87347b635e5bf58bd047","0x0ed32bfcab4a83517fac88f2aa7cbc2f88d3ab93be9a12b6188a036bf8a943c2"],"interlay-parachain":["0xbf88efe70e9e0e916416e8bed61f2b45717f517d7f3523e33c7b001e5ffcbc72"],karura:["0xbaf5aabe40646d11f0ee8abbdc64f4a4b7674925cba08e4a05ff9ebed6e2126b"],khala:["0xd43540ba6d3eb4897c28a77d48cb5b729fea37603cbbfc7a86a73b72adb3be8d"],kulupu:["0xf7a99d3cb92853d00d5275c971c132c074636256583fee53b3bbe60d7b8769ba"],kusama:["0xb0a8d493285c2df73290dfb7e61f870f17b41801197a149ca93654499ea3dafe","0xe3777fa922cafbff200cadeaea1a76bd7898ad5b89f7848999058b50e715f636","0x3fd7b9eb6a00376e5be61f01abb429ffb0b104be05eaff4d458da48fcd425baf"],nodle:["0x97da7ede98d7bad4e36b4d734b6055425a3be036da2a332ea5a7037656427a21"],origintrail:["0xe7e0962324a3b86c83404dbea483f25fb5dab4c224791c81b756cfc948006174"],parallel:["0xe61a41c53f5dcd0beb09df93b34402aada44cb05117b71059cce40a2723a4e97"],pendulum:["0x5d3c298622d5634ed019bf61ea4b71655030015bde9beb0d6a24743714462c86"],phala:["0x1bb969d85965e4bb5a651abbedf21a54b6b31a21f66b5401cc3f1e286268d736"],picasso:["0x6811a339673c9daa897944dcdac99c6e2939cc88245ed21951a0a3c9a2be75bc","0xe8e7f0f4c4f5a00720b4821dbfddefea7490bcf0b19009961cc46957984e2c1c"],polkadex:["0x3920bcb4960a1eef5580cd5367ff3f430eef052774f78468852f7b9cb39f8a3c"],polkadot:["0x91b171bb158e2d3848fa23a9f1c25182fb8e20313b2c1eb49219da7a70ce90c3"],polymesh:["0x6fbd74e5e1d0a61d52ccfe9d4adaed16dd3a7caa37c6bc4d0c2fa12e8b2f4063"],rococo:["0x6408de7737c59c238890533af25896a2c20608d8b380bb01029acb392781063e","0xaaf2cd1b74b5f726895921259421b534124726263982522174147046b8827897","0x037f5f3c8e67b314062025fc886fcd6238ea25a4a9b45dce8d246815c9ebe770","0xc196f81260cf1686172b47a79cf002120735d7cb0eb1474e8adce56618456fff","0xf6e9983c37baf68846fedafe21e56718790e39fb1c582abc408b81bc7b208f9a","0x5fce687da39305dfe682b117f0820b319348e8bb37eb16cf34acbf6a202de9d9","0xe7c3d5edde7db964317cd9b51a3a059d7cd99f81bdbce14990047354334c9779","0x1611e1dbf0405379b861e2e27daa90f480b2e6d3682414a80835a52e8cb8a215","0x343442f12fa715489a8714e79a7b264ea88c0d5b8c66b684a7788a516032f6b9","0x78bcd530c6b3a068bc17473cf5d2aff9c287102bed9af3ae3c41c33b9d6c6147","0x47381ee0697153d64404fc578392c8fd5cba9073391908f46c888498415647bd","0x19c0e4fa8ab75f5ac7865e0b8f74ff91eb9a100d336f423cd013a8befba40299"],sora:["0x7e4e32d0feafd4f9c9414b0be86373f9a1efa904809b683453a9af6856d38ad5"],stafi:["0x290a4149f09ea0e402c74c1c7e96ae4239588577fe78932f94f5404c68243d80"],statemine:["0x48239ef607d7928874027a43a67689209727dfb3d3dc5e5b03a39bdc2eda771a"],statemint:["0x68d56f15f85d3136970ec16946040bc1752654e906147f7e43e9d539d7c3de2f"],subsocial:["0x0bd72c1c305172e1275278aaeb3f161e02eccb7a819e63f62d47bd53a28189f8"],ternoa:["0x6859c81ca95ef624c9dfe4dc6e3381c33e5d6509e35e147092bfbc780f777c4e"],unique:["0x84322d9cddbf35088f1e54e9a85c967a41a56a4f43445768125e61af166c7d31"],vtb:["0x286bc8414c7000ce1d6ee6a834e29a54c1784814b76243eb77ed0b2c5573c60f","0x7483b89572fb2bd687c7b9a93b242d0b237f9aba463aba07ec24503931038aaa"],westend:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"],xxnetwork:["0x50dd5d206917bf10502c68fb4d18a59fc8aa31586f4e8856b493e43544aa82aa"]};

	const knownIcon={centrifuge:"polkadot",kusama:"polkadot",polkadot:"polkadot",sora:"polkadot",statemine:"polkadot",statemint:"polkadot",westmint:"polkadot"};

	const knownLedger={acala:787,ajuna:354,"aleph-node":643,astar:810,bifrost:788,"bifrost-kusama":788,centrifuge:747,composable:354,darwinia:354,"dock-mainnet":594,edgeware:523,equilibrium:99999997,genshiro:99999996,hydradx:354,"interlay-parachain":354,karura:686,khala:434,kusama:434,nodle:1003,origintrail:354,parallel:354,pendulum:354,phala:354,picasso:434,polkadex:799,polkadot:354,polymesh:595,sora:617,stafi:907,statemine:434,statemint:354,ternoa:995,unique:354,vtb:694,xxnetwork:1955};

	const knownTestnet={"":!0,"cess-testnet":!0,"dock-testnet":!0,jupiter:!0,"mathchain-testnet":!0,p3dt:!0,subspace_testnet:!0,"zero-alphaville":!0};

	const UNSORTED=[0,2,42],TESTNETS=["testnet"];function toExpanded(e){const t=e.network||"",n=t.replace(/_/g,"-").split("-"),s=e;return s.slip44=knownLedger[t],s.hasLedgerSupport=!!s.slip44,s.genesisHash=knownGenesis[t]||[],s.icon=knownIcon[t]||"substrate",s.isTestnet=!!knownTestnet[t]||TESTNETS.includes(n[n.length-1]),s.isIgnored=s.isTestnet||!(e.standardAccount&&e.decimals&&e.decimals.length&&e.symbols&&e.symbols.length)&&42!==e.prefix,s}function filterSelectable({genesisHash:e,prefix:t}){return !!e.length||42===t}function filterAvailable(e){return !e.isIgnored&&!!e.network}function sortNetworks(e,t){const n=UNSORTED.includes(e.prefix);return n===UNSORTED.includes(t.prefix)?n?0:e.displayName.localeCompare(t.displayName):n?-1:1}const allNetworks=knownSubstrate.map(toExpanded);const availableNetworks=allNetworks.filter(filterAvailable).sort(sortNetworks);const selectableNetworks=availableNetworks.filter(filterSelectable);

	const defaults$1={allowedDecodedLengths:[1,2,4,8,32,33],allowedEncodedLengths:[3,4,6,10,35,36,37,38],allowedPrefix:availableNetworks.map((({prefix:e})=>e)),prefix:42};

	function decodeAddress(e,r,s=-1){if(!e)throw new Error("Invalid empty address passed");if(isU8a(e)||isHex(e))return u8aToU8a(e);try{const d=base58Decode(e);if(!defaults$1.allowedEncodedLengths.includes(d.length))throw new Error("Invalid decoded address length");const[o,t,c,a]=checkAddressChecksum(d);if(!o&&!r)throw new Error("Invalid decoded address checksum");if(-1!==s&&s!==a)throw new Error(`Expected ss58Format ${s}, received ${a}`);return d.slice(c,t)}catch(r){throw new Error(`Decoding ${e}: ${r.message}`)}}

	const BN_BE_OPTS={isLe:!1};const BN_LE_OPTS={isLe:!0};const BN_BE_32_OPTS={bitLength:32,isLe:!1};const BN_LE_32_OPTS={bitLength:32,isLe:!0};const BN_BE_256_OPTS={bitLength:256,isLe:!1};const BN_LE_256_OPTS={bitLength:256,isLe:!0};

	var _DeriveJunction_chainCode,_DeriveJunction_isHard;const RE_NUMBER=/^\d+$/;class DeriveJunction{constructor(){_DeriveJunction_chainCode.set(this,new Uint8Array(32)),_DeriveJunction_isHard.set(this,!1);}static from(i){const t=new DeriveJunction,[e,s]=i.startsWith("/")?[i.substring(1),!0]:[i,!1];return t.soft(RE_NUMBER.test(e)?new BN(e,10):e),s?t.harden():t}get chainCode(){return __classPrivateFieldGet(this,_DeriveJunction_chainCode,"f")}get isHard(){return __classPrivateFieldGet(this,_DeriveJunction_isHard,"f")}get isSoft(){return !__classPrivateFieldGet(this,_DeriveJunction_isHard,"f")}hard(i){return this.soft(i).harden()}harden(){return __classPrivateFieldSet(this,_DeriveJunction_isHard,!0,"f"),this}soft(i){return isNumber(i)||isBn(i)||isBigInt(i)?this.soft(bnToU8a(i,BN_LE_256_OPTS)):isHex(i)?this.soft(hexToU8a(i)):isString(i)?this.soft(compactAddLength(stringToU8a(i))):i.length>32?this.soft(blake2AsU8a(i)):(__classPrivateFieldGet(this,_DeriveJunction_chainCode,"f").fill(0),__classPrivateFieldGet(this,_DeriveJunction_chainCode,"f").set(i,0),this)}soften(){return __classPrivateFieldSet(this,_DeriveJunction_isHard,!1,"f"),this}}_DeriveJunction_chainCode=new WeakMap,_DeriveJunction_isHard=new WeakMap;

	const RE_JUNCTION=/\/(\/?)([^/]+)/g;function keyExtractPath(t){const o=t.match(RE_JUNCTION),n=[];let r="";if(o){r=o.join("");for(const t of o)n.push(DeriveJunction.from(t.substring(1)));}if(r!==t)throw new Error(`Re-constructed path "${r}" does not match input`);return {parts:o,path:n}}

	const RE_CAPTURE=/^(\w+( \w+)*)((\/\/?[^/]+)*)(\/\/\/(.*))?$/;function keyExtractSuri(t){const r=t.match(RE_CAPTURE);if(null===r)throw new Error("Unable to match provided value to a secret URI");const[,a,,e,,,o]=r,{path:c}=keyExtractPath(e);return {derivePath:e,password:o,path:c,phrase:a}}

	const HDKD$1=compactAddLength(stringToU8a("Secp256k1HDKD"));function secp256k1DeriveHard(a,o){if(!isU8a(o)||32!==o.length)throw new Error("Invalid chainCode passed to derive");return blake2AsU8a(u8aConcat(HDKD$1,a,o),256)}

	function secp256k1PairFromSeed(e,r){if(32!==e.length)throw new Error("Expected valid 32-byte private key as a seed");if(!hasBigInt||!r&&isReady()){const r=secp256k1FromSeed(e),t=r.slice(32);if(u8aEmpty(t))throw new Error("Invalid publicKey generated from WASM interface");return {publicKey:t,secretKey:r.slice(0,32)}}return {publicKey:getPublicKey(e,!0),secretKey:e}}

	function createSeedDeriveFn(e,r){return (t,{chainCode:n,isHard:o})=>{if(!o)throw new Error("A soft key was found in the path and is not supported");return e(r(t.secretKey.subarray(0,32),n))}}

	const keyHdkdEcdsa=createSeedDeriveFn(secp256k1PairFromSeed,secp256k1DeriveHard);

	var ed2curve$1 = {exports: {}};

	var naclFast = {exports: {}};

	var require$$0 = /*@__PURE__*/getAugmentedNamespace(_nodeResolve_empty$1);

	!function(r){!function(r){var t=function(r){var t,n=new Float64Array(16);if(r)for(t=0;t<r.length;t++)n[t]=r[t];return n},n=function(){throw new Error("no PRNG")},o=new Uint8Array(16),e=new Uint8Array(32);e[0]=9;var i=t(),h=t([1]),a=t([56129,1]),f=t([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),s=t([61785,9906,39828,60374,45398,33411,5274,224,53552,61171,33010,6542,64743,22239,55772,9222]),c=t([54554,36645,11616,51542,42930,38181,51040,26924,56412,64982,57905,49316,21502,52590,14035,8553]),u=t([26200,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214,26214]),y=t([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function l(r,t,n,o){r[t]=n>>24&255,r[t+1]=n>>16&255,r[t+2]=n>>8&255,r[t+3]=255&n,r[t+4]=o>>24&255,r[t+5]=o>>16&255,r[t+6]=o>>8&255,r[t+7]=255&o;}function p(r,t,n,o,e){var i,h=0;for(i=0;i<e;i++)h|=r[t+i]^n[o+i];return (1&h-1>>>8)-1}function v(r,t,n,o){return p(r,t,n,o,16)}function w(r,t,n,o){return p(r,t,n,o,32)}function b(r,t,n,o){!function(r,t,n,o){for(var e,i=255&o[0]|(255&o[1])<<8|(255&o[2])<<16|(255&o[3])<<24,h=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,f=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,s=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,c=255&o[4]|(255&o[5])<<8|(255&o[6])<<16|(255&o[7])<<24,u=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,y=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,l=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,v=255&o[8]|(255&o[9])<<8|(255&o[10])<<16|(255&o[11])<<24,w=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,b=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,g=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,_=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,A=255&o[12]|(255&o[13])<<8|(255&o[14])<<16|(255&o[15])<<24,U=i,d=h,E=a,x=f,m=s,M=c,B=u,S=y,k=l,K=p,Y=v,L=w,T=b,R=g,z=_,F=A,P=0;P<20;P+=2)U^=(e=(T^=(e=(k^=(e=(m^=(e=U+T|0)<<7|e>>>25)+U|0)<<9|e>>>23)+m|0)<<13|e>>>19)+k|0)<<18|e>>>14,M^=(e=(d^=(e=(R^=(e=(K^=(e=M+d|0)<<7|e>>>25)+M|0)<<9|e>>>23)+K|0)<<13|e>>>19)+R|0)<<18|e>>>14,Y^=(e=(B^=(e=(E^=(e=(z^=(e=Y+B|0)<<7|e>>>25)+Y|0)<<9|e>>>23)+z|0)<<13|e>>>19)+E|0)<<18|e>>>14,F^=(e=(L^=(e=(S^=(e=(x^=(e=F+L|0)<<7|e>>>25)+F|0)<<9|e>>>23)+x|0)<<13|e>>>19)+S|0)<<18|e>>>14,U^=(e=(x^=(e=(E^=(e=(d^=(e=U+x|0)<<7|e>>>25)+U|0)<<9|e>>>23)+d|0)<<13|e>>>19)+E|0)<<18|e>>>14,M^=(e=(m^=(e=(S^=(e=(B^=(e=M+m|0)<<7|e>>>25)+M|0)<<9|e>>>23)+B|0)<<13|e>>>19)+S|0)<<18|e>>>14,Y^=(e=(K^=(e=(k^=(e=(L^=(e=Y+K|0)<<7|e>>>25)+Y|0)<<9|e>>>23)+L|0)<<13|e>>>19)+k|0)<<18|e>>>14,F^=(e=(z^=(e=(R^=(e=(T^=(e=F+z|0)<<7|e>>>25)+F|0)<<9|e>>>23)+T|0)<<13|e>>>19)+R|0)<<18|e>>>14;U=U+i|0,d=d+h|0,E=E+a|0,x=x+f|0,m=m+s|0,M=M+c|0,B=B+u|0,S=S+y|0,k=k+l|0,K=K+p|0,Y=Y+v|0,L=L+w|0,T=T+b|0,R=R+g|0,z=z+_|0,F=F+A|0,r[0]=U>>>0&255,r[1]=U>>>8&255,r[2]=U>>>16&255,r[3]=U>>>24&255,r[4]=d>>>0&255,r[5]=d>>>8&255,r[6]=d>>>16&255,r[7]=d>>>24&255,r[8]=E>>>0&255,r[9]=E>>>8&255,r[10]=E>>>16&255,r[11]=E>>>24&255,r[12]=x>>>0&255,r[13]=x>>>8&255,r[14]=x>>>16&255,r[15]=x>>>24&255,r[16]=m>>>0&255,r[17]=m>>>8&255,r[18]=m>>>16&255,r[19]=m>>>24&255,r[20]=M>>>0&255,r[21]=M>>>8&255,r[22]=M>>>16&255,r[23]=M>>>24&255,r[24]=B>>>0&255,r[25]=B>>>8&255,r[26]=B>>>16&255,r[27]=B>>>24&255,r[28]=S>>>0&255,r[29]=S>>>8&255,r[30]=S>>>16&255,r[31]=S>>>24&255,r[32]=k>>>0&255,r[33]=k>>>8&255,r[34]=k>>>16&255,r[35]=k>>>24&255,r[36]=K>>>0&255,r[37]=K>>>8&255,r[38]=K>>>16&255,r[39]=K>>>24&255,r[40]=Y>>>0&255,r[41]=Y>>>8&255,r[42]=Y>>>16&255,r[43]=Y>>>24&255,r[44]=L>>>0&255,r[45]=L>>>8&255,r[46]=L>>>16&255,r[47]=L>>>24&255,r[48]=T>>>0&255,r[49]=T>>>8&255,r[50]=T>>>16&255,r[51]=T>>>24&255,r[52]=R>>>0&255,r[53]=R>>>8&255,r[54]=R>>>16&255,r[55]=R>>>24&255,r[56]=z>>>0&255,r[57]=z>>>8&255,r[58]=z>>>16&255,r[59]=z>>>24&255,r[60]=F>>>0&255,r[61]=F>>>8&255,r[62]=F>>>16&255,r[63]=F>>>24&255;}(r,t,n,o);}function g(r,t,n,o){!function(r,t,n,o){for(var e,i=255&o[0]|(255&o[1])<<8|(255&o[2])<<16|(255&o[3])<<24,h=255&n[0]|(255&n[1])<<8|(255&n[2])<<16|(255&n[3])<<24,a=255&n[4]|(255&n[5])<<8|(255&n[6])<<16|(255&n[7])<<24,f=255&n[8]|(255&n[9])<<8|(255&n[10])<<16|(255&n[11])<<24,s=255&n[12]|(255&n[13])<<8|(255&n[14])<<16|(255&n[15])<<24,c=255&o[4]|(255&o[5])<<8|(255&o[6])<<16|(255&o[7])<<24,u=255&t[0]|(255&t[1])<<8|(255&t[2])<<16|(255&t[3])<<24,y=255&t[4]|(255&t[5])<<8|(255&t[6])<<16|(255&t[7])<<24,l=255&t[8]|(255&t[9])<<8|(255&t[10])<<16|(255&t[11])<<24,p=255&t[12]|(255&t[13])<<8|(255&t[14])<<16|(255&t[15])<<24,v=255&o[8]|(255&o[9])<<8|(255&o[10])<<16|(255&o[11])<<24,w=255&n[16]|(255&n[17])<<8|(255&n[18])<<16|(255&n[19])<<24,b=255&n[20]|(255&n[21])<<8|(255&n[22])<<16|(255&n[23])<<24,g=255&n[24]|(255&n[25])<<8|(255&n[26])<<16|(255&n[27])<<24,_=255&n[28]|(255&n[29])<<8|(255&n[30])<<16|(255&n[31])<<24,A=255&o[12]|(255&o[13])<<8|(255&o[14])<<16|(255&o[15])<<24,U=0;U<20;U+=2)i^=(e=(b^=(e=(l^=(e=(s^=(e=i+b|0)<<7|e>>>25)+i|0)<<9|e>>>23)+s|0)<<13|e>>>19)+l|0)<<18|e>>>14,c^=(e=(h^=(e=(g^=(e=(p^=(e=c+h|0)<<7|e>>>25)+c|0)<<9|e>>>23)+p|0)<<13|e>>>19)+g|0)<<18|e>>>14,v^=(e=(u^=(e=(a^=(e=(_^=(e=v+u|0)<<7|e>>>25)+v|0)<<9|e>>>23)+_|0)<<13|e>>>19)+a|0)<<18|e>>>14,A^=(e=(w^=(e=(y^=(e=(f^=(e=A+w|0)<<7|e>>>25)+A|0)<<9|e>>>23)+f|0)<<13|e>>>19)+y|0)<<18|e>>>14,i^=(e=(f^=(e=(a^=(e=(h^=(e=i+f|0)<<7|e>>>25)+i|0)<<9|e>>>23)+h|0)<<13|e>>>19)+a|0)<<18|e>>>14,c^=(e=(s^=(e=(y^=(e=(u^=(e=c+s|0)<<7|e>>>25)+c|0)<<9|e>>>23)+u|0)<<13|e>>>19)+y|0)<<18|e>>>14,v^=(e=(p^=(e=(l^=(e=(w^=(e=v+p|0)<<7|e>>>25)+v|0)<<9|e>>>23)+w|0)<<13|e>>>19)+l|0)<<18|e>>>14,A^=(e=(_^=(e=(g^=(e=(b^=(e=A+_|0)<<7|e>>>25)+A|0)<<9|e>>>23)+b|0)<<13|e>>>19)+g|0)<<18|e>>>14;r[0]=i>>>0&255,r[1]=i>>>8&255,r[2]=i>>>16&255,r[3]=i>>>24&255,r[4]=c>>>0&255,r[5]=c>>>8&255,r[6]=c>>>16&255,r[7]=c>>>24&255,r[8]=v>>>0&255,r[9]=v>>>8&255,r[10]=v>>>16&255,r[11]=v>>>24&255,r[12]=A>>>0&255,r[13]=A>>>8&255,r[14]=A>>>16&255,r[15]=A>>>24&255,r[16]=u>>>0&255,r[17]=u>>>8&255,r[18]=u>>>16&255,r[19]=u>>>24&255,r[20]=y>>>0&255,r[21]=y>>>8&255,r[22]=y>>>16&255,r[23]=y>>>24&255,r[24]=l>>>0&255,r[25]=l>>>8&255,r[26]=l>>>16&255,r[27]=l>>>24&255,r[28]=p>>>0&255,r[29]=p>>>8&255,r[30]=p>>>16&255,r[31]=p>>>24&255;}(r,t,n,o);}var _=new Uint8Array([101,120,112,97,110,100,32,51,50,45,98,121,116,101,32,107]);function A(r,t,n,o,e,i,h){var a,f,s=new Uint8Array(16),c=new Uint8Array(64);for(f=0;f<16;f++)s[f]=0;for(f=0;f<8;f++)s[f]=i[f];for(;e>=64;){for(b(c,s,h,_),f=0;f<64;f++)r[t+f]=n[o+f]^c[f];for(a=1,f=8;f<16;f++)a=a+(255&s[f])|0,s[f]=255&a,a>>>=8;e-=64,t+=64,o+=64;}if(e>0)for(b(c,s,h,_),f=0;f<e;f++)r[t+f]=n[o+f]^c[f];return 0}function U(r,t,n,o,e){var i,h,a=new Uint8Array(16),f=new Uint8Array(64);for(h=0;h<16;h++)a[h]=0;for(h=0;h<8;h++)a[h]=o[h];for(;n>=64;){for(b(f,a,e,_),h=0;h<64;h++)r[t+h]=f[h];for(i=1,h=8;h<16;h++)i=i+(255&a[h])|0,a[h]=255&i,i>>>=8;n-=64,t+=64;}if(n>0)for(b(f,a,e,_),h=0;h<n;h++)r[t+h]=f[h];return 0}function d(r,t,n,o,e){var i=new Uint8Array(32);g(i,o,e,_);for(var h=new Uint8Array(8),a=0;a<8;a++)h[a]=o[a+16];return U(r,t,n,h,i)}function E(r,t,n,o,e,i,h){var a=new Uint8Array(32);g(a,i,h,_);for(var f=new Uint8Array(8),s=0;s<8;s++)f[s]=i[s+16];return A(r,t,n,o,e,f,a)}var x=function(r){var t,n,o,e,i,h,a,f;this.buffer=new Uint8Array(16),this.r=new Uint16Array(10),this.h=new Uint16Array(10),this.pad=new Uint16Array(8),this.leftover=0,this.fin=0,t=255&r[0]|(255&r[1])<<8,this.r[0]=8191&t,n=255&r[2]|(255&r[3])<<8,this.r[1]=8191&(t>>>13|n<<3),o=255&r[4]|(255&r[5])<<8,this.r[2]=7939&(n>>>10|o<<6),e=255&r[6]|(255&r[7])<<8,this.r[3]=8191&(o>>>7|e<<9),i=255&r[8]|(255&r[9])<<8,this.r[4]=255&(e>>>4|i<<12),this.r[5]=i>>>1&8190,h=255&r[10]|(255&r[11])<<8,this.r[6]=8191&(i>>>14|h<<2),a=255&r[12]|(255&r[13])<<8,this.r[7]=8065&(h>>>11|a<<5),f=255&r[14]|(255&r[15])<<8,this.r[8]=8191&(a>>>8|f<<8),this.r[9]=f>>>5&127,this.pad[0]=255&r[16]|(255&r[17])<<8,this.pad[1]=255&r[18]|(255&r[19])<<8,this.pad[2]=255&r[20]|(255&r[21])<<8,this.pad[3]=255&r[22]|(255&r[23])<<8,this.pad[4]=255&r[24]|(255&r[25])<<8,this.pad[5]=255&r[26]|(255&r[27])<<8,this.pad[6]=255&r[28]|(255&r[29])<<8,this.pad[7]=255&r[30]|(255&r[31])<<8;};function m(r,t,n,o,e,i){var h=new x(i);return h.update(n,o,e),h.finish(r,t),0}function M(r,t,n,o,e,i){var h=new Uint8Array(16);return m(h,0,n,o,e,i),v(r,t,h,0)}function B(r,t,n,o,e){var i;if(n<32)return -1;for(E(r,0,t,0,n,o,e),m(r,16,r,32,n-32,r),i=0;i<16;i++)r[i]=0;return 0}function S(r,t,n,o,e){var i,h=new Uint8Array(32);if(n<32)return -1;if(d(h,0,32,o,e),0!==M(t,16,t,32,n-32,h))return -1;for(E(r,0,t,0,n,o,e),i=0;i<32;i++)r[i]=0;return 0}function k(r,t){var n;for(n=0;n<16;n++)r[n]=0|t[n];}function K(r){var t,n,o=1;for(t=0;t<16;t++)n=r[t]+o+65535,o=Math.floor(n/65536),r[t]=n-65536*o;r[0]+=o-1+37*(o-1);}function Y(r,t,n){for(var o,e=~(n-1),i=0;i<16;i++)o=e&(r[i]^t[i]),r[i]^=o,t[i]^=o;}function L(r,n){var o,e,i,h=t(),a=t();for(o=0;o<16;o++)a[o]=n[o];for(K(a),K(a),K(a),e=0;e<2;e++){for(h[0]=a[0]-65517,o=1;o<15;o++)h[o]=a[o]-65535-(h[o-1]>>16&1),h[o-1]&=65535;h[15]=a[15]-32767-(h[14]>>16&1),i=h[15]>>16&1,h[14]&=65535,Y(a,h,1-i);}for(o=0;o<16;o++)r[2*o]=255&a[o],r[2*o+1]=a[o]>>8;}function T(r,t){var n=new Uint8Array(32),o=new Uint8Array(32);return L(n,r),L(o,t),w(n,0,o,0)}function R(r){var t=new Uint8Array(32);return L(t,r),1&t[0]}function z(r,t){var n;for(n=0;n<16;n++)r[n]=t[2*n]+(t[2*n+1]<<8);r[15]&=32767;}function F(r,t,n){for(var o=0;o<16;o++)r[o]=t[o]+n[o];}function P(r,t,n){for(var o=0;o<16;o++)r[o]=t[o]-n[o];}function j(r,t,n){var o,e,i=0,h=0,a=0,f=0,s=0,c=0,u=0,y=0,l=0,p=0,v=0,w=0,b=0,g=0,_=0,A=0,U=0,d=0,E=0,x=0,m=0,M=0,B=0,S=0,k=0,K=0,Y=0,L=0,T=0,R=0,z=0,F=n[0],P=n[1],j=n[2],C=n[3],N=n[4],O=n[5],I=n[6],Z=n[7],q=n[8],G=n[9],$=n[10],D=n[11],H=n[12],V=n[13],X=n[14],J=n[15];i+=(o=t[0])*F,h+=o*P,a+=o*j,f+=o*C,s+=o*N,c+=o*O,u+=o*I,y+=o*Z,l+=o*q,p+=o*G,v+=o*$,w+=o*D,b+=o*H,g+=o*V,_+=o*X,A+=o*J,h+=(o=t[1])*F,a+=o*P,f+=o*j,s+=o*C,c+=o*N,u+=o*O,y+=o*I,l+=o*Z,p+=o*q,v+=o*G,w+=o*$,b+=o*D,g+=o*H,_+=o*V,A+=o*X,U+=o*J,a+=(o=t[2])*F,f+=o*P,s+=o*j,c+=o*C,u+=o*N,y+=o*O,l+=o*I,p+=o*Z,v+=o*q,w+=o*G,b+=o*$,g+=o*D,_+=o*H,A+=o*V,U+=o*X,d+=o*J,f+=(o=t[3])*F,s+=o*P,c+=o*j,u+=o*C,y+=o*N,l+=o*O,p+=o*I,v+=o*Z,w+=o*q,b+=o*G,g+=o*$,_+=o*D,A+=o*H,U+=o*V,d+=o*X,E+=o*J,s+=(o=t[4])*F,c+=o*P,u+=o*j,y+=o*C,l+=o*N,p+=o*O,v+=o*I,w+=o*Z,b+=o*q,g+=o*G,_+=o*$,A+=o*D,U+=o*H,d+=o*V,E+=o*X,x+=o*J,c+=(o=t[5])*F,u+=o*P,y+=o*j,l+=o*C,p+=o*N,v+=o*O,w+=o*I,b+=o*Z,g+=o*q,_+=o*G,A+=o*$,U+=o*D,d+=o*H,E+=o*V,x+=o*X,m+=o*J,u+=(o=t[6])*F,y+=o*P,l+=o*j,p+=o*C,v+=o*N,w+=o*O,b+=o*I,g+=o*Z,_+=o*q,A+=o*G,U+=o*$,d+=o*D,E+=o*H,x+=o*V,m+=o*X,M+=o*J,y+=(o=t[7])*F,l+=o*P,p+=o*j,v+=o*C,w+=o*N,b+=o*O,g+=o*I,_+=o*Z,A+=o*q,U+=o*G,d+=o*$,E+=o*D,x+=o*H,m+=o*V,M+=o*X,B+=o*J,l+=(o=t[8])*F,p+=o*P,v+=o*j,w+=o*C,b+=o*N,g+=o*O,_+=o*I,A+=o*Z,U+=o*q,d+=o*G,E+=o*$,x+=o*D,m+=o*H,M+=o*V,B+=o*X,S+=o*J,p+=(o=t[9])*F,v+=o*P,w+=o*j,b+=o*C,g+=o*N,_+=o*O,A+=o*I,U+=o*Z,d+=o*q,E+=o*G,x+=o*$,m+=o*D,M+=o*H,B+=o*V,S+=o*X,k+=o*J,v+=(o=t[10])*F,w+=o*P,b+=o*j,g+=o*C,_+=o*N,A+=o*O,U+=o*I,d+=o*Z,E+=o*q,x+=o*G,m+=o*$,M+=o*D,B+=o*H,S+=o*V,k+=o*X,K+=o*J,w+=(o=t[11])*F,b+=o*P,g+=o*j,_+=o*C,A+=o*N,U+=o*O,d+=o*I,E+=o*Z,x+=o*q,m+=o*G,M+=o*$,B+=o*D,S+=o*H,k+=o*V,K+=o*X,Y+=o*J,b+=(o=t[12])*F,g+=o*P,_+=o*j,A+=o*C,U+=o*N,d+=o*O,E+=o*I,x+=o*Z,m+=o*q,M+=o*G,B+=o*$,S+=o*D,k+=o*H,K+=o*V,Y+=o*X,L+=o*J,g+=(o=t[13])*F,_+=o*P,A+=o*j,U+=o*C,d+=o*N,E+=o*O,x+=o*I,m+=o*Z,M+=o*q,B+=o*G,S+=o*$,k+=o*D,K+=o*H,Y+=o*V,L+=o*X,T+=o*J,_+=(o=t[14])*F,A+=o*P,U+=o*j,d+=o*C,E+=o*N,x+=o*O,m+=o*I,M+=o*Z,B+=o*q,S+=o*G,k+=o*$,K+=o*D,Y+=o*H,L+=o*V,T+=o*X,R+=o*J,A+=(o=t[15])*F,h+=38*(d+=o*j),a+=38*(E+=o*C),f+=38*(x+=o*N),s+=38*(m+=o*O),c+=38*(M+=o*I),u+=38*(B+=o*Z),y+=38*(S+=o*q),l+=38*(k+=o*G),p+=38*(K+=o*$),v+=38*(Y+=o*D),w+=38*(L+=o*H),b+=38*(T+=o*V),g+=38*(R+=o*X),_+=38*(z+=o*J),i=(o=(i+=38*(U+=o*P))+(e=1)+65535)-65536*(e=Math.floor(o/65536)),h=(o=h+e+65535)-65536*(e=Math.floor(o/65536)),a=(o=a+e+65535)-65536*(e=Math.floor(o/65536)),f=(o=f+e+65535)-65536*(e=Math.floor(o/65536)),s=(o=s+e+65535)-65536*(e=Math.floor(o/65536)),c=(o=c+e+65535)-65536*(e=Math.floor(o/65536)),u=(o=u+e+65535)-65536*(e=Math.floor(o/65536)),y=(o=y+e+65535)-65536*(e=Math.floor(o/65536)),l=(o=l+e+65535)-65536*(e=Math.floor(o/65536)),p=(o=p+e+65535)-65536*(e=Math.floor(o/65536)),v=(o=v+e+65535)-65536*(e=Math.floor(o/65536)),w=(o=w+e+65535)-65536*(e=Math.floor(o/65536)),b=(o=b+e+65535)-65536*(e=Math.floor(o/65536)),g=(o=g+e+65535)-65536*(e=Math.floor(o/65536)),_=(o=_+e+65535)-65536*(e=Math.floor(o/65536)),A=(o=A+e+65535)-65536*(e=Math.floor(o/65536)),i=(o=(i+=e-1+37*(e-1))+(e=1)+65535)-65536*(e=Math.floor(o/65536)),h=(o=h+e+65535)-65536*(e=Math.floor(o/65536)),a=(o=a+e+65535)-65536*(e=Math.floor(o/65536)),f=(o=f+e+65535)-65536*(e=Math.floor(o/65536)),s=(o=s+e+65535)-65536*(e=Math.floor(o/65536)),c=(o=c+e+65535)-65536*(e=Math.floor(o/65536)),u=(o=u+e+65535)-65536*(e=Math.floor(o/65536)),y=(o=y+e+65535)-65536*(e=Math.floor(o/65536)),l=(o=l+e+65535)-65536*(e=Math.floor(o/65536)),p=(o=p+e+65535)-65536*(e=Math.floor(o/65536)),v=(o=v+e+65535)-65536*(e=Math.floor(o/65536)),w=(o=w+e+65535)-65536*(e=Math.floor(o/65536)),b=(o=b+e+65535)-65536*(e=Math.floor(o/65536)),g=(o=g+e+65535)-65536*(e=Math.floor(o/65536)),_=(o=_+e+65535)-65536*(e=Math.floor(o/65536)),A=(o=A+e+65535)-65536*(e=Math.floor(o/65536)),i+=e-1+37*(e-1),r[0]=i,r[1]=h,r[2]=a,r[3]=f,r[4]=s,r[5]=c,r[6]=u,r[7]=y,r[8]=l,r[9]=p,r[10]=v,r[11]=w,r[12]=b,r[13]=g,r[14]=_,r[15]=A;}function C(r,t){j(r,t,t);}function N(r,n){var o,e=t();for(o=0;o<16;o++)e[o]=n[o];for(o=253;o>=0;o--)C(e,e),2!==o&&4!==o&&j(e,e,n);for(o=0;o<16;o++)r[o]=e[o];}function O(r,n){var o,e=t();for(o=0;o<16;o++)e[o]=n[o];for(o=250;o>=0;o--)C(e,e),1!==o&&j(e,e,n);for(o=0;o<16;o++)r[o]=e[o];}function I(r,n,o){var e,i,h=new Uint8Array(32),f=new Float64Array(80),s=t(),c=t(),u=t(),y=t(),l=t(),p=t();for(i=0;i<31;i++)h[i]=n[i];for(h[31]=127&n[31]|64,h[0]&=248,z(f,o),i=0;i<16;i++)c[i]=f[i],y[i]=s[i]=u[i]=0;for(s[0]=y[0]=1,i=254;i>=0;--i)Y(s,c,e=h[i>>>3]>>>(7&i)&1),Y(u,y,e),F(l,s,u),P(s,s,u),F(u,c,y),P(c,c,y),C(y,l),C(p,s),j(s,u,s),j(u,c,l),F(l,s,u),P(s,s,u),C(c,s),P(u,y,p),j(s,u,a),F(s,s,y),j(u,u,s),j(s,y,p),j(y,c,f),C(c,l),Y(s,c,e),Y(u,y,e);for(i=0;i<16;i++)f[i+16]=s[i],f[i+32]=u[i],f[i+48]=c[i],f[i+64]=y[i];var v=f.subarray(32),w=f.subarray(16);return N(v,v),j(w,w,v),L(r,w),0}function Z(r,t){return I(r,t,e)}function q(r,t){return n(t,32),Z(r,t)}function G(r,t,n){var e=new Uint8Array(32);return I(e,n,t),g(r,o,e,_)}x.prototype.blocks=function(r,t,n){for(var o,e,i,h,a,f,s,c,u,y,l,p,v,w,b,g,_,A,U,d=this.fin?0:2048,E=this.h[0],x=this.h[1],m=this.h[2],M=this.h[3],B=this.h[4],S=this.h[5],k=this.h[6],K=this.h[7],Y=this.h[8],L=this.h[9],T=this.r[0],R=this.r[1],z=this.r[2],F=this.r[3],P=this.r[4],j=this.r[5],C=this.r[6],N=this.r[7],O=this.r[8],I=this.r[9];n>=16;)y=u=0,y+=(E+=8191&(o=255&r[t+0]|(255&r[t+1])<<8))*T,y+=(x+=8191&(o>>>13|(e=255&r[t+2]|(255&r[t+3])<<8)<<3))*(5*I),y+=(m+=8191&(e>>>10|(i=255&r[t+4]|(255&r[t+5])<<8)<<6))*(5*O),y+=(M+=8191&(i>>>7|(h=255&r[t+6]|(255&r[t+7])<<8)<<9))*(5*N),u=(y+=(B+=8191&(h>>>4|(a=255&r[t+8]|(255&r[t+9])<<8)<<12))*(5*C))>>>13,y&=8191,y+=(S+=a>>>1&8191)*(5*j),y+=(k+=8191&(a>>>14|(f=255&r[t+10]|(255&r[t+11])<<8)<<2))*(5*P),y+=(K+=8191&(f>>>11|(s=255&r[t+12]|(255&r[t+13])<<8)<<5))*(5*F),y+=(Y+=8191&(s>>>8|(c=255&r[t+14]|(255&r[t+15])<<8)<<8))*(5*z),l=u+=(y+=(L+=c>>>5|d)*(5*R))>>>13,l+=E*R,l+=x*T,l+=m*(5*I),l+=M*(5*O),u=(l+=B*(5*N))>>>13,l&=8191,l+=S*(5*C),l+=k*(5*j),l+=K*(5*P),l+=Y*(5*F),u+=(l+=L*(5*z))>>>13,l&=8191,p=u,p+=E*z,p+=x*R,p+=m*T,p+=M*(5*I),u=(p+=B*(5*O))>>>13,p&=8191,p+=S*(5*N),p+=k*(5*C),p+=K*(5*j),p+=Y*(5*P),v=u+=(p+=L*(5*F))>>>13,v+=E*F,v+=x*z,v+=m*R,v+=M*T,u=(v+=B*(5*I))>>>13,v&=8191,v+=S*(5*O),v+=k*(5*N),v+=K*(5*C),v+=Y*(5*j),w=u+=(v+=L*(5*P))>>>13,w+=E*P,w+=x*F,w+=m*z,w+=M*R,u=(w+=B*T)>>>13,w&=8191,w+=S*(5*I),w+=k*(5*O),w+=K*(5*N),w+=Y*(5*C),b=u+=(w+=L*(5*j))>>>13,b+=E*j,b+=x*P,b+=m*F,b+=M*z,u=(b+=B*R)>>>13,b&=8191,b+=S*T,b+=k*(5*I),b+=K*(5*O),b+=Y*(5*N),g=u+=(b+=L*(5*C))>>>13,g+=E*C,g+=x*j,g+=m*P,g+=M*F,u=(g+=B*z)>>>13,g&=8191,g+=S*R,g+=k*T,g+=K*(5*I),g+=Y*(5*O),_=u+=(g+=L*(5*N))>>>13,_+=E*N,_+=x*C,_+=m*j,_+=M*P,u=(_+=B*F)>>>13,_&=8191,_+=S*z,_+=k*R,_+=K*T,_+=Y*(5*I),A=u+=(_+=L*(5*O))>>>13,A+=E*O,A+=x*N,A+=m*C,A+=M*j,u=(A+=B*P)>>>13,A&=8191,A+=S*F,A+=k*z,A+=K*R,A+=Y*T,U=u+=(A+=L*(5*I))>>>13,U+=E*I,U+=x*O,U+=m*N,U+=M*C,u=(U+=B*j)>>>13,U&=8191,U+=S*P,U+=k*F,U+=K*z,U+=Y*R,E=y=8191&(u=(u=((u+=(U+=L*T)>>>13)<<2)+u|0)+(y&=8191)|0),x=l+=u>>>=13,m=p&=8191,M=v&=8191,B=w&=8191,S=b&=8191,k=g&=8191,K=_&=8191,Y=A&=8191,L=U&=8191,t+=16,n-=16;this.h[0]=E,this.h[1]=x,this.h[2]=m,this.h[3]=M,this.h[4]=B,this.h[5]=S,this.h[6]=k,this.h[7]=K,this.h[8]=Y,this.h[9]=L;},x.prototype.finish=function(r,t){var n,o,e,i,h=new Uint16Array(10);if(this.leftover){for(i=this.leftover,this.buffer[i++]=1;i<16;i++)this.buffer[i]=0;this.fin=1,this.blocks(this.buffer,0,16);}for(n=this.h[1]>>>13,this.h[1]&=8191,i=2;i<10;i++)this.h[i]+=n,n=this.h[i]>>>13,this.h[i]&=8191;for(this.h[0]+=5*n,n=this.h[0]>>>13,this.h[0]&=8191,this.h[1]+=n,n=this.h[1]>>>13,this.h[1]&=8191,this.h[2]+=n,h[0]=this.h[0]+5,n=h[0]>>>13,h[0]&=8191,i=1;i<10;i++)h[i]=this.h[i]+n,n=h[i]>>>13,h[i]&=8191;for(h[9]-=8192,o=(1^n)-1,i=0;i<10;i++)h[i]&=o;for(o=~o,i=0;i<10;i++)this.h[i]=this.h[i]&o|h[i];for(this.h[0]=65535&(this.h[0]|this.h[1]<<13),this.h[1]=65535&(this.h[1]>>>3|this.h[2]<<10),this.h[2]=65535&(this.h[2]>>>6|this.h[3]<<7),this.h[3]=65535&(this.h[3]>>>9|this.h[4]<<4),this.h[4]=65535&(this.h[4]>>>12|this.h[5]<<1|this.h[6]<<14),this.h[5]=65535&(this.h[6]>>>2|this.h[7]<<11),this.h[6]=65535&(this.h[7]>>>5|this.h[8]<<8),this.h[7]=65535&(this.h[8]>>>8|this.h[9]<<5),e=this.h[0]+this.pad[0],this.h[0]=65535&e,i=1;i<8;i++)e=(this.h[i]+this.pad[i]|0)+(e>>>16)|0,this.h[i]=65535&e;r[t+0]=this.h[0]>>>0&255,r[t+1]=this.h[0]>>>8&255,r[t+2]=this.h[1]>>>0&255,r[t+3]=this.h[1]>>>8&255,r[t+4]=this.h[2]>>>0&255,r[t+5]=this.h[2]>>>8&255,r[t+6]=this.h[3]>>>0&255,r[t+7]=this.h[3]>>>8&255,r[t+8]=this.h[4]>>>0&255,r[t+9]=this.h[4]>>>8&255,r[t+10]=this.h[5]>>>0&255,r[t+11]=this.h[5]>>>8&255,r[t+12]=this.h[6]>>>0&255,r[t+13]=this.h[6]>>>8&255,r[t+14]=this.h[7]>>>0&255,r[t+15]=this.h[7]>>>8&255;},x.prototype.update=function(r,t,n){var o,e;if(this.leftover){for((e=16-this.leftover)>n&&(e=n),o=0;o<e;o++)this.buffer[this.leftover+o]=r[t+o];if(n-=e,t+=e,this.leftover+=e,this.leftover<16)return;this.blocks(this.buffer,0,16),this.leftover=0;}if(n>=16&&(e=n-n%16,this.blocks(r,t,e),t+=e,n-=e),n){for(o=0;o<n;o++)this.buffer[this.leftover+o]=r[t+o];this.leftover+=n;}};var $=B,D=S;var H=[1116352408,3609767458,1899447441,602891725,3049323471,3964484399,3921009573,2173295548,961987163,4081628472,1508970993,3053834265,2453635748,2937671579,2870763221,3664609560,3624381080,2734883394,310598401,1164996542,607225278,1323610764,1426881987,3590304994,1925078388,4068182383,2162078206,991336113,2614888103,633803317,3248222580,3479774868,3835390401,2666613458,4022224774,944711139,264347078,2341262773,604807628,2007800933,770255983,1495990901,1249150122,1856431235,1555081692,3175218132,1996064986,2198950837,2554220882,3999719339,2821834349,766784016,2952996808,2566594879,3210313671,3203337956,3336571891,1034457026,3584528711,2466948901,113926993,3758326383,338241895,168717936,666307205,1188179964,773529912,1546045734,1294757372,1522805485,1396182291,2643833823,1695183700,2343527390,1986661051,1014477480,2177026350,1206759142,2456956037,344077627,2730485921,1290863460,2820302411,3158454273,3259730800,3505952657,3345764771,106217008,3516065817,3606008344,3600352804,1432725776,4094571909,1467031594,275423344,851169720,430227734,3100823752,506948616,1363258195,659060556,3750685593,883997877,3785050280,958139571,3318307427,1322822218,3812723403,1537002063,2003034995,1747873779,3602036899,1955562222,1575990012,2024104815,1125592928,2227730452,2716904306,2361852424,442776044,2428436474,593698344,2756734187,3733110249,3204031479,2999351573,3329325298,3815920427,3391569614,3928383900,3515267271,566280711,3940187606,3454069534,4118630271,4000239992,116418474,1914138554,174292421,2731055270,289380356,3203993006,460393269,320620315,685471733,587496836,852142971,1086792851,1017036298,365543100,1126000580,2618297676,1288033470,3409855158,1501505948,4234509866,1607167915,987167468,1816402316,1246189591];function V(r,t,n,o){for(var e,i,h,a,f,s,c,u,y,l,p,v,w,b,g,_,A,U,d,E,x,m,M,B,S,k,K=new Int32Array(16),Y=new Int32Array(16),L=r[0],T=r[1],R=r[2],z=r[3],F=r[4],P=r[5],j=r[6],C=r[7],N=t[0],O=t[1],I=t[2],Z=t[3],q=t[4],G=t[5],$=t[6],D=t[7],V=0;o>=128;){for(d=0;d<16;d++)E=8*d+V,K[d]=n[E+0]<<24|n[E+1]<<16|n[E+2]<<8|n[E+3],Y[d]=n[E+4]<<24|n[E+5]<<16|n[E+6]<<8|n[E+7];for(d=0;d<80;d++)if(e=L,i=T,h=R,a=z,f=F,s=P,c=j,y=N,l=O,p=I,v=Z,w=q,b=G,g=$,M=65535&(m=D),B=m>>>16,S=65535&(x=C),k=x>>>16,M+=65535&(m=(q>>>14|F<<18)^(q>>>18|F<<14)^(F>>>9|q<<23)),B+=m>>>16,S+=65535&(x=(F>>>14|q<<18)^(F>>>18|q<<14)^(q>>>9|F<<23)),k+=x>>>16,M+=65535&(m=q&G^~q&$),B+=m>>>16,S+=65535&(x=F&P^~F&j),k+=x>>>16,x=H[2*d],M+=65535&(m=H[2*d+1]),B+=m>>>16,S+=65535&x,k+=x>>>16,x=K[d%16],B+=(m=Y[d%16])>>>16,S+=65535&x,k+=x>>>16,S+=(B+=(M+=65535&m)>>>16)>>>16,M=65535&(m=U=65535&M|B<<16),B=m>>>16,S=65535&(x=A=65535&S|(k+=S>>>16)<<16),k=x>>>16,M+=65535&(m=(N>>>28|L<<4)^(L>>>2|N<<30)^(L>>>7|N<<25)),B+=m>>>16,S+=65535&(x=(L>>>28|N<<4)^(N>>>2|L<<30)^(N>>>7|L<<25)),k+=x>>>16,B+=(m=N&O^N&I^O&I)>>>16,S+=65535&(x=L&T^L&R^T&R),k+=x>>>16,u=65535&(S+=(B+=(M+=65535&m)>>>16)>>>16)|(k+=S>>>16)<<16,_=65535&M|B<<16,M=65535&(m=v),B=m>>>16,S=65535&(x=a),k=x>>>16,B+=(m=U)>>>16,S+=65535&(x=A),k+=x>>>16,T=e,R=i,z=h,F=a=65535&(S+=(B+=(M+=65535&m)>>>16)>>>16)|(k+=S>>>16)<<16,P=f,j=s,C=c,L=u,O=y,I=l,Z=p,q=v=65535&M|B<<16,G=w,$=b,D=g,N=_,d%16==15)for(E=0;E<16;E++)x=K[E],M=65535&(m=Y[E]),B=m>>>16,S=65535&x,k=x>>>16,x=K[(E+9)%16],M+=65535&(m=Y[(E+9)%16]),B+=m>>>16,S+=65535&x,k+=x>>>16,A=K[(E+1)%16],M+=65535&(m=((U=Y[(E+1)%16])>>>1|A<<31)^(U>>>8|A<<24)^(U>>>7|A<<25)),B+=m>>>16,S+=65535&(x=(A>>>1|U<<31)^(A>>>8|U<<24)^A>>>7),k+=x>>>16,A=K[(E+14)%16],B+=(m=((U=Y[(E+14)%16])>>>19|A<<13)^(A>>>29|U<<3)^(U>>>6|A<<26))>>>16,S+=65535&(x=(A>>>19|U<<13)^(U>>>29|A<<3)^A>>>6),k+=x>>>16,k+=(S+=(B+=(M+=65535&m)>>>16)>>>16)>>>16,K[E]=65535&S|k<<16,Y[E]=65535&M|B<<16;M=65535&(m=N),B=m>>>16,S=65535&(x=L),k=x>>>16,x=r[0],B+=(m=t[0])>>>16,S+=65535&x,k+=x>>>16,k+=(S+=(B+=(M+=65535&m)>>>16)>>>16)>>>16,r[0]=L=65535&S|k<<16,t[0]=N=65535&M|B<<16,M=65535&(m=O),B=m>>>16,S=65535&(x=T),k=x>>>16,x=r[1],B+=(m=t[1])>>>16,S+=65535&x,k+=x>>>16,k+=(S+=(B+=(M+=65535&m)>>>16)>>>16)>>>16,r[1]=T=65535&S|k<<16,t[1]=O=65535&M|B<<16,M=65535&(m=I),B=m>>>16,S=65535&(x=R),k=x>>>16,x=r[2],B+=(m=t[2])>>>16,S+=65535&x,k+=x>>>16,k+=(S+=(B+=(M+=65535&m)>>>16)>>>16)>>>16,r[2]=R=65535&S|k<<16,t[2]=I=65535&M|B<<16,M=65535&(m=Z),B=m>>>16,S=65535&(x=z),k=x>>>16,x=r[3],B+=(m=t[3])>>>16,S+=65535&x,k+=x>>>16,k+=(S+=(B+=(M+=65535&m)>>>16)>>>16)>>>16,r[3]=z=65535&S|k<<16,t[3]=Z=65535&M|B<<16,M=65535&(m=q),B=m>>>16,S=65535&(x=F),k=x>>>16,x=r[4],B+=(m=t[4])>>>16,S+=65535&x,k+=x>>>16,k+=(S+=(B+=(M+=65535&m)>>>16)>>>16)>>>16,r[4]=F=65535&S|k<<16,t[4]=q=65535&M|B<<16,M=65535&(m=G),B=m>>>16,S=65535&(x=P),k=x>>>16,x=r[5],B+=(m=t[5])>>>16,S+=65535&x,k+=x>>>16,k+=(S+=(B+=(M+=65535&m)>>>16)>>>16)>>>16,r[5]=P=65535&S|k<<16,t[5]=G=65535&M|B<<16,M=65535&(m=$),B=m>>>16,S=65535&(x=j),k=x>>>16,x=r[6],B+=(m=t[6])>>>16,S+=65535&x,k+=x>>>16,k+=(S+=(B+=(M+=65535&m)>>>16)>>>16)>>>16,r[6]=j=65535&S|k<<16,t[6]=$=65535&M|B<<16,M=65535&(m=D),B=m>>>16,S=65535&(x=C),k=x>>>16,x=r[7],B+=(m=t[7])>>>16,S+=65535&x,k+=x>>>16,k+=(S+=(B+=(M+=65535&m)>>>16)>>>16)>>>16,r[7]=C=65535&S|k<<16,t[7]=D=65535&M|B<<16,V+=128,o-=128;}return o}function X(r,t,n){var o,e=new Int32Array(8),i=new Int32Array(8),h=new Uint8Array(256),a=n;for(e[0]=1779033703,e[1]=3144134277,e[2]=1013904242,e[3]=2773480762,e[4]=1359893119,e[5]=2600822924,e[6]=528734635,e[7]=1541459225,i[0]=4089235720,i[1]=2227873595,i[2]=4271175723,i[3]=1595750129,i[4]=2917565137,i[5]=725511199,i[6]=4215389547,i[7]=327033209,V(e,i,t,n),n%=128,o=0;o<n;o++)h[o]=t[a-n+o];for(h[n]=128,h[(n=256-128*(n<112?1:0))-9]=0,l(h,n-8,a/536870912|0,a<<3),V(e,i,h,n),o=0;o<8;o++)l(r,8*o,e[o],i[o]);return 0}function J(r,n){var o=t(),e=t(),i=t(),h=t(),a=t(),f=t(),c=t(),u=t(),y=t();P(o,r[1],r[0]),P(y,n[1],n[0]),j(o,o,y),F(e,r[0],r[1]),F(y,n[0],n[1]),j(e,e,y),j(i,r[3],n[3]),j(i,i,s),j(h,r[2],n[2]),F(h,h,h),P(a,e,o),P(f,h,i),F(c,h,i),F(u,e,o),j(r[0],a,f),j(r[1],u,c),j(r[2],c,f),j(r[3],a,u);}function Q(r,t,n){var o;for(o=0;o<4;o++)Y(r[o],t[o],n);}function W(r,n){var o=t(),e=t(),i=t();N(i,n[2]),j(o,n[0],i),j(e,n[1],i),L(r,e),r[31]^=R(o)<<7;}function rr(r,t,n){var o,e;for(k(r[0],i),k(r[1],h),k(r[2],h),k(r[3],i),e=255;e>=0;--e)Q(r,t,o=n[e/8|0]>>(7&e)&1),J(t,r),J(r,r),Q(r,t,o);}function tr(r,n){var o=[t(),t(),t(),t()];k(o[0],c),k(o[1],u),k(o[2],h),j(o[3],c,u),rr(r,o,n);}function nr(r,o,e){var i,h=new Uint8Array(64),a=[t(),t(),t(),t()];for(e||n(o,32),X(h,o,32),h[0]&=248,h[31]&=127,h[31]|=64,tr(a,h),W(r,a),i=0;i<32;i++)o[i+32]=r[i];return 0}var or=new Float64Array([237,211,245,92,26,99,18,88,214,156,247,162,222,249,222,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16]);function er(r,t){var n,o,e,i;for(o=63;o>=32;--o){for(n=0,e=o-32,i=o-12;e<i;++e)t[e]+=n-16*t[o]*or[e-(o-32)],n=Math.floor((t[e]+128)/256),t[e]-=256*n;t[e]+=n,t[o]=0;}for(n=0,e=0;e<32;e++)t[e]+=n-(t[31]>>4)*or[e],n=t[e]>>8,t[e]&=255;for(e=0;e<32;e++)t[e]-=n*or[e];for(o=0;o<32;o++)t[o+1]+=t[o]>>8,r[o]=255&t[o];}function ir(r){var t,n=new Float64Array(64);for(t=0;t<64;t++)n[t]=r[t];for(t=0;t<64;t++)r[t]=0;er(r,n);}function hr(r,n,o,e){var i,h,a=new Uint8Array(64),f=new Uint8Array(64),s=new Uint8Array(64),c=new Float64Array(64),u=[t(),t(),t(),t()];X(a,e,32),a[0]&=248,a[31]&=127,a[31]|=64;var y=o+64;for(i=0;i<o;i++)r[64+i]=n[i];for(i=0;i<32;i++)r[32+i]=a[32+i];for(X(s,r.subarray(32),o+32),ir(s),tr(u,s),W(r,u),i=32;i<64;i++)r[i]=e[i];for(X(f,r,o+64),ir(f),i=0;i<64;i++)c[i]=0;for(i=0;i<32;i++)c[i]=s[i];for(i=0;i<32;i++)for(h=0;h<32;h++)c[i+h]+=f[i]*a[h];return er(r.subarray(32),c),y}function ar(r,n,o,e){var a,s=new Uint8Array(32),c=new Uint8Array(64),u=[t(),t(),t(),t()],l=[t(),t(),t(),t()];if(o<64)return -1;if(function(r,n){var o=t(),e=t(),a=t(),s=t(),c=t(),u=t(),l=t();return k(r[2],h),z(r[1],n),C(a,r[1]),j(s,a,f),P(a,a,r[2]),F(s,r[2],s),C(c,s),C(u,c),j(l,u,c),j(o,l,a),j(o,o,s),O(o,o),j(o,o,a),j(o,o,s),j(o,o,s),j(r[0],o,s),C(e,r[0]),j(e,e,s),T(e,a)&&j(r[0],r[0],y),C(e,r[0]),j(e,e,s),T(e,a)?-1:(R(r[0])===n[31]>>7&&P(r[0],i,r[0]),j(r[3],r[0],r[1]),0)}(l,e))return -1;for(a=0;a<o;a++)r[a]=n[a];for(a=0;a<32;a++)r[a+32]=e[a];if(X(c,r,o),ir(c),rr(u,l,c),tr(l,n.subarray(32)),J(u,l),W(s,u),o-=64,w(n,0,s,0)){for(a=0;a<o;a++)r[a]=0;return -1}for(a=0;a<o;a++)r[a]=n[a+64];return o}var fr=32,sr=24,cr=16,ur=32,yr=32,lr=sr,pr=64,vr=32,wr=64;function br(r,t){if(r.length!==fr)throw new Error("bad key size");if(t.length!==sr)throw new Error("bad nonce size")}function gr(){for(var r=0;r<arguments.length;r++)if(!(arguments[r]instanceof Uint8Array))throw new TypeError("unexpected type, use Uint8Array")}function _r(r){for(var t=0;t<r.length;t++)r[t]=0;}r.lowlevel={crypto_core_hsalsa20:g,crypto_stream_xor:E,crypto_stream:d,crypto_stream_salsa20_xor:A,crypto_stream_salsa20:U,crypto_onetimeauth:m,crypto_onetimeauth_verify:M,crypto_verify_16:v,crypto_verify_32:w,crypto_secretbox:B,crypto_secretbox_open:S,crypto_scalarmult:I,crypto_scalarmult_base:Z,crypto_box_beforenm:G,crypto_box_afternm:$,crypto_box:function(r,t,n,o,e,i){var h=new Uint8Array(32);return G(h,e,i),$(r,t,n,o,h)},crypto_box_open:function(r,t,n,o,e,i){var h=new Uint8Array(32);return G(h,e,i),D(r,t,n,o,h)},crypto_box_keypair:q,crypto_hash:X,crypto_sign:hr,crypto_sign_keypair:nr,crypto_sign_open:ar,crypto_secretbox_KEYBYTES:fr,crypto_secretbox_NONCEBYTES:sr,crypto_secretbox_ZEROBYTES:32,crypto_secretbox_BOXZEROBYTES:cr,crypto_scalarmult_BYTES:32,crypto_scalarmult_SCALARBYTES:32,crypto_box_PUBLICKEYBYTES:ur,crypto_box_SECRETKEYBYTES:yr,crypto_box_BEFORENMBYTES:32,crypto_box_NONCEBYTES:lr,crypto_box_ZEROBYTES:32,crypto_box_BOXZEROBYTES:16,crypto_sign_BYTES:pr,crypto_sign_PUBLICKEYBYTES:vr,crypto_sign_SECRETKEYBYTES:wr,crypto_sign_SEEDBYTES:32,crypto_hash_BYTES:64,gf:t,D:f,L:or,pack25519:L,unpack25519:z,M:j,A:F,S:C,Z:P,pow2523:O,add:J,set25519:k,modL:er,scalarmult:rr,scalarbase:tr},r.randomBytes=function(r){var t=new Uint8Array(r);return n(t,r),t},r.secretbox=function(r,t,n){gr(r,t,n),br(n,t);for(var o=new Uint8Array(32+r.length),e=new Uint8Array(o.length),i=0;i<r.length;i++)o[i+32]=r[i];return B(e,o,o.length,t,n),e.subarray(cr)},r.secretbox.open=function(r,t,n){gr(r,t,n),br(n,t);for(var o=new Uint8Array(cr+r.length),e=new Uint8Array(o.length),i=0;i<r.length;i++)o[i+cr]=r[i];return o.length<32||0!==S(e,o,o.length,t,n)?null:e.subarray(32)},r.secretbox.keyLength=fr,r.secretbox.nonceLength=sr,r.secretbox.overheadLength=cr,r.scalarMult=function(r,t){if(gr(r,t),32!==r.length)throw new Error("bad n size");if(32!==t.length)throw new Error("bad p size");var n=new Uint8Array(32);return I(n,r,t),n},r.scalarMult.base=function(r){if(gr(r),32!==r.length)throw new Error("bad n size");var t=new Uint8Array(32);return Z(t,r),t},r.scalarMult.scalarLength=32,r.scalarMult.groupElementLength=32,r.box=function(t,n,o,e){var i=r.box.before(o,e);return r.secretbox(t,n,i)},r.box.before=function(r,t){gr(r,t),function(r,t){if(r.length!==ur)throw new Error("bad public key size");if(t.length!==yr)throw new Error("bad secret key size")}(r,t);var n=new Uint8Array(32);return G(n,r,t),n},r.box.after=r.secretbox,r.box.open=function(t,n,o,e){var i=r.box.before(o,e);return r.secretbox.open(t,n,i)},r.box.open.after=r.secretbox.open,r.box.keyPair=function(){var r=new Uint8Array(ur),t=new Uint8Array(yr);return q(r,t),{publicKey:r,secretKey:t}},r.box.keyPair.fromSecretKey=function(r){if(gr(r),r.length!==yr)throw new Error("bad secret key size");var t=new Uint8Array(ur);return Z(t,r),{publicKey:t,secretKey:new Uint8Array(r)}},r.box.publicKeyLength=ur,r.box.secretKeyLength=yr,r.box.sharedKeyLength=32,r.box.nonceLength=lr,r.box.overheadLength=r.secretbox.overheadLength,r.sign=function(r,t){if(gr(r,t),t.length!==wr)throw new Error("bad secret key size");var n=new Uint8Array(pr+r.length);return hr(n,r,r.length,t),n},r.sign.open=function(r,t){if(gr(r,t),t.length!==vr)throw new Error("bad public key size");var n=new Uint8Array(r.length),o=ar(n,r,r.length,t);if(o<0)return null;for(var e=new Uint8Array(o),i=0;i<e.length;i++)e[i]=n[i];return e},r.sign.detached=function(t,n){for(var o=r.sign(t,n),e=new Uint8Array(pr),i=0;i<e.length;i++)e[i]=o[i];return e},r.sign.detached.verify=function(r,t,n){if(gr(r,t,n),t.length!==pr)throw new Error("bad signature size");if(n.length!==vr)throw new Error("bad public key size");var o,e=new Uint8Array(pr+r.length),i=new Uint8Array(pr+r.length);for(o=0;o<pr;o++)e[o]=t[o];for(o=0;o<r.length;o++)e[o+pr]=r[o];return ar(i,e,e.length,n)>=0},r.sign.keyPair=function(){var r=new Uint8Array(vr),t=new Uint8Array(wr);return nr(r,t),{publicKey:r,secretKey:t}},r.sign.keyPair.fromSecretKey=function(r){if(gr(r),r.length!==wr)throw new Error("bad secret key size");for(var t=new Uint8Array(vr),n=0;n<t.length;n++)t[n]=r[32+n];return {publicKey:t,secretKey:new Uint8Array(r)}},r.sign.keyPair.fromSeed=function(r){if(gr(r),32!==r.length)throw new Error("bad seed size");for(var t=new Uint8Array(vr),n=new Uint8Array(wr),o=0;o<32;o++)n[o]=r[o];return nr(t,n,!0),{publicKey:t,secretKey:n}},r.sign.publicKeyLength=vr,r.sign.secretKeyLength=wr,r.sign.seedLength=32,r.sign.signatureLength=pr,r.hash=function(r){gr(r);var t=new Uint8Array(64);return X(t,r,r.length),t},r.hash.hashLength=64,r.verify=function(r,t){return gr(r,t),0!==r.length&&0!==t.length&&(r.length===t.length&&0===p(r,0,t,0,r.length))},r.setPRNG=function(r){n=r;},function(){var t="undefined"!=typeof self?self.crypto||self.msCrypto:null;if(t&&t.getRandomValues){r.setPRNG((function(r,n){var o,e=new Uint8Array(n);for(o=0;o<n;o+=65536)t.getRandomValues(e.subarray(o,o+Math.min(n-o,65536)));for(o=0;o<n;o++)r[o]=e[o];_r(e);}));}else void 0!==commonjsRequire&&(t=require$$0)&&t.randomBytes&&r.setPRNG((function(r,n){var o,e=t.randomBytes(n);for(o=0;o<n;o++)r[o]=e[o];_r(e);}));}();}(r.exports?r.exports:self.nacl=self.nacl||{});}(naclFast);var nacl = naclFast.exports;

	!function(r){!function(o,e){r.exports?r.exports=e(naclFast.exports):o.ed2curve=e(o.nacl);}(commonjsGlobal,(function(r){if(!r)throw new Error("tweetnacl not loaded");var o=function(r){var o,e=new Float64Array(16);if(r)for(o=0;o<r.length;o++)e[o]=r[o];return e},e=o(),n=o([1]),t=o([30883,4953,19914,30187,55467,16705,2637,112,59544,30585,16505,36039,65139,11119,27886,20995]),u=o([41136,18958,6951,50414,58488,44335,6150,12099,55207,15867,153,11085,57099,20417,9344,11139]);function f(r){var o,e;for(e=0;e<16;e++)r[e]+=65536,o=Math.floor(r[e]/65536),r[(e+1)*(e<15?1:0)]+=o-1+37*(o-1)*(15===e?1:0),r[e]-=65536*o;}function c(r,o,e){for(var n,t=~(e-1),u=0;u<16;u++)n=t&(r[u]^o[u]),r[u]^=n,o[u]^=n;}function a(r,o,e){var n;for(n=0;n<16;n++)r[n]=o[n]+e[n]|0;}function i(r,o,e){var n;for(n=0;n<16;n++)r[n]=o[n]-e[n]|0;}function v(r,o,e){var n,t,u=new Float64Array(31);for(n=0;n<31;n++)u[n]=0;for(n=0;n<16;n++)for(t=0;t<16;t++)u[n+t]+=o[n]*e[t];for(n=0;n<15;n++)u[n]+=38*u[n+16];for(n=0;n<16;n++)r[n]=u[n];f(r),f(r);}function l(r,o){v(r,o,o);}function s(r,e){var n,t,u,a=o(),i=o();for(n=0;n<16;n++)i[n]=e[n];for(f(i),f(i),f(i),t=0;t<2;t++){for(a[0]=i[0]-65517,n=1;n<15;n++)a[n]=i[n]-65535-(a[n-1]>>16&1),a[n-1]&=65535;a[15]=i[15]-32767-(a[14]>>16&1),u=a[15]>>16&1,a[14]&=65535,c(i,a,1-u);}for(n=0;n<16;n++)r[2*n]=255&i[n],r[2*n+1]=i[n]>>8;}function m(r,o){var e=new Uint8Array(32),n=new Uint8Array(32);return s(e,r),s(n,o),function(r,o,e,n,t){var u,f=0;for(u=0;u<t;u++)f|=r[o+u]^e[n+u];return (1&f-1>>>8)-1}(e,0,n,0,32)}function d(r,f){var c,d,p=o(),y=o(),w=o(),j=o(),A=o(),x=o(),K=o();return function(r,o){var e;for(e=0;e<16;e++)r[e]=0|o[e];}(r[2],n),function(r,o){var e;for(e=0;e<16;e++)r[e]=o[2*e]+(o[2*e+1]<<8);r[15]&=32767;}(r[1],f),l(w,r[1]),v(j,w,t),i(w,w,r[2]),a(j,r[2],j),l(A,j),l(x,A),v(K,x,A),v(p,K,w),v(p,p,j),function(r,e){var n,t=o();for(n=0;n<16;n++)t[n]=e[n];for(n=250;n>=0;n--)l(t,t),1!==n&&v(t,t,e);for(n=0;n<16;n++)r[n]=t[n];}(p,p),v(p,p,w),v(p,p,j),v(p,p,j),v(r[0],p,j),l(y,r[0]),v(y,y,j),m(y,w)&&v(r[0],r[0],u),l(y,r[0]),v(y,y,j),m(y,w)?-1:(c=r[0],s(d=new Uint8Array(32),c),(1&d[0])==f[31]>>7&&i(r[0],e,r[0]),v(r[3],r[0],r[1]),0)}function p(r){var e=new Uint8Array(32),t=[o(),o(),o(),o()],u=o(),f=o();if(d(t,r))return null;var c=t[1];return a(u,n,c),i(f,n,c),function(r,e){var n,t=o();for(n=0;n<16;n++)t[n]=e[n];for(n=253;n>=0;n--)l(t,t),2!==n&&4!==n&&v(t,t,e);for(n=0;n<16;n++)r[n]=t[n];}(f,f),v(u,u,f),s(e,u),e}function y(o){var e,n=new Uint8Array(64),t=new Uint8Array(32);for(r.lowlevel.crypto_hash(n,o,32),n[0]&=248,n[31]&=127,n[31]|=64,e=0;e<32;e++)t[e]=n[e];for(e=0;e<64;e++)n[e]=0;return t}return {convertPublicKey:p,convertSecretKey:y,convertKeyPair:function(r){var o=p(r.publicKey);return o?{publicKey:o,secretKey:y(r.secretKey)}:null}}}));}(ed2curve$1);var ed2curve = ed2curve$1.exports;

	function convertSecretKeyToCurve25519(e){return ed2curve.convertSecretKey(e)}function convertPublicKeyToCurve25519(e){return assertReturn(ed2curve.convertPublicKey(e),"Unable to convert publicKey to ed25519")}

	const HDKD=compactAddLength(stringToU8a("Ed25519HDKD"));function ed25519DeriveHard(a,o){if(!isU8a(o)||32!==o.length)throw new Error("Invalid chainCode passed to derive");return blake2AsU8a(u8aConcat(HDKD,a,o))}

	function randomAsU8a(e=32){return getRandomValues(new Uint8Array(e))}

	function ed25519PairFromSeed(e,r){if(!r&&isReady()){const r=ed25519KeypairFromSeed(e);return {publicKey:r.slice(32),secretKey:r.slice(0,64)}}return nacl.sign.keyPair.fromSeed(e)}

	function ed25519Sign(a,{publicKey:e,secretKey:o},r){if(!o)throw new Error("Expected a valid secretKey");const t=u8aToU8a(a);return !r&&isReady()?ed25519Sign$1(e,o.subarray(0,32),t):nacl.sign.detached(t,o)}

	function ed25519Verify(e,r,t,a){const o=u8aToU8a(e),i=u8aToU8a(t),n=u8aToU8a(r);if(32!==i.length)throw new Error(`Invalid publicKey, received ${i.length}, expected 32`);if(64!==n.length)throw new Error(`Invalid signature, received ${n.length} bytes, expected 64`);return !a&&isReady()?ed25519Verify$1(n,o,i):nacl.sign.detached.verify(o,n,i)}

	const keyHdkdEd25519=createSeedDeriveFn(ed25519PairFromSeed,ed25519DeriveHard);

	function sr25519PairFromU8a(e){const t=u8aToU8a(e);if(96!==t.length)throw new Error(`Expected keypair with 96 bytes, found ${t.length}`);return {publicKey:t.slice(64,96),secretKey:t.slice(0,64)}}

	function sr25519KeypairToU8a({publicKey:o,secretKey:t}){return u8aConcat(t,o).slice()}

	function createDeriveFn(r){return (o,a)=>{if(!isU8a(a)||32!==a.length)throw new Error("Invalid chainCode passed to derive");return sr25519PairFromU8a(r(sr25519KeypairToU8a(o),a))}}

	const sr25519DeriveHard=createDeriveFn(sr25519DeriveKeypairHard);

	const sr25519DeriveSoft=createDeriveFn(sr25519DeriveKeypairSoft);

	function keyHdkdSr25519(r,{chainCode:e,isSoft:i}){return i?sr25519DeriveSoft(r,e):sr25519DeriveHard(r,e)}

	const generators={ecdsa:keyHdkdEcdsa,ed25519:keyHdkdEd25519,ethereum:keyHdkdEcdsa,sr25519:keyHdkdSr25519};function keyFromPath(d,e,r){const k=generators[r];let o=d;for(const d of e)o=k(o,d);return o}

	function sr25519PairFromSeed(r){const o=u8aToU8a(r);if(32!==o.length)throw new Error(`Expected a seed matching 32 bytes, found ${o.length}`);return sr25519PairFromU8a(sr25519KeypairFromSeed(o))}

	function sr25519Sign(e,{publicKey:r,secretKey:t}){if(32!==r?.length)throw new Error("Expected a valid publicKey, 32-bytes");if(64!==t?.length)throw new Error("Expected a valid secretKey, 64-bytes");return sr25519Sign$1(r,t,u8aToU8a(e))}

	function sr25519Verify(e,r,t){const o=u8aToU8a(t),a=u8aToU8a(r);if(32!==o.length)throw new Error(`Invalid publicKey, received ${o.length} bytes, expected 32`);if(64!==a.length)throw new Error(`Invalid signature, received ${a.length} bytes, expected 64`);return sr25519Verify$1(a,u8aToU8a(e),o)}

	const EMPTY_U8A$2=new Uint8Array;function sr25519VrfSign(r,{secretKey:o},t=EMPTY_U8A$2,e=EMPTY_U8A$2){if(64!==o?.length)throw new Error("Invalid secretKey, expected 64-bytes");return vrfSign(o,u8aToU8a(t),u8aToU8a(r),u8aToU8a(e))}

	const EMPTY_U8A$1=new Uint8Array;function sr25519VrfVerify(r,o,t,e=EMPTY_U8A$1,a=EMPTY_U8A$1){const i=u8aToU8a(t),n=u8aToU8a(o);if(32!==i.length)throw new Error("Invalid publicKey, expected 32-bytes");if(96!==n.length)throw new Error("Invalid vrfSign output, expected 96 bytes");return vrfVerify(i,u8aToU8a(e),u8aToU8a(r),u8aToU8a(a),n)}

	function encodeAddress(e,o=defaults$1.prefix){const s=decodeAddress(e);if(o<0||o>16383||[46,47].includes(o))throw new Error("Out of range ss58Format specified");if(!defaults$1.allowedDecodedLengths.includes(s.length))throw new Error(`Expected a valid key to convert, with length ${defaults$1.allowedDecodedLengths.join(", ")}`);const d=u8aConcat(o<64?[o]:[(252&o)>>2|64,o>>8|(3&o)<<6],s);return base58Encode(u8aConcat(d,sshash(d).subarray(0,[32,33].includes(s.length)?2:1)))}

	const[SHA3_PI,SHA3_ROTL,_SHA3_IOTA]=[[],[],[]],_0n=BigInt(0),_1n=BigInt(1),_2n=BigInt(2),_7n$1=BigInt(7),_256n$1=BigInt(256),_0x71n=BigInt(113);for(let t=0,s=_1n,e=1,o=0;t<24;t++){[e,o]=[o,(2*e+3*o)%5],SHA3_PI.push(2*(5*o+e)),SHA3_ROTL.push((t+1)*(t+2)/2%64);let n=_0n;for(let r=0;r<7;r++)s=(s<<_1n^(s>>_7n$1)*_0x71n)%_256n$1,s&_2n&&(n^=_1n<<(_1n<<BigInt(r))-_1n);_SHA3_IOTA.push(n);}const[SHA3_IOTA_H,SHA3_IOTA_L]=u64$1.split(_SHA3_IOTA,!0),rotlH=(t,s,e)=>e>32?u64$1.rotlBH(t,s,e):u64$1.rotlSH(t,s,e),rotlL=(t,s,e)=>e>32?u64$1.rotlBL(t,s,e):u64$1.rotlSL(t,s,e);function keccakP(t,s=24){const e=new Uint32Array(10);for(let o=24-s;o<24;o++){for(let s=0;s<10;s++)e[s]=t[s]^t[s+10]^t[s+20]^t[s+30]^t[s+40];for(let s=0;s<10;s+=2){const o=(s+8)%10,n=(s+2)%10,r=e[n],i=e[n+1],h=rotlH(r,i,1)^e[o],c=rotlL(r,i,1)^e[o+1];for(let e=0;e<50;e+=10)t[s+e]^=h,t[s+e+1]^=c;}let s=t[2],n=t[3];for(let e=0;e<24;e++){const o=SHA3_ROTL[e],r=rotlH(s,n,o),i=rotlL(s,n,o),h=SHA3_PI[e];s=t[h],n=t[h+1],t[h]=r,t[h+1]=i;}for(let s=0;s<50;s+=10){for(let o=0;o<10;o++)e[o]=t[s+o];for(let o=0;o<10;o++)t[s+o]^=~e[(o+2)%10]&e[(o+4)%10];}t[0]^=SHA3_IOTA_H[o],t[1]^=SHA3_IOTA_L[o];}e.fill(0);}class Keccak extends Hash{constructor(t,s,e,o=!1,n=24){if(super(),this.blockLen=t,this.suffix=s,this.outputLen=e,this.enableXOF=o,this.rounds=n,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,assert.number(e),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=u32$2(this.state);}keccak(){keccakP(this.state32,this.rounds),this.posOut=0,this.pos=0;}update(t){assert.exists(this);const{blockLen:s,state:e}=this,o=(t=toBytes(t)).length;for(let n=0;n<o;){const r=Math.min(s-this.pos,o-n);for(let s=0;s<r;s++)e[this.pos++]^=t[n++];this.pos===s&&this.keccak();}return this}finish(){if(this.finished)return;this.finished=!0;const{state:t,suffix:s,pos:e,blockLen:o}=this;t[e]^=s,0!=(128&s)&&e===o-1&&this.keccak(),t[o-1]^=128,this.keccak();}writeInto(t){assert.exists(this,!1),assert.bytes(t),this.finish();const s=this.state,{blockLen:e}=this;for(let o=0,n=t.length;o<n;){this.posOut>=e&&this.keccak();const r=Math.min(e-this.posOut,n-o);t.set(s.subarray(this.posOut,this.posOut+r),o),this.posOut+=r,o+=r;}return t}xofInto(t){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(t)}xof(t){return assert.number(t),this.xofInto(new Uint8Array(t))}digestInto(t){if(assert.output(t,this),this.finished)throw new Error("digest() was already called");return this.writeInto(t),this.destroy(),t}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0);}_cloneInto(t){const{blockLen:s,suffix:e,outputLen:o,rounds:n,enableXOF:r}=this;return t||(t=new Keccak(s,e,o,r,n)),t.state32.set(this.state32),t.pos=this.pos,t.posOut=this.posOut,t.finished=this.finished,t.rounds=n,t.suffix=e,t.outputLen=o,t.enableXOF=r,t.destroyed=this.destroyed,t}}const gen=(t,s,e)=>wrapConstructor((()=>new Keccak(s,t,e)));gen(6,144,28);gen(6,136,32);gen(6,104,48);gen(6,72,64);gen(1,144,28);const keccak_256=gen(1,136,32);gen(1,104,48);const keccak_512=gen(1,72,64);const genShake=(t,s,e)=>wrapConstructorWithOpts(((o={})=>new Keccak(s,t,void 0===o.dkLen?e:o.dkLen,!0)));genShake(31,168,16);genShake(31,136,32);

	const keccakAsU8a=createDualHasher({256:keccak256,512:keccak512},{256:keccak_256,512:keccak_512});

	function hasher(a,e,k){return "keccak"===a?keccakAsU8a(e,void 0,k):blake2AsU8a(e,void 0,void 0,k)}

	const config$1={chars:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",coder:base64,type:"base64"};const base64Validate=createValidate(config$1);const base64Decode=createDecode(config$1,base64Validate);const base64Encode=createEncode(config$1);

	function secp256k1Compress(o,r){if(33===o.length)return o;if(65!==o.length)throw new Error("Invalid publicKey provided");return !hasBigInt||!r&&isReady()?secp256k1Compress$1(o):Point.fromHex(o).toRawBytes(!0)}

	function secp256k1Expand(o,r){if(65===o.length)return o.subarray(1);if(33!==o.length)throw new Error("Invalid publicKey provided");if(!hasBigInt||!r&&isReady())return secp256k1Expand$1(o).subarray(1);const{x:a,y:n}=Point.fromHex(o);return u8aConcat(bnToU8a(a,BN_BE_256_OPTS),bnToU8a(n,BN_BE_256_OPTS))}

	function secp256k1Recover(e,o,r,a="blake2",s){const p=u8aToU8a(o).subarray(0,64),t=u8aToU8a(e),c=!hasBigInt||!s&&isReady()?secp256k1Recover$1(t,p,r):recoverPublicKey(t,Signature.fromCompact(p).toRawBytes(),r);if(!c)throw new Error("Unable to recover publicKey from signature");return "keccak"===a?secp256k1Expand(c,s):secp256k1Compress(c,s)}

	function secp256k1Sign(r,{secretKey:e},o="blake2",n){if(32!==e?.length)throw new Error("Expected valid secp256k1 secretKey, 32-bytes");const t=hasher(o,r,n);if(!hasBigInt||!n&&isReady())return secp256k1Sign$1(t,e);const[a,s]=signSync(t,e,{canonical:!0,recovered:!0}),{r:i,s:c}=Signature.fromHex(a);return u8aConcat(bnToU8a(i,BN_BE_256_OPTS),bnToU8a(c,BN_BE_256_OPTS),new Uint8Array([s||0]))}

	const N="ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141".replace(/ /g,""),N_BI=BigInt$1(`0x${N}`),N_BN=new BN(N,"hex");function addBi(r,e){let t=u8aToBigInt(e,BN_BE_OPTS);if(t>=N_BI)throw new Error("Tweak parameter is out of range");if(t+=u8aToBigInt(r,BN_BE_OPTS),t>=N_BI&&(t-=N_BI),t===_0n$2)throw new Error("Invalid resulting private key");return nToU8a(t,BN_BE_256_OPTS)}function addBn(r,e){const t=new BN(e);if(t.cmp(N_BN)>=0)throw new Error("Tweak parameter is out of range");if(t.iadd(new BN(r)),t.cmp(N_BN)>=0&&t.isub(N_BN),t.isZero())throw new Error("Invalid resulting private key");return bnToU8a(t,BN_BE_256_OPTS)}function secp256k1PrivateKeyTweakAdd(r,e,t){if(!isU8a(r)||32!==r.length)throw new Error("Expected seckey to be an Uint8Array with length 32");if(!isU8a(e)||32!==e.length)throw new Error("Expected tweak to be an Uint8Array with length 32");return !hasBigInt||t?addBn(r,e):addBi(r,e)}

	function secp256k1Verify(e,r,o,a="blake2",t){const s=u8aToU8a(r);if(65!==s.length)throw new Error(`Expected signature with 65 bytes, ${s.length} found instead`);const c=secp256k1Recover(hasher(a,e),s,s[64],a,t),h=hasher(a,c,t),i=u8aToU8a(o);return u8aEq(c,i)||("keccak"===a?u8aEq(h.slice(-20),i.slice(-20)):u8aEq(h,i))}

	function getH160(e){return [33,65].includes(e.length)&&(e=keccakAsU8a(secp256k1Expand(e))),e.slice(-20)}function ethereumEncode(e){if(!e)return "0x";const o=u8aToU8a(e);if(![20,32,33,65].includes(o.length))throw new Error("Invalid address or publicKey passed");const r=u8aToHex(getH160(o),-1,!1),t=u8aToHex(keccakAsU8a(r),-1,!1);let a="";for(let e=0;e<40;e++)a=`${a}${parseInt(t[e],16)>7?r[e].toUpperCase():r[e]}`;return `0x${a}`}

	function isInvalidChar(e,r){return e!==(r>7?e.toUpperCase():e.toLowerCase())}function isEthereumChecksum(e){const r=e.replace("0x",""),o=u8aToHex(keccakAsU8a(r.toLowerCase()),-1,!1);for(let e=0;e<40;e++)if(isInvalidChar(r[e],parseInt(o[e],16)))return !1;return !0}

	function isEthereumAddress(e){return !(!e||42!==e.length||!isHex(e))&&(!(!/^(0x)?[0-9a-f]{40}$/.test(e)&&!/^(0x)?[0-9A-F]{40}$/.test(e))||isEthereumChecksum(e))}

	const HARDENED=2147483648;function hdValidatePath(t){if(!t.startsWith("m/"))return !1;const r=t.split("/").slice(1);for(const t of r){const r=/^\d+'?$/.test(t)?parseInt(t.replace(/'$/,""),10):Number.NaN;if(isNaN(r)||r>=HARDENED||r<0)return !1}return !0}

	const MASTER_SECRET=stringToU8a("Bitcoin seed");function createCoded(e,t){return {chainCode:t,publicKey:secp256k1PairFromSeed(e).publicKey,secretKey:e}}function deriveChild(e,t){const r=bnToU8a(t,BN_BE_32_OPTS),a=t>=HARDENED?u8aConcat(new Uint8Array(1),e.secretKey,r):u8aConcat(e.publicKey,r);try{const t=hmacShaAsU8a(e.chainCode,a,512);return createCoded(secp256k1PrivateKeyTweakAdd(e.secretKey,t.slice(0,32)),t.slice(32))}catch(r){return deriveChild(e,t+1)}}function hdEthereum(e,t=""){const r=hmacShaAsU8a(MASTER_SECRET,e,512);let a=createCoded(r.slice(0,32),r.slice(32));if(!t||"m"===t||"M"===t||"m'"===t||"M'"===t)return a;if(!hdValidatePath(t))throw new Error("Invalid derivation path");const i=t.split("/").slice(1);for(const e of i)a=deriveChild(a,parseInt(e,10)+(e.length>1&&e.endsWith("'")?HARDENED:0));return a}

	function pbkdf2Init(t,e,n,r){assert.hash(t);const o=checkOpts({dkLen:32,asyncTick:10},r),{c:s,dkLen:a,asyncTick:c}=o;if(assert.number(s),assert.number(a),assert.number(c),s<1)throw new Error("PBKDF2: iterations (c) should be >= 1");const u=toBytes(e),i=toBytes(n),p=new Uint8Array(a),d=hmac.create(t,u),l=d._cloneInto().update(i);return {c:s,dkLen:a,asyncTick:c,DK:p,PRF:d,PRFSalt:l}}function pbkdf2Output(t,e,n,r,o){return t.destroy(),e.destroy(),r&&r.destroy(),o.fill(0),n}function pbkdf2(t,e,n,r){const{c:o,dkLen:s,DK:a,PRF:c,PRFSalt:u}=pbkdf2Init(t,e,n,r);let i;const p=new Uint8Array(4),d=createView(p),l=new Uint8Array(c.outputLen);for(let t=1,e=0;e<s;t++,e+=c.outputLen){const n=a.subarray(e,e+c.outputLen);d.setInt32(0,t,!1),(i=u._cloneInto(i)).update(p).digestInto(l),n.set(l.subarray(0,n.length));for(let t=1;t<o;t++){c._cloneInto(i).update(l).digestInto(l);for(let t=0;t<n.length;t++)n[t]^=l[t];}}return pbkdf2Output(c,u,a,i,l)}

	function pbkdf2Encode(o,a=randomAsU8a(),s=2048,r){const d=u8aToU8a(o),p=u8aToU8a(a);return {password:!hasBigInt||!r&&isReady()?pbkdf2$1(d,p,s):pbkdf2(sha512$1,d,p,{c:s,dkLen:64}),rounds:s,salt:a}}

	const shaAsU8a=createDualHasher({256:sha256,512:sha512},{256:sha256$1,512:sha512$1});const sha256AsU8a=createBitHasher(256,shaAsU8a);

	var DEFAULT_WORDLIST = "abandon|ability|able|about|above|absent|absorb|abstract|absurd|abuse|access|accident|account|accuse|achieve|acid|acoustic|acquire|across|act|action|actor|actress|actual|adapt|add|addict|address|adjust|admit|adult|advance|advice|aerobic|affair|afford|afraid|again|age|agent|agree|ahead|aim|air|airport|aisle|alarm|album|alcohol|alert|alien|all|alley|allow|almost|alone|alpha|already|also|alter|always|amateur|amazing|among|amount|amused|analyst|anchor|ancient|anger|angle|angry|animal|ankle|announce|annual|another|answer|antenna|antique|anxiety|any|apart|apology|appear|apple|approve|april|arch|arctic|area|arena|argue|arm|armed|armor|army|around|arrange|arrest|arrive|arrow|art|artefact|artist|artwork|ask|aspect|assault|asset|assist|assume|asthma|athlete|atom|attack|attend|attitude|attract|auction|audit|august|aunt|author|auto|autumn|average|avocado|avoid|awake|aware|away|awesome|awful|awkward|axis|baby|bachelor|bacon|badge|bag|balance|balcony|ball|bamboo|banana|banner|bar|barely|bargain|barrel|base|basic|basket|battle|beach|bean|beauty|because|become|beef|before|begin|behave|behind|believe|below|belt|bench|benefit|best|betray|better|between|beyond|bicycle|bid|bike|bind|biology|bird|birth|bitter|black|blade|blame|blanket|blast|bleak|bless|blind|blood|blossom|blouse|blue|blur|blush|board|boat|body|boil|bomb|bone|bonus|book|boost|border|boring|borrow|boss|bottom|bounce|box|boy|bracket|brain|brand|brass|brave|bread|breeze|brick|bridge|brief|bright|bring|brisk|broccoli|broken|bronze|broom|brother|brown|brush|bubble|buddy|budget|buffalo|build|bulb|bulk|bullet|bundle|bunker|burden|burger|burst|bus|business|busy|butter|buyer|buzz|cabbage|cabin|cable|cactus|cage|cake|call|calm|camera|camp|can|canal|cancel|candy|cannon|canoe|canvas|canyon|capable|capital|captain|car|carbon|card|cargo|carpet|carry|cart|case|cash|casino|castle|casual|cat|catalog|catch|category|cattle|caught|cause|caution|cave|ceiling|celery|cement|census|century|cereal|certain|chair|chalk|champion|change|chaos|chapter|charge|chase|chat|cheap|check|cheese|chef|cherry|chest|chicken|chief|child|chimney|choice|choose|chronic|chuckle|chunk|churn|cigar|cinnamon|circle|citizen|city|civil|claim|clap|clarify|claw|clay|clean|clerk|clever|click|client|cliff|climb|clinic|clip|clock|clog|close|cloth|cloud|clown|club|clump|cluster|clutch|coach|coast|coconut|code|coffee|coil|coin|collect|color|column|combine|come|comfort|comic|common|company|concert|conduct|confirm|congress|connect|consider|control|convince|cook|cool|copper|copy|coral|core|corn|correct|cost|cotton|couch|country|couple|course|cousin|cover|coyote|crack|cradle|craft|cram|crane|crash|crater|crawl|crazy|cream|credit|creek|crew|cricket|crime|crisp|critic|crop|cross|crouch|crowd|crucial|cruel|cruise|crumble|crunch|crush|cry|crystal|cube|culture|cup|cupboard|curious|current|curtain|curve|cushion|custom|cute|cycle|dad|damage|damp|dance|danger|daring|dash|daughter|dawn|day|deal|debate|debris|decade|december|decide|decline|decorate|decrease|deer|defense|define|defy|degree|delay|deliver|demand|demise|denial|dentist|deny|depart|depend|deposit|depth|deputy|derive|describe|desert|design|desk|despair|destroy|detail|detect|develop|device|devote|diagram|dial|diamond|diary|dice|diesel|diet|differ|digital|dignity|dilemma|dinner|dinosaur|direct|dirt|disagree|discover|disease|dish|dismiss|disorder|display|distance|divert|divide|divorce|dizzy|doctor|document|dog|doll|dolphin|domain|donate|donkey|donor|door|dose|double|dove|draft|dragon|drama|drastic|draw|dream|dress|drift|drill|drink|drip|drive|drop|drum|dry|duck|dumb|dune|during|dust|dutch|duty|dwarf|dynamic|eager|eagle|early|earn|earth|easily|east|easy|echo|ecology|economy|edge|edit|educate|effort|egg|eight|either|elbow|elder|electric|elegant|element|elephant|elevator|elite|else|embark|embody|embrace|emerge|emotion|employ|empower|empty|enable|enact|end|endless|endorse|enemy|energy|enforce|engage|engine|enhance|enjoy|enlist|enough|enrich|enroll|ensure|enter|entire|entry|envelope|episode|equal|equip|era|erase|erode|erosion|error|erupt|escape|essay|essence|estate|eternal|ethics|evidence|evil|evoke|evolve|exact|example|excess|exchange|excite|exclude|excuse|execute|exercise|exhaust|exhibit|exile|exist|exit|exotic|expand|expect|expire|explain|expose|express|extend|extra|eye|eyebrow|fabric|face|faculty|fade|faint|faith|fall|false|fame|family|famous|fan|fancy|fantasy|farm|fashion|fat|fatal|father|fatigue|fault|favorite|feature|february|federal|fee|feed|feel|female|fence|festival|fetch|fever|few|fiber|fiction|field|figure|file|film|filter|final|find|fine|finger|finish|fire|firm|first|fiscal|fish|fit|fitness|fix|flag|flame|flash|flat|flavor|flee|flight|flip|float|flock|floor|flower|fluid|flush|fly|foam|focus|fog|foil|fold|follow|food|foot|force|forest|forget|fork|fortune|forum|forward|fossil|foster|found|fox|fragile|frame|frequent|fresh|friend|fringe|frog|front|frost|frown|frozen|fruit|fuel|fun|funny|furnace|fury|future|gadget|gain|galaxy|gallery|game|gap|garage|garbage|garden|garlic|garment|gas|gasp|gate|gather|gauge|gaze|general|genius|genre|gentle|genuine|gesture|ghost|giant|gift|giggle|ginger|giraffe|girl|give|glad|glance|glare|glass|glide|glimpse|globe|gloom|glory|glove|glow|glue|goat|goddess|gold|good|goose|gorilla|gospel|gossip|govern|gown|grab|grace|grain|grant|grape|grass|gravity|great|green|grid|grief|grit|grocery|group|grow|grunt|guard|guess|guide|guilt|guitar|gun|gym|habit|hair|half|hammer|hamster|hand|happy|harbor|hard|harsh|harvest|hat|have|hawk|hazard|head|health|heart|heavy|hedgehog|height|hello|helmet|help|hen|hero|hidden|high|hill|hint|hip|hire|history|hobby|hockey|hold|hole|holiday|hollow|home|honey|hood|hope|horn|horror|horse|hospital|host|hotel|hour|hover|hub|huge|human|humble|humor|hundred|hungry|hunt|hurdle|hurry|hurt|husband|hybrid|ice|icon|idea|identify|idle|ignore|ill|illegal|illness|image|imitate|immense|immune|impact|impose|improve|impulse|inch|include|income|increase|index|indicate|indoor|industry|infant|inflict|inform|inhale|inherit|initial|inject|injury|inmate|inner|innocent|input|inquiry|insane|insect|inside|inspire|install|intact|interest|into|invest|invite|involve|iron|island|isolate|issue|item|ivory|jacket|jaguar|jar|jazz|jealous|jeans|jelly|jewel|job|join|joke|journey|joy|judge|juice|jump|jungle|junior|junk|just|kangaroo|keen|keep|ketchup|key|kick|kid|kidney|kind|kingdom|kiss|kit|kitchen|kite|kitten|kiwi|knee|knife|knock|know|lab|label|labor|ladder|lady|lake|lamp|language|laptop|large|later|latin|laugh|laundry|lava|law|lawn|lawsuit|layer|lazy|leader|leaf|learn|leave|lecture|left|leg|legal|legend|leisure|lemon|lend|length|lens|leopard|lesson|letter|level|liar|liberty|library|license|life|lift|light|like|limb|limit|link|lion|liquid|list|little|live|lizard|load|loan|lobster|local|lock|logic|lonely|long|loop|lottery|loud|lounge|love|loyal|lucky|luggage|lumber|lunar|lunch|luxury|lyrics|machine|mad|magic|magnet|maid|mail|main|major|make|mammal|man|manage|mandate|mango|mansion|manual|maple|marble|march|margin|marine|market|marriage|mask|mass|master|match|material|math|matrix|matter|maximum|maze|meadow|mean|measure|meat|mechanic|medal|media|melody|melt|member|memory|mention|menu|mercy|merge|merit|merry|mesh|message|metal|method|middle|midnight|milk|million|mimic|mind|minimum|minor|minute|miracle|mirror|misery|miss|mistake|mix|mixed|mixture|mobile|model|modify|mom|moment|monitor|monkey|monster|month|moon|moral|more|morning|mosquito|mother|motion|motor|mountain|mouse|move|movie|much|muffin|mule|multiply|muscle|museum|mushroom|music|must|mutual|myself|mystery|myth|naive|name|napkin|narrow|nasty|nation|nature|near|neck|need|negative|neglect|neither|nephew|nerve|nest|net|network|neutral|never|news|next|nice|night|noble|noise|nominee|noodle|normal|north|nose|notable|note|nothing|notice|novel|now|nuclear|number|nurse|nut|oak|obey|object|oblige|obscure|observe|obtain|obvious|occur|ocean|october|odor|off|offer|office|often|oil|okay|old|olive|olympic|omit|once|one|onion|online|only|open|opera|opinion|oppose|option|orange|orbit|orchard|order|ordinary|organ|orient|original|orphan|ostrich|other|outdoor|outer|output|outside|oval|oven|over|own|owner|oxygen|oyster|ozone|pact|paddle|page|pair|palace|palm|panda|panel|panic|panther|paper|parade|parent|park|parrot|party|pass|patch|path|patient|patrol|pattern|pause|pave|payment|peace|peanut|pear|peasant|pelican|pen|penalty|pencil|people|pepper|perfect|permit|person|pet|phone|photo|phrase|physical|piano|picnic|picture|piece|pig|pigeon|pill|pilot|pink|pioneer|pipe|pistol|pitch|pizza|place|planet|plastic|plate|play|please|pledge|pluck|plug|plunge|poem|poet|point|polar|pole|police|pond|pony|pool|popular|portion|position|possible|post|potato|pottery|poverty|powder|power|practice|praise|predict|prefer|prepare|present|pretty|prevent|price|pride|primary|print|priority|prison|private|prize|problem|process|produce|profit|program|project|promote|proof|property|prosper|protect|proud|provide|public|pudding|pull|pulp|pulse|pumpkin|punch|pupil|puppy|purchase|purity|purpose|purse|push|put|puzzle|pyramid|quality|quantum|quarter|question|quick|quit|quiz|quote|rabbit|raccoon|race|rack|radar|radio|rail|rain|raise|rally|ramp|ranch|random|range|rapid|rare|rate|rather|raven|raw|razor|ready|real|reason|rebel|rebuild|recall|receive|recipe|record|recycle|reduce|reflect|reform|refuse|region|regret|regular|reject|relax|release|relief|rely|remain|remember|remind|remove|render|renew|rent|reopen|repair|repeat|replace|report|require|rescue|resemble|resist|resource|response|result|retire|retreat|return|reunion|reveal|review|reward|rhythm|rib|ribbon|rice|rich|ride|ridge|rifle|right|rigid|ring|riot|ripple|risk|ritual|rival|river|road|roast|robot|robust|rocket|romance|roof|rookie|room|rose|rotate|rough|round|route|royal|rubber|rude|rug|rule|run|runway|rural|sad|saddle|sadness|safe|sail|salad|salmon|salon|salt|salute|same|sample|sand|satisfy|satoshi|sauce|sausage|save|say|scale|scan|scare|scatter|scene|scheme|school|science|scissors|scorpion|scout|scrap|screen|script|scrub|sea|search|season|seat|second|secret|section|security|seed|seek|segment|select|sell|seminar|senior|sense|sentence|series|service|session|settle|setup|seven|shadow|shaft|shallow|share|shed|shell|sheriff|shield|shift|shine|ship|shiver|shock|shoe|shoot|shop|short|shoulder|shove|shrimp|shrug|shuffle|shy|sibling|sick|side|siege|sight|sign|silent|silk|silly|silver|similar|simple|since|sing|siren|sister|situate|six|size|skate|sketch|ski|skill|skin|skirt|skull|slab|slam|sleep|slender|slice|slide|slight|slim|slogan|slot|slow|slush|small|smart|smile|smoke|smooth|snack|snake|snap|sniff|snow|soap|soccer|social|sock|soda|soft|solar|soldier|solid|solution|solve|someone|song|soon|sorry|sort|soul|sound|soup|source|south|space|spare|spatial|spawn|speak|special|speed|spell|spend|sphere|spice|spider|spike|spin|spirit|split|spoil|sponsor|spoon|sport|spot|spray|spread|spring|spy|square|squeeze|squirrel|stable|stadium|staff|stage|stairs|stamp|stand|start|state|stay|steak|steel|stem|step|stereo|stick|still|sting|stock|stomach|stone|stool|story|stove|strategy|street|strike|strong|struggle|student|stuff|stumble|style|subject|submit|subway|success|such|sudden|suffer|sugar|suggest|suit|summer|sun|sunny|sunset|super|supply|supreme|sure|surface|surge|surprise|surround|survey|suspect|sustain|swallow|swamp|swap|swarm|swear|sweet|swift|swim|swing|switch|sword|symbol|symptom|syrup|system|table|tackle|tag|tail|talent|talk|tank|tape|target|task|taste|tattoo|taxi|teach|team|tell|ten|tenant|tennis|tent|term|test|text|thank|that|theme|then|theory|there|they|thing|this|thought|three|thrive|throw|thumb|thunder|ticket|tide|tiger|tilt|timber|time|tiny|tip|tired|tissue|title|toast|tobacco|today|toddler|toe|together|toilet|token|tomato|tomorrow|tone|tongue|tonight|tool|tooth|top|topic|topple|torch|tornado|tortoise|toss|total|tourist|toward|tower|town|toy|track|trade|traffic|tragic|train|transfer|trap|trash|travel|tray|treat|tree|trend|trial|tribe|trick|trigger|trim|trip|trophy|trouble|truck|true|truly|trumpet|trust|truth|try|tube|tuition|tumble|tuna|tunnel|turkey|turn|turtle|twelve|twenty|twice|twin|twist|two|type|typical|ugly|umbrella|unable|unaware|uncle|uncover|under|undo|unfair|unfold|unhappy|uniform|unique|unit|universe|unknown|unlock|until|unusual|unveil|update|upgrade|uphold|upon|upper|upset|urban|urge|usage|use|used|useful|useless|usual|utility|vacant|vacuum|vague|valid|valley|valve|van|vanish|vapor|various|vast|vault|vehicle|velvet|vendor|venture|venue|verb|verify|version|very|vessel|veteran|viable|vibrant|vicious|victory|video|view|village|vintage|violin|virtual|virus|visa|visit|visual|vital|vivid|vocal|voice|void|volcano|volume|vote|voyage|wage|wagon|wait|walk|wall|walnut|want|warfare|warm|warrior|wash|wasp|waste|water|wave|way|wealth|weapon|wear|weasel|weather|web|wedding|weekend|weird|welcome|west|wet|whale|what|wheat|wheel|when|where|whip|whisper|wide|width|wife|wild|will|win|window|wine|wing|wink|winner|winter|wire|wisdom|wise|wish|witness|wolf|woman|wonder|wood|wool|word|work|world|worry|worth|wrap|wreck|wrestle|wrist|write|wrong|yard|year|yellow|you|young|youth|zebra|zero|zone|zoo".split("|");

	const INVALID_MNEMONIC="Invalid mnemonic",INVALID_ENTROPY="Invalid entropy",INVALID_CHECKSUM="Invalid mnemonic checksum";function normalize(n){return (n||"").normalize("NFKD")}function binaryToByte(n){return parseInt(n,2)}function bytesToBinary(n){return n.map((n=>n.toString(2).padStart(8,"0"))).join("")}function deriveChecksumBits(n){return bytesToBinary(Array.from(sha256AsU8a(n))).slice(0,8*n.length/32)}function mnemonicToSeedSync(n,r){return pbkdf2Encode(stringToU8a(normalize(n)),stringToU8a(`mnemonic${normalize(r)}`)).password}function mnemonicToEntropy$1(n){const r=normalize(n).split(" ");if(r.length%3!=0)throw new Error(INVALID_MNEMONIC);const o=r.map((n=>{const r=DEFAULT_WORDLIST.indexOf(n);if(-1===r)throw new Error(INVALID_MNEMONIC);return r.toString(2).padStart(11,"0")})).join(""),t=32*Math.floor(o.length/33),e=o.slice(0,t),i=o.slice(t),a=e.match(/(.{1,8})/g),m=a&&a.map(binaryToByte);if(!m||m.length%4!=0||m.length<16||m.length>32)throw new Error(INVALID_ENTROPY);const c=u8aToU8a(m);if(deriveChecksumBits(c)!==i)throw new Error(INVALID_CHECKSUM);return c}function validateMnemonic(n){try{mnemonicToEntropy$1(n);}catch(n){return !1}return !0}

	function mnemonicToEntropy(o,t){return !hasBigInt||!t&&isReady()?bip39ToEntropy(o):mnemonicToEntropy$1(o)}

	function mnemonicValidate(i,a){return !hasBigInt||!a&&isReady()?bip39Validate(i):validateMnemonic(i)}

	function mnemonicToLegacySeed(e,o="",i,n=32){if(!mnemonicValidate(e))throw new Error("Invalid bip39 mnemonic specified");if(![32,64].includes(n))throw new Error(`Invalid seed length ${n}, expected 32 or 64`);return 32===n?!hasBigInt||!i&&isReady()?bip39ToSeed(e,o):mnemonicToSeedSync(e,o).subarray(0,32):mnemonicToSeedSync(e,o)}

	function mnemonicToMiniSecret(o,i="",n){if(!mnemonicValidate(o))throw new Error("Invalid bip39 mnemonic specified");if(!n&&isReady())return bip39ToMiniSecret(o,i);const r=mnemonicToEntropy(o),e=stringToU8a(`mnemonic${i}`);return pbkdf2Encode(r,e).password.slice(0,32)}

	function naclDecrypt(n,e,t){return nacl.secretbox.open(n,e,t)||null}

	function naclEncrypt(n,r,a=randomAsU8a(24)){return {encrypted:nacl.secretbox(n,a,r),nonce:a}}

	function naclOpen(n,e,l,o){return nacl.box.open(n,e,l,o)||null}

	function naclSeal(a,n,o,r=randomAsU8a(24)){return {nonce:r,sealed:nacl.box(a,r,o,n)}}

	const rotl$1=(t,r)=>t<<r|t>>>32-r;function XorAndSalsa(t,r,o,e,l,n){let s=t[r++]^o[e++],c=t[r++]^o[e++],i=t[r++]^o[e++],a=t[r++]^o[e++],p=t[r++]^o[e++],f=t[r++]^o[e++],u=t[r++]^o[e++],k=t[r++]^o[e++],m=t[r++]^o[e++],b=t[r++]^o[e++],y=t[r++]^o[e++],h=t[r++]^o[e++],d=t[r++]^o[e++],x=t[r++]^o[e++],w=t[r++]^o[e++],B=t[r++]^o[e++],M=s,L=c,S=i,g=a,A=p,N=f,E=u,O=k,j=m,C=b,T=y,v=h,z=d,I=x,V=w,X=B;for(let t=0;t<8;t+=2)A^=rotl$1(M+z|0,7),j^=rotl$1(A+M|0,9),z^=rotl$1(j+A|0,13),M^=rotl$1(z+j|0,18),C^=rotl$1(N+L|0,7),I^=rotl$1(C+N|0,9),L^=rotl$1(I+C|0,13),N^=rotl$1(L+I|0,18),V^=rotl$1(T+E|0,7),S^=rotl$1(V+T|0,9),E^=rotl$1(S+V|0,13),T^=rotl$1(E+S|0,18),g^=rotl$1(X+v|0,7),O^=rotl$1(g+X|0,9),v^=rotl$1(O+g|0,13),X^=rotl$1(v+O|0,18),L^=rotl$1(M+g|0,7),S^=rotl$1(L+M|0,9),g^=rotl$1(S+L|0,13),M^=rotl$1(g+S|0,18),E^=rotl$1(N+A|0,7),O^=rotl$1(E+N|0,9),A^=rotl$1(O+E|0,13),N^=rotl$1(A+O|0,18),v^=rotl$1(T+C|0,7),j^=rotl$1(v+T|0,9),C^=rotl$1(j+v|0,13),T^=rotl$1(C+j|0,18),z^=rotl$1(X+V|0,7),I^=rotl$1(z+X|0,9),V^=rotl$1(I+z|0,13),X^=rotl$1(V+I|0,18);l[n++]=s+M|0,l[n++]=c+L|0,l[n++]=i+S|0,l[n++]=a+g|0,l[n++]=p+A|0,l[n++]=f+N|0,l[n++]=u+E|0,l[n++]=k+O|0,l[n++]=m+j|0,l[n++]=b+C|0,l[n++]=y+T|0,l[n++]=h+v|0,l[n++]=d+z|0,l[n++]=x+I|0,l[n++]=w+V|0,l[n++]=B+X|0;}function BlockMix(t,r,o,e,l){let n=e+0,s=e+16*l;for(let e=0;e<16;e++)o[s+e]=t[r+16*(2*l-1)+e];for(let e=0;e<l;e++,n+=16,r+=16)XorAndSalsa(o,s,t,r,o,n),e>0&&(s+=16),XorAndSalsa(o,n,t,r+=16,o,s);}function scryptInit(t,r,o){const e=checkOpts({dkLen:32,asyncTick:10,maxmem:1073742848},o),{N:l,r:n,p:s,dkLen:c,asyncTick:i,maxmem:a,onProgress:p}=e;if(assert.number(l),assert.number(n),assert.number(s),assert.number(c),assert.number(i),assert.number(a),void 0!==p&&"function"!=typeof p)throw new Error("progressCb should be function");const f=128*n,u=f/4;if(l<=1||0!=(l&l-1)||l>=2**(f/8)||l>2**32)throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");if(s<0||s>137438953440/f)throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");if(c<0||c>137438953440)throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");const k=f*(l+s);if(k>a)throw new Error(`Scrypt: parameters too large, ${k} (128 * r * (N + p)) > ${a} (maxmem)`);const m=pbkdf2(sha256$1,t,r,{c:1,dkLen:f*s}),b=u32$2(m),y=u32$2(new Uint8Array(f*l)),h=u32$2(new Uint8Array(f));let d=()=>{};if(p){const t=2*l*s,r=Math.max(Math.floor(t/1e4),1);let o=0;d=()=>{o++,!p||o%r&&o!==t||p(o/t);};}return {N:l,r:n,p:s,dkLen:c,blockSize32:u,V:y,B32:b,B:m,tmp:h,blockMixCb:d,asyncTick:i}}function scryptOutput(t,r,o,e,l){const n=pbkdf2(sha256$1,t,o,{c:1,dkLen:r});return o.fill(0),e.fill(0),l.fill(0),n}function scrypt(t,r,o){const{N:e,r:l,p:n,dkLen:s,blockSize32:c,V:i,B32:a,B:p,tmp:f,blockMixCb:u}=scryptInit(t,r,o);for(let t=0;t<n;t++){const r=c*t;for(let t=0;t<c;t++)i[t]=a[r+t];for(let t=0,r=0;t<e-1;t++)BlockMix(i,r,i,r+=c,l),u();BlockMix(i,(e-1)*c,a,r,l),u();for(let t=0;t<e;t++){const t=a[r+c-16]%e;for(let o=0;o<c;o++)f[o]=a[r+o]^i[t*c+o];BlockMix(f,0,a,r,l),u();}}return scryptOutput(t,s,p,i,f)}

	const DEFAULT_PARAMS={N:32768,p:1,r:8};

	function scryptEncode(o,r=randomAsU8a(),a=DEFAULT_PARAMS,s){const t=u8aToU8a(o);return {params:a,password:!hasBigInt||!s&&isReady()?scrypt$1(t,r,Math.log2(a.N),a.r,a.p):scrypt(t,r,objectSpread({dkLen:64},a)),salt:r}}

	function scryptFromU8a(r){const o=r.subarray(0,32),a=u8aToBn(r.subarray(32,36),BN_LE_OPTS).toNumber(),t=u8aToBn(r.subarray(36,40),BN_LE_OPTS).toNumber(),u=u8aToBn(r.subarray(40,44),BN_LE_OPTS).toNumber();if(a!==DEFAULT_PARAMS.N||t!==DEFAULT_PARAMS.p||u!==DEFAULT_PARAMS.r)throw new Error("Invalid injected scrypt params found");return {params:{N:a,p:t,r:u},salt:o}}

	function scryptToU8a(o,{N:_,p:a,r:n}){return u8aConcat(o,bnToU8a(_,BN_LE_32_OPTS),bnToU8a(a,BN_LE_32_OPTS),bnToU8a(n,BN_LE_32_OPTS))}

	const ENCODING=["scrypt","xsalsa20-poly1305"];const ENCODING_NONE=["none"];const ENCODING_VERSION="3";const NONCE_LENGTH=24;const SCRYPT_LENGTH=44;

	function jsonDecryptData(r,t,e=ENCODING){if(!r)throw new Error("No encrypted data available to decode");if(e.includes("xsalsa20-poly1305")&&!t)throw new Error("Password required to decode encrypted data");let o=r;if(t){let a;if(e.includes("scrypt")){const{params:e,salt:o}=scryptFromU8a(r);a=scryptEncode(t,o,e).password,r=r.subarray(SCRYPT_LENGTH);}else a=stringToU8a(t);o=naclDecrypt(r.subarray(NONCE_LENGTH),r.subarray(0,NONCE_LENGTH),u8aFixLength(a,256,!0));}if(!o)throw new Error("Unable to decode using the supplied passphrase");return o}

	function jsonEncryptFormat(N,n,o){return {encoded:base64Encode(N),encoding:{content:n,type:o?ENCODING:ENCODING_NONE,version:ENCODING_VERSION}}}

	const secp256k1VerifyHasher=e=>(r,s,i)=>secp256k1Verify(r,s,i,e),VERIFIERS_ECDSA=[["ecdsa",secp256k1VerifyHasher("blake2")],["ethereum",secp256k1VerifyHasher("keccak")]],VERIFIERS=[["ed25519",ed25519Verify],["sr25519",sr25519Verify],...VERIFIERS_ECDSA],CRYPTO_TYPES=["ed25519","sr25519","ecdsa"];function verifyDetect(e,{message:r,publicKey:s,signature:i},t=VERIFIERS){return e.isValid=t.some((([t,a])=>{try{if(a(r,i,s))return e.crypto=t,!0}catch(e){}return !1})),e}function verifyMultisig(e,{message:r,publicKey:s,signature:i}){if(![0,1,2].includes(i[0]))throw new Error(`Unknown crypto type, expected signature prefix [0..2], found ${i[0]}`);const t=CRYPTO_TYPES[i[0]]||"none";e.crypto=t;try{e.isValid={ecdsa:()=>verifyDetect(e,{message:r,publicKey:s,signature:i.subarray(1)},VERIFIERS_ECDSA).isValid,ed25519:()=>ed25519Verify(r,i.subarray(1),s),none:()=>{throw Error("no verify for `none` crypto type")},sr25519:()=>sr25519Verify(r,i.subarray(1),s)}[t]();}catch(e){}return e}function getVerifyFn(e){return [0,1,2].includes(e[0])&&[65,66].includes(e.length)?verifyMultisig:verifyDetect}function signatureVerify(e,r,s){const i=u8aToU8a(r);if(![64,65,66].includes(i.length))throw new Error(`Invalid signature length, expected [64..66] bytes, found ${i.length}`);const t=decodeAddress(s),a={message:u8aToU8a(e),publicKey:t,signature:i},n={crypto:"none",isValid:!1,isWrapped:u8aIsWrapped(a.message,!0),publicKey:t},o=u8aIsWrapped(a.message,!1),c=getVerifyFn(i);return c(n,a),"none"!==n.crypto||n.isWrapped&&!o?n:(a.message=o?u8aUnwrapBytes(a.message):u8aWrapBytes(a.message),c(n,a))}

	const P64_1=BigInt$1("11400714785074694791"),P64_2=BigInt$1("14029467366897019727"),P64_3=BigInt$1("1609587929392839161"),P64_4=BigInt$1("9650029242287828579"),P64_5=BigInt$1("2870177450012600261"),U64=BigInt$1("0xffffffffffffffff"),_7n=BigInt$1(7),_11n=BigInt$1(11),_12n=BigInt$1(12),_16n=BigInt$1(16),_18n=BigInt$1(18),_23n=BigInt$1(23),_27n=BigInt$1(27),_29n=BigInt$1(29),_31n=BigInt$1(31),_32n=BigInt$1(32),_33n=BigInt$1(33),_64n=BigInt$1(64),_256n=BigInt$1(256);function rotl(n,t){const _=n&U64;return (_<<t|_>>_64n-t)&U64}function fromU8a(n,t,_){const r=new Array(_);let o=0;for(let i=0;i<_;i++,o+=2)r[i]=BigInt$1(n[t+o]|n[t+1+o]<<8);let i=_0n$2;for(let n=_-1;n>=0;n--)i=(i<<_16n)+r[n];return i}function toU8a(n){const t=new Uint8Array(8);for(let _=7;_>=0;_--)t[_]=Number(n%_256n),n/=_256n;return t}function state(n){const t=BigInt$1(n);return {seed:t,u8a:new Uint8Array(32),u8asize:0,v1:t+P64_1+P64_2,v2:t+P64_2,v3:t,v4:t-P64_1}}function init(n,t){if(t.length<32)return n.u8a.set(t),n.u8asize=t.length,n;const _=t.length-32;let r=0;if(_>=0){const o=n=>P64_1*rotl(n+P64_2*fromU8a(t,r,4),_31n);do{n.v1=o(n.v1),r+=8,n.v2=o(n.v2),r+=8,n.v3=o(n.v3),r+=8,n.v4=o(n.v4),r+=8;}while(r<=_)}return r<t.length&&(n.u8a.set(t.subarray(r,t.length)),n.u8asize=t.length-r),n}function xxhash64(n,t){const{seed:_,u8a:r,u8asize:o,v1:i,v2:e,v3:P,v4:f}=init(state(t),n);let g=0,l=U64&BigInt$1(n.length)+(n.length>=32?((((rotl(i,_1n$2)+rotl(e,_7n)+rotl(P,_12n)+rotl(f,_18n)^P64_1*rotl(i*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(e*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(P*P64_2,_31n))*P64_1+P64_4^P64_1*rotl(f*P64_2,_31n))*P64_1+P64_4:_+P64_5);for(;g<=o-8;)l=U64&P64_4+P64_1*rotl(l^P64_1*rotl(P64_2*fromU8a(r,g,4),_31n),_27n),g+=8;for(g+4<=o&&(l=U64&P64_3+P64_2*rotl(l^P64_1*fromU8a(r,g,2),_23n),g+=4);g<o;)l=U64&P64_1*rotl(l^P64_5*BigInt$1(r[g++]),_11n);return l=U64&P64_2*(l^l>>_33n),l=U64&P64_3*(l^l>>_29n),toU8a(U64&(l^l>>_32n))}

	function xxhashAsU8a(t,o=64,s){const a=Math.ceil(o/64),r=u8aToU8a(t);if(!hasBigInt||!s&&isReady())return twox(r,a);const e=new Uint8Array(8*a);for(let t=0;t<a;t++)e.set(xxhash64(r,t).reverse(),8*t);return e}

	const PKCS8_DIVIDER=new Uint8Array([161,35,3,33,0]);const PKCS8_HEADER=new Uint8Array([48,83,2,1,1,48,5,6,3,43,101,112,4,34,4,32]);const PUB_LENGTH=32;const SEC_LENGTH=64;const SEED_LENGTH=32;

	const SEED_OFFSET=PKCS8_HEADER.length;function decodePair(E,r,a){const o=Array.isArray(a)||void 0===a?a:[a],t=jsonDecryptData(r,E,o),D=t.subarray(0,PKCS8_HEADER.length);if(!u8aEq(D,PKCS8_HEADER))throw new Error("Invalid Pkcs8 header found in body");let S=t.subarray(SEED_OFFSET,SEED_OFFSET+SEC_LENGTH),_=SEED_OFFSET+SEC_LENGTH,e=t.subarray(_,_+PKCS8_DIVIDER.length);if(!u8aEq(e,PKCS8_DIVIDER)&&(_=SEED_OFFSET+SEED_LENGTH,S=t.subarray(SEED_OFFSET,_),e=t.subarray(_,_+PKCS8_DIVIDER.length),!u8aEq(e,PKCS8_DIVIDER)))throw new Error("Invalid Pkcs8 divider found in body");const n=_+PKCS8_DIVIDER.length;return {publicKey:t.subarray(n,n+PUB_LENGTH),secretKey:S}}

	function encodePair({publicKey:t,secretKey:o},r){if(!o)throw new Error("Expected a valid secretKey to be passed to encode");const c=u8aConcat(PKCS8_HEADER,o,PKCS8_DIVIDER,t);if(!r)return c;const{params:e,password:a,salt:n}=scryptEncode(r),{encrypted:p,nonce:s}=naclEncrypt(c,a.subarray(0,32));return u8aConcat(scryptToU8a(n,e),s,p)}

	function pairToJson(o,{address:t,meta:r},p,a){return objectSpread(jsonEncryptFormat(p,["pkcs8",o],a),{address:t,meta:r})}

	const SIG_TYPE_NONE=new Uint8Array,TYPE_FROM_SEED={ecdsa:secp256k1PairFromSeed,ed25519:ed25519PairFromSeed,ethereum:secp256k1PairFromSeed,sr25519:sr25519PairFromSeed},TYPE_PREFIX={ecdsa:new Uint8Array([2]),ed25519:new Uint8Array([0]),ethereum:new Uint8Array([2]),sr25519:new Uint8Array([1])},TYPE_SIGNATURE={ecdsa:(e,r)=>secp256k1Sign(e,r,"blake2"),ed25519:ed25519Sign,ethereum:(e,r)=>secp256k1Sign(e,r,"keccak"),sr25519:sr25519Sign},TYPE_ADDRESS={ecdsa:e=>e.length>32?blake2AsU8a(e):e,ed25519:e=>e,ethereum:e=>20===e.length?e:keccakAsU8a(secp256k1Expand(e)),sr25519:e=>e};function isLocked(e){return !e||u8aEmpty(e)}function vrfHash(e,r,t){return blake2AsU8a(u8aConcat(r||"",t||"",e))}function createPair({toSS58:e,type:r},{publicKey:t,secretKey:o},a={},n=null,c){const s=(e,a)=>{const s=decodePair(e,a||n,c);if(64===s.secretKey.length)t=s.publicKey,o=s.secretKey;else {const e=TYPE_FROM_SEED[r](s.secretKey);t=e.publicKey,o=e.secretKey;}},i=e=>(isLocked(o)&&n&&s(e,n),n=encodePair({publicKey:t,secretKey:o},e),c=void 0,n),u=()=>{const o=TYPE_ADDRESS[r](t);return "ethereum"===r?ethereumEncode(o):e(o)};return {get address(){return u()},get addressRaw(){const e=TYPE_ADDRESS[r](t);return "ethereum"===r?e.slice(-20):e},get isLocked(){return isLocked(o)},get meta(){return a},get publicKey(){return t},get type(){return r},decodePkcs8:s,decryptMessage:(e,t)=>{if(isLocked(o))throw new Error("Cannot encrypt with a locked key pair");if(["ecdsa","ethereum"].includes(r))throw new Error("Secp256k1 not supported yet");const a=u8aToU8a(e);return naclOpen(a.slice(24,a.length),a.slice(0,24),convertPublicKeyToCurve25519(u8aToU8a(t)),convertSecretKeyToCurve25519(o))},derive:(a,n)=>{if("ethereum"===r)throw new Error("Unable to derive on this keypair");if(isLocked(o))throw new Error("Cannot derive on a locked keypair");const{path:c}=keyExtractPath(a),s=keyFromPath({publicKey:t,secretKey:o},c,r);return createPair({toSS58:e,type:r},s,n,null)},encodePkcs8:e=>i(e),encryptMessage:(e,t,a)=>{if(isLocked(o))throw new Error("Cannot encrypt with a locked key pair");if(["ecdsa","ethereum"].includes(r))throw new Error("Secp256k1 not supported yet");const{nonce:n,sealed:c}=naclSeal(u8aToU8a(e),convertSecretKeyToCurve25519(o),convertPublicKeyToCurve25519(u8aToU8a(t)),a);return u8aConcat(n,c)},lock:()=>{o=new Uint8Array;},setMeta:e=>{a=objectSpread({},a,e);},sign:(e,a={})=>{if(isLocked(o))throw new Error("Cannot sign with a locked key pair");return u8aConcat(a.withType?TYPE_PREFIX[r]:SIG_TYPE_NONE,TYPE_SIGNATURE[r](u8aToU8a(e),{publicKey:t,secretKey:o}))},toJson:e=>{const o=["ecdsa","ethereum"].includes(r)?20===t.length?u8aToHex(t):u8aToHex(secp256k1Compress(t)):u();return pairToJson(r,{address:o,meta:a},i(e),!!e)},unlock:e=>s(e),verify:(e,t,o)=>signatureVerify(e,t,TYPE_ADDRESS[r](u8aToU8a(o))).isValid,vrfSign:(e,a,n)=>{if(isLocked(o))throw new Error("Cannot sign with a locked key pair");if("sr25519"===r)return sr25519VrfSign(e,{secretKey:o},a,n);const c=TYPE_SIGNATURE[r](u8aToU8a(e),{publicKey:t,secretKey:o});return u8aConcat(vrfHash(c,a,n),c)},vrfVerify:(e,o,a,n,c)=>{if("sr25519"===r)return sr25519VrfVerify(e,o,t,n,c);return signatureVerify(e,u8aConcat(TYPE_PREFIX[r],o.subarray(32)),TYPE_ADDRESS[r](u8aToU8a(a))).isValid&&u8aEq(o.subarray(0,32),vrfHash(o.subarray(32),n,c))}}}

	const DEV_PHRASE="bottom drive obey lake curtain smoke basket hold race lonely fit walk";

	var _Pairs_map;class Pairs{constructor(){_Pairs_map.set(this,{});}add(e){return __classPrivateFieldGet(this,_Pairs_map,"f")[decodeAddress(e.address).toString()]=e,e}all(){return Object.values(__classPrivateFieldGet(this,_Pairs_map,"f"))}get(e){const r=__classPrivateFieldGet(this,_Pairs_map,"f")[decodeAddress(e).toString()];if(!r)throw new Error(`Unable to retrieve keypair '${isU8a(e)||isHex(e)?u8aToHex(u8aToU8a(e)):e}'`);return r}remove(e){delete __classPrivateFieldGet(this,_Pairs_map,"f")[decodeAddress(e).toString()];}}_Pairs_map=new WeakMap;

	var _Keyring_pairs,_Keyring_type,_Keyring_ss58;const PairFromSeed={ecdsa:e=>secp256k1PairFromSeed(e),ed25519:e=>ed25519PairFromSeed(e),ethereum:e=>secp256k1PairFromSeed(e),sr25519:e=>sr25519PairFromSeed(e)};function pairToPublic({publicKey:e}){return e}class Keyring{constructor(e={}){if(_Keyring_pairs.set(this,void 0),_Keyring_type.set(this,void 0),_Keyring_ss58.set(this,void 0),this.decodeAddress=decodeAddress,this.encodeAddress=(e,r)=>"ethereum"===this.type?ethereumEncode(e):encodeAddress(e,void 0===r?__classPrivateFieldGet(this,_Keyring_ss58,"f"):r),e.type=e.type||"ed25519",!["ecdsa","ethereum","ed25519","sr25519"].includes(e.type||"undefined"))throw new Error(`Expected a keyring type of either 'ed25519', 'sr25519', 'ethereum' or 'ecdsa', found '${e.type||"unknown"}`);__classPrivateFieldSet(this,_Keyring_pairs,new Pairs,"f"),__classPrivateFieldSet(this,_Keyring_ss58,e.ss58Format,"f"),__classPrivateFieldSet(this,_Keyring_type,e.type,"f");}get pairs(){return this.getPairs()}get publicKeys(){return this.getPublicKeys()}get type(){return __classPrivateFieldGet(this,_Keyring_type,"f")}addPair(e){return __classPrivateFieldGet(this,_Keyring_pairs,"f").add(e)}addFromAddress(e,r={},t=null,s=this.type,i,a){const d=this.decodeAddress(e,i);return this.addPair(createPair({toSS58:this.encodeAddress,type:s},{publicKey:d,secretKey:new Uint8Array},r,t,a))}addFromJson(e,r){return this.addPair(this.createFromJson(e,r))}addFromMnemonic(e,r={},t=this.type){return this.addFromUri(e,r,t)}addFromPair(e,r={},t=this.type){return this.addPair(this.createFromPair(e,r,t))}addFromSeed(e,r={},t=this.type){return this.addPair(createPair({toSS58:this.encodeAddress,type:t},PairFromSeed[t](e),r,null))}addFromUri(e,r={},t=this.type){return this.addPair(this.createFromUri(e,r,t))}createFromJson({address:e,encoded:r,encoding:{content:t,type:s,version:i},meta:a},d){if("3"===i&&"pkcs8"!==t[0])throw new Error(`Unable to decode non-pkcs8 type, [${t.join(",")}] found}`);const o="0"!==i&&Array.isArray(t)?t[1]:this.type,n=Array.isArray(s)?s:[s];if(!["ed25519","sr25519","ecdsa","ethereum"].includes(o))throw new Error(`Unknown crypto type ${o}`);const c=isHex(e)?hexToU8a(e):this.decodeAddress(e,d),p=isHex(r)?hexToU8a(r):base64Decode(r);return createPair({toSS58:this.encodeAddress,type:o},{publicKey:c,secretKey:new Uint8Array},a,p,n)}createFromPair(e,r={},t=this.type){return createPair({toSS58:this.encodeAddress,type:t},e,r,null)}createFromUri(e,r={},t=this.type){const s=e.startsWith("//")?`${DEV_PHRASE}${e}`:e,{derivePath:i,password:a,path:d,phrase:o}=keyExtractSuri(s);let n;const c=isHex(o,256);if(c)n=hexToU8a(o);else {const e=o.split(" ");if([12,15,18,21,24].includes(e.length))n="ethereum"===t?mnemonicToLegacySeed(o,"",!1,64):mnemonicToMiniSecret(o,a);else {if(o.length>32)throw new Error("specified phrase is not a valid mnemonic and is invalid as a raw seed at > 32 bytes");n=stringToU8a(o.padEnd(32));}}const p="ethereum"===t?c?PairFromSeed[t](n):hdEthereum(n,i.substring(1)):keyFromPath(PairFromSeed[t](n),d,t);return createPair({toSS58:this.encodeAddress,type:t},p,r,null)}getPair(e){return __classPrivateFieldGet(this,_Keyring_pairs,"f").get(e)}getPairs(){return __classPrivateFieldGet(this,_Keyring_pairs,"f").all()}getPublicKeys(){return __classPrivateFieldGet(this,_Keyring_pairs,"f").all().map(pairToPublic)}removePair(e){__classPrivateFieldGet(this,_Keyring_pairs,"f").remove(e);}setSS58Format(e){__classPrivateFieldSet(this,_Keyring_ss58,e,"f");}toJson(e,r){return __classPrivateFieldGet(this,_Keyring_pairs,"f").get(e).toJson(r)}}_Keyring_pairs=new WeakMap,_Keyring_type=new WeakMap,_Keyring_ss58=new WeakMap;

	function extend(t,e,r){Object.defineProperty(t,e,{configurable:!0,enumerable:!1,value:r});}class RpcError extends Error{constructor(t="",e=-99999,r){if(super(),extend(this,"message",String(t)),extend(this,"name",this.constructor.name),extend(this,"data",r),extend(this,"code",e),isFunction$1(Error.captureStackTrace))Error.captureStackTrace(this,this.constructor);else {const{stack:e}=new Error(t);e&&extend(this,"stack",e);}}}RpcError.CODES={ASSERT:-90009,INVALID_JSONRPC:-99998,METHOD_NOT_FOUND:-32601,UNKNOWN:-99999};

	var _RpcCoder_id;function formatErrorData(r){if(isUndefined(r))return "";const e=`: ${isString(r)?r.replace(/Error\("/g,"").replace(/\("/g,"(").replace(/"\)/g,")").replace(/\(/g,", ").replace(/\)/g,""):stringify(r)}`;return e.length<=256?e:`${e.substring(0,255)}…`}function checkError(r){if(r){const{code:e,data:i,message:o}=r;throw new RpcError(`${e}: ${o}${formatErrorData(i)}`,e,i)}}class RpcCoder{constructor(){_RpcCoder_id.set(this,0);}decodeResponse(r){if(!r||"2.0"!==r.jsonrpc)throw new Error("Invalid jsonrpc field in decoded object");const e=!isUndefined(r.params)&&!isUndefined(r.method);if(!(isNumber(r.id)||e&&(isNumber(r.params.subscription)||isString(r.params.subscription))))throw new Error("Invalid id field in decoded object");if(checkError(r.error),void 0===r.result&&!e)throw new Error("No result found in jsonrpc response");return e?(checkError(r.params.error),r.params.result):r.result}encodeJson(r,e){const[i,o]=this.encodeObject(r,e);return [i,stringify(o)]}encodeObject(r,e){var i;const o=__classPrivateFieldSet(this,_RpcCoder_id,(i=__classPrivateFieldGet(this,_RpcCoder_id,"f"),++i),"f");return [o,{id:o,jsonrpc:"2.0",method:r,params:e}]}}_RpcCoder_id=new WeakMap;

	const HTTP_URL="http://127.0.0.1:9933",WS_URL="ws://127.0.0.1:9944";var defaults = {HTTP_URL:HTTP_URL,WS_URL:WS_URL};

	var _LRUCache_instances,_LRUCache_data,_LRUCache_refs,_LRUCache_length,_LRUCache_head,_LRUCache_tail,_LRUCache_toHead;class LRUNode{constructor(e){this.key=e,this.next=this.prev=this;}}class LRUCache{constructor(e=128){_LRUCache_instances.add(this),_LRUCache_data.set(this,new Map),_LRUCache_refs.set(this,new Map),_LRUCache_length.set(this,0),_LRUCache_head.set(this,void 0),_LRUCache_tail.set(this,void 0),this.capacity=e,__classPrivateFieldSet(this,_LRUCache_head,__classPrivateFieldSet(this,_LRUCache_tail,new LRUNode("<empty>"),"f"),"f");}get length(){return __classPrivateFieldGet(this,_LRUCache_length,"f")}get lengthData(){return __classPrivateFieldGet(this,_LRUCache_data,"f").size}get lengthRefs(){return __classPrivateFieldGet(this,_LRUCache_refs,"f").size}entries(){const e=this.keys(),t=new Array(e.length);for(let a=0;a<e.length;a++){const _=e[a];t[a]=[_,__classPrivateFieldGet(this,_LRUCache_data,"f").get(_)];}return t}keys(){const e=[];if(__classPrivateFieldGet(this,_LRUCache_length,"f")){let t=__classPrivateFieldGet(this,_LRUCache_head,"f");for(;t!==__classPrivateFieldGet(this,_LRUCache_tail,"f");)e.push(t.key),t=t.next;e.push(t.key);}return e}get(e){const t=__classPrivateFieldGet(this,_LRUCache_data,"f").get(e);return t?(__classPrivateFieldGet(this,_LRUCache_instances,"m",_LRUCache_toHead).call(this,e),t):null}set(e,t){if(__classPrivateFieldGet(this,_LRUCache_data,"f").has(e))__classPrivateFieldGet(this,_LRUCache_instances,"m",_LRUCache_toHead).call(this,e);else {const t=new LRUNode(e);__classPrivateFieldGet(this,_LRUCache_refs,"f").set(t.key,t),0===this.length?__classPrivateFieldSet(this,_LRUCache_head,__classPrivateFieldSet(this,_LRUCache_tail,t,"f"),"f"):(__classPrivateFieldGet(this,_LRUCache_head,"f").prev=t,t.next=__classPrivateFieldGet(this,_LRUCache_head,"f"),__classPrivateFieldSet(this,_LRUCache_head,t,"f")),__classPrivateFieldGet(this,_LRUCache_length,"f")===this.capacity?(__classPrivateFieldGet(this,_LRUCache_data,"f").delete(__classPrivateFieldGet(this,_LRUCache_tail,"f").key),__classPrivateFieldGet(this,_LRUCache_refs,"f").delete(__classPrivateFieldGet(this,_LRUCache_tail,"f").key),__classPrivateFieldSet(this,_LRUCache_tail,__classPrivateFieldGet(this,_LRUCache_tail,"f").prev,"f"),__classPrivateFieldGet(this,_LRUCache_tail,"f").next=__classPrivateFieldGet(this,_LRUCache_head,"f")):__classPrivateFieldSet(this,_LRUCache_length,__classPrivateFieldGet(this,_LRUCache_length,"f")+1,"f");}__classPrivateFieldGet(this,_LRUCache_data,"f").set(e,t);}}_LRUCache_data=new WeakMap,_LRUCache_refs=new WeakMap,_LRUCache_length=new WeakMap,_LRUCache_head=new WeakMap,_LRUCache_tail=new WeakMap,_LRUCache_instances=new WeakSet,_LRUCache_toHead=function(e){const t=__classPrivateFieldGet(this,_LRUCache_refs,"f").get(e);t&&t!==__classPrivateFieldGet(this,_LRUCache_head,"f")&&(t.prev.next=t.next,t.next.prev=t.prev,t.next=__classPrivateFieldGet(this,_LRUCache_head,"f"),__classPrivateFieldGet(this,_LRUCache_head,"f").prev=t,__classPrivateFieldSet(this,_LRUCache_head,t,"f"));};

	var eventemitter3 = {exports: {}};

	!function(e){var t=Object.prototype.hasOwnProperty,n="~";function r(){}function o(e,t,n){this.fn=e,this.context=t,this.once=n||!1;}function s(e,t,r,s,i){if("function"!=typeof r)throw new TypeError("The listener must be a function");var c=new o(r,s||e,i),f=n?n+t:t;return e._events[f]?e._events[f].fn?e._events[f]=[e._events[f],c]:e._events[f].push(c):(e._events[f]=c,e._eventsCount++),e}function i(e,t){0==--e._eventsCount?e._events=new r:delete e._events[t];}function c(){this._events=new r,this._eventsCount=0;}Object.create&&(r.prototype=Object.create(null),(new r).__proto__||(n=!1)),c.prototype.eventNames=function(){var e,r,o=[];if(0===this._eventsCount)return o;for(r in e=this._events)t.call(e,r)&&o.push(n?r.slice(1):r);return Object.getOwnPropertySymbols?o.concat(Object.getOwnPropertySymbols(e)):o},c.prototype.listeners=function(e){var t=n?n+e:e,r=this._events[t];if(!r)return [];if(r.fn)return [r.fn];for(var o=0,s=r.length,i=new Array(s);o<s;o++)i[o]=r[o].fn;return i},c.prototype.listenerCount=function(e){var t=n?n+e:e,r=this._events[t];return r?r.fn?1:r.length:0},c.prototype.emit=function(e,t,r,o,s,i){var c=n?n+e:e;if(!this._events[c])return !1;var f,a,u=this._events[c],l=arguments.length;if(u.fn){switch(u.once&&this.removeListener(e,u.fn,void 0,!0),l){case 1:return u.fn.call(u.context),!0;case 2:return u.fn.call(u.context,t),!0;case 3:return u.fn.call(u.context,t,r),!0;case 4:return u.fn.call(u.context,t,r,o),!0;case 5:return u.fn.call(u.context,t,r,o,s),!0;case 6:return u.fn.call(u.context,t,r,o,s,i),!0}for(a=1,f=new Array(l-1);a<l;a++)f[a-1]=arguments[a];u.fn.apply(u.context,f);}else {var v,p=u.length;for(a=0;a<p;a++)switch(u[a].once&&this.removeListener(e,u[a].fn,void 0,!0),l){case 1:u[a].fn.call(u[a].context);break;case 2:u[a].fn.call(u[a].context,t);break;case 3:u[a].fn.call(u[a].context,t,r);break;case 4:u[a].fn.call(u[a].context,t,r,o);break;default:if(!f)for(v=1,f=new Array(l-1);v<l;v++)f[v-1]=arguments[v];u[a].fn.apply(u[a].context,f);}}return !0},c.prototype.on=function(e,t,n){return s(this,e,t,n,!1)},c.prototype.once=function(e,t,n){return s(this,e,t,n,!0)},c.prototype.removeListener=function(e,t,r,o){var s=n?n+e:e;if(!this._events[s])return this;if(!t)return i(this,s),this;var c=this._events[s];if(c.fn)c.fn!==t||o&&!c.once||r&&c.context!==r||i(this,s);else {for(var f=0,a=[],u=c.length;f<u;f++)(c[f].fn!==t||o&&!c[f].once||r&&c[f].context!==r)&&a.push(c[f]);a.length?this._events[s]=1===a.length?a[0]:a:i(this,s);}return this},c.prototype.removeAllListeners=function(e){var t;return e?(t=n?n+e:e,this._events[t]&&i(this,t)):(this._events=new r,this._eventsCount=0),this},c.prototype.off=c.prototype.removeListener,c.prototype.addListener=c.prototype.on,c.prefixed=n,c.EventEmitter=c,e.exports=c;}(eventemitter3);var EventEmitter = eventemitter3.exports;

	const WebSocket=xglobal.WebSocket;

	const known={1e3:"Normal Closure",1001:"Going Away",1002:"Protocol Error",1003:"Unsupported Data",1004:"(For future)",1005:"No Status Received",1006:"Abnormal Closure",1007:"Invalid frame payload data",1008:"Policy Violation",1009:"Message too big",1010:"Missing Extension",1011:"Internal Error",1012:"Service Restart",1013:"Try Again Later",1014:"Bad Gateway",1015:"TLS Handshake"};function getWSErrorString(r){if(r>=0&&r<=999)return "(Unused)";if(r>=1016){if(r<=1999)return "(For WebSocket standard)";if(r<=2999)return "(For WebSocket extensions)";if(r<=3999)return "(For libraries and frameworks)";if(r<=4999)return "(For applications)"}return known[r]||"(Unknown)"}

	var _WsProvider_instances,_WsProvider_callCache,_WsProvider_coder,_WsProvider_endpoints,_WsProvider_headers,_WsProvider_eventemitter,_WsProvider_handlers,_WsProvider_isReadyPromise,_WsProvider_stats,_WsProvider_waitingForId,_WsProvider_autoConnectMs,_WsProvider_endpointIndex,_WsProvider_endpointStats,_WsProvider_isConnected,_WsProvider_subscriptions,_WsProvider_timeoutId,_WsProvider_websocket,_WsProvider_timeout,_WsProvider_send,_WsProvider_emit,_WsProvider_onSocketClose,_WsProvider_onSocketError,_WsProvider_onSocketMessage,_WsProvider_onSocketMessageResult,_WsProvider_onSocketMessageSubscribe,_WsProvider_onSocketOpen,_WsProvider_resubscribe,_WsProvider_timeoutHandlers;const ALIASES={chain_finalisedHead:"chain_finalizedHead",chain_subscribeFinalisedHeads:"chain_subscribeFinalizedHeads",chain_unsubscribeFinalisedHeads:"chain_unsubscribeFinalizedHeads"},l$b=logger("api-ws");function eraseRecord(e,s){Object.keys(e).forEach((t=>{s&&s(e[t]),delete e[t];}));}function defaultEndpointStats(){return {bytesRecv:0,bytesSent:0,cached:0,errors:0,requests:0,subscriptions:0,timeout:0}}class WsProvider{constructor(e=defaults.WS_URL,s=2500,t={},i){_WsProvider_instances.add(this),_WsProvider_callCache.set(this,new LRUCache),_WsProvider_coder.set(this,void 0),_WsProvider_endpoints.set(this,void 0),_WsProvider_headers.set(this,void 0),_WsProvider_eventemitter.set(this,void 0),_WsProvider_handlers.set(this,{}),_WsProvider_isReadyPromise.set(this,void 0),_WsProvider_stats.set(this,void 0),_WsProvider_waitingForId.set(this,{}),_WsProvider_autoConnectMs.set(this,void 0),_WsProvider_endpointIndex.set(this,void 0),_WsProvider_endpointStats.set(this,void 0),_WsProvider_isConnected.set(this,!1),_WsProvider_subscriptions.set(this,{}),_WsProvider_timeoutId.set(this,null),_WsProvider_websocket.set(this,void 0),_WsProvider_timeout.set(this,void 0),_WsProvider_emit.set(this,((e,...s)=>{__classPrivateFieldGet(this,_WsProvider_eventemitter,"f").emit(e,...s);})),_WsProvider_onSocketClose.set(this,(e=>{const s=new Error(`disconnected from ${this.endpoint}: ${e.code}:: ${e.reason||getWSErrorString(e.code)}`);__classPrivateFieldGet(this,_WsProvider_autoConnectMs,"f")>0&&l$b.error(s.message),__classPrivateFieldSet(this,_WsProvider_isConnected,!1,"f"),__classPrivateFieldGet(this,_WsProvider_websocket,"f")&&(__classPrivateFieldGet(this,_WsProvider_websocket,"f").onclose=null,__classPrivateFieldGet(this,_WsProvider_websocket,"f").onerror=null,__classPrivateFieldGet(this,_WsProvider_websocket,"f").onmessage=null,__classPrivateFieldGet(this,_WsProvider_websocket,"f").onopen=null,__classPrivateFieldSet(this,_WsProvider_websocket,null,"f")),__classPrivateFieldGet(this,_WsProvider_timeoutId,"f")&&(clearInterval(__classPrivateFieldGet(this,_WsProvider_timeoutId,"f")),__classPrivateFieldSet(this,_WsProvider_timeoutId,null,"f")),eraseRecord(__classPrivateFieldGet(this,_WsProvider_handlers,"f"),(e=>{try{e.callback(s,void 0);}catch(e){l$b.error(e);}})),eraseRecord(__classPrivateFieldGet(this,_WsProvider_waitingForId,"f")),__classPrivateFieldSet(this,_WsProvider_endpointStats,defaultEndpointStats(),"f"),__classPrivateFieldGet(this,_WsProvider_emit,"f").call(this,"disconnected"),__classPrivateFieldGet(this,_WsProvider_autoConnectMs,"f")>0&&setTimeout((()=>{this.connectWithRetry().catch((()=>{}));}),__classPrivateFieldGet(this,_WsProvider_autoConnectMs,"f"));})),_WsProvider_onSocketError.set(this,(e=>{l$b.debug((()=>["socket error",e])),__classPrivateFieldGet(this,_WsProvider_emit,"f").call(this,"error",e);})),_WsProvider_onSocketMessage.set(this,(e=>{l$b.debug((()=>["received",e.data])),__classPrivateFieldGet(this,_WsProvider_endpointStats,"f").bytesRecv+=e.data.length,__classPrivateFieldGet(this,_WsProvider_stats,"f").total.bytesRecv+=e.data.length;const s=JSON.parse(e.data);return isUndefined(s.method)?__classPrivateFieldGet(this,_WsProvider_onSocketMessageResult,"f").call(this,s):__classPrivateFieldGet(this,_WsProvider_onSocketMessageSubscribe,"f").call(this,s)})),_WsProvider_onSocketMessageResult.set(this,(e=>{const s=__classPrivateFieldGet(this,_WsProvider_handlers,"f")[e.id];if(s){try{const{method:t,params:i,subscription:r}=s,_=__classPrivateFieldGet(this,_WsProvider_coder,"f").decodeResponse(e);if(s.callback(null,_),r){const e=`${r.type}::${_}`;__classPrivateFieldGet(this,_WsProvider_subscriptions,"f")[e]=objectSpread({},r,{method:t,params:i}),__classPrivateFieldGet(this,_WsProvider_waitingForId,"f")[e]&&__classPrivateFieldGet(this,_WsProvider_onSocketMessageSubscribe,"f").call(this,__classPrivateFieldGet(this,_WsProvider_waitingForId,"f")[e]);}}catch(e){__classPrivateFieldGet(this,_WsProvider_endpointStats,"f").errors++,__classPrivateFieldGet(this,_WsProvider_stats,"f").total.errors++,s.callback(e,void 0);}delete __classPrivateFieldGet(this,_WsProvider_handlers,"f")[e.id];}else l$b.debug((()=>`Unable to find handler for id=${e.id}`));})),_WsProvider_onSocketMessageSubscribe.set(this,(e=>{const s=`${ALIASES[e.method]||e.method||"invalid"}::${e.params.subscription}`,t=__classPrivateFieldGet(this,_WsProvider_subscriptions,"f")[s];if(!t)return __classPrivateFieldGet(this,_WsProvider_waitingForId,"f")[s]=e,void l$b.debug((()=>`Unable to find handler for subscription=${s}`));delete __classPrivateFieldGet(this,_WsProvider_waitingForId,"f")[s];try{const s=__classPrivateFieldGet(this,_WsProvider_coder,"f").decodeResponse(e);t.callback(null,s);}catch(e){__classPrivateFieldGet(this,_WsProvider_endpointStats,"f").errors++,__classPrivateFieldGet(this,_WsProvider_stats,"f").total.errors++,t.callback(e,void 0);}})),_WsProvider_onSocketOpen.set(this,(()=>{if(null===__classPrivateFieldGet(this,_WsProvider_websocket,"f"))throw new Error("WebSocket cannot be null in onOpen");return l$b.debug((()=>["connected to",this.endpoint])),__classPrivateFieldSet(this,_WsProvider_isConnected,!0,"f"),__classPrivateFieldGet(this,_WsProvider_resubscribe,"f").call(this),__classPrivateFieldGet(this,_WsProvider_emit,"f").call(this,"connected"),!0})),_WsProvider_resubscribe.set(this,(()=>{const e=__classPrivateFieldGet(this,_WsProvider_subscriptions,"f");__classPrivateFieldSet(this,_WsProvider_subscriptions,{},"f"),Promise.all(Object.keys(e).map((async s=>{const{callback:t,method:i,params:r,type:_}=e[s];if(!_.startsWith("author_"))try{await this.subscribe(_,i,r,t);}catch(e){l$b.error(e);}}))).catch(l$b.error);})),_WsProvider_timeoutHandlers.set(this,(()=>{const e=Date.now(),s=Object.keys(__classPrivateFieldGet(this,_WsProvider_handlers,"f"));for(let t=0;t<s.length;t++){const i=__classPrivateFieldGet(this,_WsProvider_handlers,"f")[s[t]];if(e-i.start>__classPrivateFieldGet(this,_WsProvider_timeout,"f")){try{i.callback(new Error(`No response received from RPC endpoint in ${__classPrivateFieldGet(this,_WsProvider_timeout,"f")/1e3}s`),void 0);}catch{}__classPrivateFieldGet(this,_WsProvider_endpointStats,"f").timeout++,__classPrivateFieldGet(this,_WsProvider_stats,"f").total.timeout++,delete __classPrivateFieldGet(this,_WsProvider_handlers,"f")[s[t]];}}}));const r=Array.isArray(e)?e:[e];if(0===r.length)throw new Error("WsProvider requires at least one Endpoint");r.forEach((e=>{if(!/^(wss|ws):\/\//.test(e))throw new Error(`Endpoint should start with 'ws://', received '${e}'`)})),__classPrivateFieldSet(this,_WsProvider_eventemitter,new EventEmitter,"f"),__classPrivateFieldSet(this,_WsProvider_autoConnectMs,s||0,"f"),__classPrivateFieldSet(this,_WsProvider_coder,new RpcCoder,"f"),__classPrivateFieldSet(this,_WsProvider_endpointIndex,-1,"f"),__classPrivateFieldSet(this,_WsProvider_endpoints,r,"f"),__classPrivateFieldSet(this,_WsProvider_headers,t,"f"),__classPrivateFieldSet(this,_WsProvider_websocket,null,"f"),__classPrivateFieldSet(this,_WsProvider_stats,{active:{requests:0,subscriptions:0},total:defaultEndpointStats()},"f"),__classPrivateFieldSet(this,_WsProvider_endpointStats,defaultEndpointStats(),"f"),__classPrivateFieldSet(this,_WsProvider_timeout,i||6e4,"f"),s>0&&this.connectWithRetry().catch((()=>{})),__classPrivateFieldSet(this,_WsProvider_isReadyPromise,new Promise((e=>{__classPrivateFieldGet(this,_WsProvider_eventemitter,"f").once("connected",(()=>{e(this);}));})),"f");}get hasSubscriptions(){return !0}get isClonable(){return !0}get isConnected(){return __classPrivateFieldGet(this,_WsProvider_isConnected,"f")}get isReady(){return __classPrivateFieldGet(this,_WsProvider_isReadyPromise,"f")}get endpoint(){return __classPrivateFieldGet(this,_WsProvider_endpoints,"f")[__classPrivateFieldGet(this,_WsProvider_endpointIndex,"f")]}clone(){return new WsProvider(__classPrivateFieldGet(this,_WsProvider_endpoints,"f"))}selectEndpointIndex(e){return (__classPrivateFieldGet(this,_WsProvider_endpointIndex,"f")+1)%e.length}async connect(){if(__classPrivateFieldGet(this,_WsProvider_websocket,"f"))throw new Error("WebSocket is already connected");try{__classPrivateFieldSet(this,_WsProvider_endpointIndex,this.selectEndpointIndex(__classPrivateFieldGet(this,_WsProvider_endpoints,"f")),"f"),__classPrivateFieldSet(this,_WsProvider_websocket,void 0!==xglobal.WebSocket&&isChildClass(xglobal.WebSocket,WebSocket)?new WebSocket(this.endpoint):new WebSocket(this.endpoint,void 0,{headers:__classPrivateFieldGet(this,_WsProvider_headers,"f")}),"f"),__classPrivateFieldGet(this,_WsProvider_websocket,"f")&&(__classPrivateFieldGet(this,_WsProvider_websocket,"f").onclose=__classPrivateFieldGet(this,_WsProvider_onSocketClose,"f"),__classPrivateFieldGet(this,_WsProvider_websocket,"f").onerror=__classPrivateFieldGet(this,_WsProvider_onSocketError,"f"),__classPrivateFieldGet(this,_WsProvider_websocket,"f").onmessage=__classPrivateFieldGet(this,_WsProvider_onSocketMessage,"f"),__classPrivateFieldGet(this,_WsProvider_websocket,"f").onopen=__classPrivateFieldGet(this,_WsProvider_onSocketOpen,"f")),__classPrivateFieldSet(this,_WsProvider_timeoutId,setInterval((()=>__classPrivateFieldGet(this,_WsProvider_timeoutHandlers,"f").call(this)),5e3),"f");}catch(e){throw l$b.error(e),__classPrivateFieldGet(this,_WsProvider_emit,"f").call(this,"error",e),e}}async connectWithRetry(){if(__classPrivateFieldGet(this,_WsProvider_autoConnectMs,"f")>0)try{await this.connect();}catch(e){setTimeout((()=>{this.connectWithRetry().catch((()=>{}));}),__classPrivateFieldGet(this,_WsProvider_autoConnectMs,"f"));}}async disconnect(){__classPrivateFieldSet(this,_WsProvider_autoConnectMs,0,"f");try{__classPrivateFieldGet(this,_WsProvider_websocket,"f")&&__classPrivateFieldGet(this,_WsProvider_websocket,"f").close(1e3);}catch(e){throw l$b.error(e),__classPrivateFieldGet(this,_WsProvider_emit,"f").call(this,"error",e),e}}get stats(){return {active:{requests:Object.keys(__classPrivateFieldGet(this,_WsProvider_handlers,"f")).length,subscriptions:Object.keys(__classPrivateFieldGet(this,_WsProvider_subscriptions,"f")).length},total:__classPrivateFieldGet(this,_WsProvider_stats,"f").total}}get endpointStats(){return __classPrivateFieldGet(this,_WsProvider_endpointStats,"f")}on(e,s){return __classPrivateFieldGet(this,_WsProvider_eventemitter,"f").on(e,s),()=>{__classPrivateFieldGet(this,_WsProvider_eventemitter,"f").removeListener(e,s);}}send(e,s,t,i){__classPrivateFieldGet(this,_WsProvider_endpointStats,"f").requests++,__classPrivateFieldGet(this,_WsProvider_stats,"f").total.requests++;const[r,_]=__classPrivateFieldGet(this,_WsProvider_coder,"f").encodeJson(e,s);let o=t?__classPrivateFieldGet(this,_WsProvider_callCache,"f").get(_):null;return o?(__classPrivateFieldGet(this,_WsProvider_endpointStats,"f").cached++,__classPrivateFieldGet(this,_WsProvider_stats,"f").total.cached++):(o=__classPrivateFieldGet(this,_WsProvider_instances,"m",_WsProvider_send).call(this,r,_,e,s,i),t&&__classPrivateFieldGet(this,_WsProvider_callCache,"f").set(_,o)),o}subscribe(e,s,t,i){return __classPrivateFieldGet(this,_WsProvider_endpointStats,"f").subscriptions++,__classPrivateFieldGet(this,_WsProvider_stats,"f").total.subscriptions++,this.send(s,t,!1,{callback:i,type:e})}async unsubscribe(e,s,t){const i=`${e}::${t}`;if(isUndefined(__classPrivateFieldGet(this,_WsProvider_subscriptions,"f")[i]))return l$b.debug((()=>`Unable to find active subscription=${i}`)),!1;delete __classPrivateFieldGet(this,_WsProvider_subscriptions,"f")[i];try{return !(this.isConnected&&!isNull(__classPrivateFieldGet(this,_WsProvider_websocket,"f")))||this.send(s,[t])}catch(e){return !1}}}_WsProvider_callCache=new WeakMap,_WsProvider_coder=new WeakMap,_WsProvider_endpoints=new WeakMap,_WsProvider_headers=new WeakMap,_WsProvider_eventemitter=new WeakMap,_WsProvider_handlers=new WeakMap,_WsProvider_isReadyPromise=new WeakMap,_WsProvider_stats=new WeakMap,_WsProvider_waitingForId=new WeakMap,_WsProvider_autoConnectMs=new WeakMap,_WsProvider_endpointIndex=new WeakMap,_WsProvider_endpointStats=new WeakMap,_WsProvider_isConnected=new WeakMap,_WsProvider_subscriptions=new WeakMap,_WsProvider_timeoutId=new WeakMap,_WsProvider_websocket=new WeakMap,_WsProvider_timeout=new WeakMap,_WsProvider_emit=new WeakMap,_WsProvider_onSocketClose=new WeakMap,_WsProvider_onSocketError=new WeakMap,_WsProvider_onSocketMessage=new WeakMap,_WsProvider_onSocketMessageResult=new WeakMap,_WsProvider_onSocketMessageSubscribe=new WeakMap,_WsProvider_onSocketOpen=new WeakMap,_WsProvider_resubscribe=new WeakMap,_WsProvider_timeoutHandlers=new WeakMap,_WsProvider_instances=new WeakSet,_WsProvider_send=async function(e,s,t,i,r){return new Promise(((_,o)=>{try{if(!this.isConnected||null===__classPrivateFieldGet(this,_WsProvider_websocket,"f"))throw new Error("WebSocket is not connected");const a=(e,s)=>{e?o(e):_(s);};l$b.debug((()=>["calling",t,s])),__classPrivateFieldGet(this,_WsProvider_handlers,"f")[e]={callback:a,method:t,params:i,start:Date.now(),subscription:r},__classPrivateFieldGet(this,_WsProvider_endpointStats,"f").bytesSent+=s.length,__classPrivateFieldGet(this,_WsProvider_stats,"f").total.bytesSent+=s.length,__classPrivateFieldGet(this,_WsProvider_websocket,"f").send(s);}catch(e){__classPrivateFieldGet(this,_WsProvider_endpointStats,"f").errors++,__classPrivateFieldGet(this,_WsProvider_stats,"f").total.errors++,o(e);}}))};

	function isFunction(n){return "function"==typeof n}

	function createErrorClass(r){var t=r((function(r){Error.call(r),r.stack=(new Error).stack;}));return t.prototype=Object.create(Error.prototype),t.prototype.constructor=t,t}

	var UnsubscriptionError=createErrorClass((function(r){return function(n){r(this),this.message=n?n.length+" errors occurred during unsubscription:\n"+n.map((function(r,n){return n+1+") "+r.toString()})).join("\n  "):"",this.name="UnsubscriptionError",this.errors=n;}}));

	function arrRemove(e,i){if(e){var r=e.indexOf(i);0<=r&&e.splice(r,1);}}

	var Subscription=function(){function r(r){this.initialTeardown=r,this.closed=!1,this._parentage=null,this._finalizers=null;}var i;return r.prototype.unsubscribe=function(){var r,i,e,t,n;if(!this.closed){this.closed=!0;var a=this._parentage;if(a)if(this._parentage=null,Array.isArray(a))try{for(var o=__values(a),s=o.next();!s.done;s=o.next()){s.value.remove(this);}}catch(i){r={error:i};}finally{try{s&&!s.done&&(i=o.return)&&i.call(o);}finally{if(r)throw r.error}}else a.remove(this);var u=this.initialTeardown;if(isFunction(u))try{u();}catch(r){n=r instanceof UnsubscriptionError?r.errors:[r];}var c=this._finalizers;if(c){this._finalizers=null;try{for(var l=__values(c),f=l.next();!f.done;f=l.next()){var p=f.value;try{execFinalizer(p);}catch(r){n=null!=n?n:[],r instanceof UnsubscriptionError?n=__spreadArray(__spreadArray([],__read(n)),__read(r.errors)):n.push(r);}}}catch(r){e={error:r};}finally{try{f&&!f.done&&(t=l.return)&&t.call(l);}finally{if(e)throw e.error}}}if(n)throw new UnsubscriptionError(n)}},r.prototype.add=function(i){var e;if(i&&i!==this)if(this.closed)execFinalizer(i);else {if(i instanceof r){if(i.closed||i._hasParent(this))return;i._addParent(this);}(this._finalizers=null!==(e=this._finalizers)&&void 0!==e?e:[]).push(i);}},r.prototype._hasParent=function(r){var i=this._parentage;return i===r||Array.isArray(i)&&i.includes(r)},r.prototype._addParent=function(r){var i=this._parentage;this._parentage=Array.isArray(i)?(i.push(r),i):i?[i,r]:r;},r.prototype._removeParent=function(r){var i=this._parentage;i===r?this._parentage=null:Array.isArray(i)&&arrRemove(i,r);},r.prototype.remove=function(i){var e=this._finalizers;e&&arrRemove(e,i),i instanceof r&&i._removeParent(this);},r.EMPTY=((i=new r).closed=!0,i),r}();var EMPTY_SUBSCRIPTION=Subscription.EMPTY;function isSubscription(r){return r instanceof Subscription||r&&"closed"in r&&isFunction(r.remove)&&isFunction(r.add)&&isFunction(r.unsubscribe)}function execFinalizer(r){isFunction(r)?r():r.unsubscribe();}

	var config={onUnhandledError:null,onStoppedNotification:null,Promise:void 0,useDeprecatedSynchronousErrorHandling:!1,useDeprecatedNextContext:!1};

	var timeoutProvider={setTimeout:function(e,r){for(var t=[],o=2;o<arguments.length;o++)t[o-2]=arguments[o];var a=timeoutProvider.delegate;return (null==a?void 0:a.setTimeout)?a.setTimeout.apply(a,__spreadArray([e,r],__read(t))):setTimeout.apply(void 0,__spreadArray([e,r],__read(t)))},clearTimeout:function(e){var r=timeoutProvider.delegate;return ((null==r?void 0:r.clearTimeout)||clearTimeout)(e)},delegate:void 0};

	function reportUnhandledError(o){timeoutProvider.setTimeout((function(){throw o;}));}

	function noop(){}

	function errorContext(r){r();}

	var Subscriber=function(t){function r(r){var o=t.call(this)||this;return o.isStopped=!1,r?(o.destination=r,isSubscription(r)&&r.add(o)):o.destination=EMPTY_OBSERVER,o}return __extends(r,t),r.create=function(t,r,o){return new SafeSubscriber(t,r,o)},r.prototype.next=function(t){this.isStopped?handleStoppedNotification():this._next(t);},r.prototype.error=function(t){this.isStopped?handleStoppedNotification():(this.isStopped=!0,this._error(t));},r.prototype.complete=function(){this.isStopped?handleStoppedNotification():(this.isStopped=!0,this._complete());},r.prototype.unsubscribe=function(){this.closed||(this.isStopped=!0,t.prototype.unsubscribe.call(this),this.destination=null);},r.prototype._next=function(t){this.destination.next(t);},r.prototype._error=function(t){try{this.destination.error(t);}finally{this.unsubscribe();}},r.prototype._complete=function(){try{this.destination.complete();}finally{this.unsubscribe();}},r}(Subscription);var _bind=Function.prototype.bind;function bind(t,r){return _bind.call(t,r)}var ConsumerObserver=function(){function t(t){this.partialObserver=t;}return t.prototype.next=function(t){var r=this.partialObserver;if(r.next)try{r.next(t);}catch(t){handleUnhandledError(t);}},t.prototype.error=function(t){var r=this.partialObserver;if(r.error)try{r.error(t);}catch(t){handleUnhandledError(t);}else handleUnhandledError(t);},t.prototype.complete=function(){var t=this.partialObserver;if(t.complete)try{t.complete();}catch(t){handleUnhandledError(t);}},t}(),SafeSubscriber=function(t){function r(r,o,e){var i,n,c=t.call(this)||this;isFunction(r)||!r?i={next:null!=r?r:void 0,error:null!=o?o:void 0,complete:null!=e?e:void 0}:c&&config.useDeprecatedNextContext?((n=Object.create(r)).unsubscribe=function(){return c.unsubscribe()},i={next:r.next&&bind(r.next,n),error:r.error&&bind(r.error,n),complete:r.complete&&bind(r.complete,n)}):i=r;return c.destination=new ConsumerObserver(i),c}return __extends(r,t),r}(Subscriber);function handleUnhandledError(t){reportUnhandledError(t);}function defaultErrorHandler(t){throw t}function handleStoppedNotification(t,r){}var EMPTY_OBSERVER={closed:!0,next:noop,error:defaultErrorHandler,complete:noop};

	var observable="function"==typeof Symbol&&Symbol.observable||"@@observable";

	function identity$2(t){return t}

	function pipeFromArray(r){return 0===r.length?identity$2:1===r.length?r[0]:function(t){return r.reduce((function(r,t){return t(r)}),t)}}

	var Observable=function(){function r(r){r&&(this._subscribe=r);}return r.prototype.lift=function(t){var e=new r;return e.source=this,e.operator=t,e},r.prototype.subscribe=function(r,t,e){var o=this,i=isSubscriber(r)?r:new SafeSubscriber(r,t,e);return errorContext((function(){var r=o,t=r.operator,e=r.source;i.add(t?t.call(i,e):e?o._subscribe(i):o._trySubscribe(i));})),i},r.prototype._trySubscribe=function(r){try{return this._subscribe(r)}catch(t){r.error(t);}},r.prototype.forEach=function(r,t){var e=this;return new(t=getPromiseCtor(t))((function(t,o){var i=new SafeSubscriber({next:function(t){try{r(t);}catch(r){o(r),i.unsubscribe();}},error:o,complete:t});e.subscribe(i);}))},r.prototype._subscribe=function(r){var t;return null===(t=this.source)||void 0===t?void 0:t.subscribe(r)},r.prototype[observable]=function(){return this},r.prototype.pipe=function(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];return pipeFromArray(r)(this)},r.prototype.toPromise=function(r){var t=this;return new(r=getPromiseCtor(r))((function(r,e){var o;t.subscribe((function(r){return o=r}),(function(r){return e(r)}),(function(){return r(o)}));}))},r.create=function(t){return new r(t)},r}();function getPromiseCtor(r){var t;return null!==(t=null!=r?r:config.Promise)&&void 0!==t?t:Promise}function isObserver(r){return r&&isFunction(r.next)&&isFunction(r.error)&&isFunction(r.complete)}function isSubscriber(r){return r&&r instanceof Subscriber||isObserver(r)&&isSubscription(r)}

	function hasLift(t){return isFunction(null==t?void 0:t.lift)}function operate(t){return function(n){if(hasLift(n))return n.lift((function(n){try{return t(n,this)}catch(t){this.error(t);}}));throw new TypeError("Unable to lift unknown Observable type")}}

	function createOperatorSubscriber(r,t,e,i,o){return new OperatorSubscriber(r,t,e,i,o)}var OperatorSubscriber=function(r){function t(t,e,i,o,s,n){var c=r.call(this,t)||this;return c.onFinalize=s,c.shouldUnsubscribe=n,c._next=e?function(r){try{e(r);}catch(r){t.error(r);}}:r.prototype._next,c._error=o?function(r){try{o(r);}catch(r){t.error(r);}finally{this.unsubscribe();}}:r.prototype._error,c._complete=i?function(){try{i();}catch(r){t.error(r);}finally{this.unsubscribe();}}:r.prototype._complete,c}return __extends(t,r),t.prototype.unsubscribe=function(){var t;if(!this.shouldUnsubscribe||this.shouldUnsubscribe()){var e=this.closed;r.prototype.unsubscribe.call(this),!e&&(null===(t=this.onFinalize)||void 0===t||t.call(this));}},t}(Subscriber);

	function refCount(){return operate((function(r,e){var o=null;r._refCount++;var t=createOperatorSubscriber(e,void 0,void 0,void 0,(function(){if(!r||r._refCount<=0||0<--r._refCount)o=null;else {var t=r._connection,n=o;o=null,!t||n&&t!==n||t.unsubscribe(),e.unsubscribe();}}));r.subscribe(t),t.closed||(o=r.connect());}))}

	var ConnectableObservable=function(t){function r(r,e){var o=t.call(this)||this;return o.source=r,o.subjectFactory=e,o._subject=null,o._refCount=0,o._connection=null,hasLift(r)&&(o.lift=r.lift),o}return __extends(r,t),r.prototype._subscribe=function(t){return this.getSubject().subscribe(t)},r.prototype.getSubject=function(){var t=this._subject;return t&&!t.isStopped||(this._subject=this.subjectFactory()),this._subject},r.prototype._teardown=function(){this._refCount=0;var t=this._connection;this._subject=this._connection=null,null==t||t.unsubscribe();},r.prototype.connect=function(){var t=this,r=this._connection;if(!r){r=this._connection=new Subscription;var e=this.getSubject();r.add(this.source.subscribe(createOperatorSubscriber(e,void 0,(function(){t._teardown(),e.complete();}),(function(r){t._teardown(),e.error(r);}),(function(){return t._teardown()})))),r.closed&&(this._connection=null,r=Subscription.EMPTY);}return r},r.prototype.refCount=function(){return refCount()(this)},r}(Observable);

	var ObjectUnsubscribedError=createErrorClass((function(r){return function(){r(this),this.name="ObjectUnsubscribedError",this.message="object unsubscribed";}}));

	var Subject=function(r){function t(){var t=r.call(this)||this;return t.closed=!1,t.currentObservers=null,t.observers=[],t.isStopped=!1,t.hasError=!1,t.thrownError=null,t}return __extends(t,r),t.prototype.lift=function(r){var t=new AnonymousSubject(this,this);return t.operator=r,t},t.prototype._throwIfClosed=function(){if(this.closed)throw new ObjectUnsubscribedError},t.prototype.next=function(r){var t=this;errorContext((function(){var e,o;if(t._throwIfClosed(),!t.isStopped){t.currentObservers||(t.currentObservers=Array.from(t.observers));try{for(var n=__values(t.currentObservers),s=n.next();!s.done;s=n.next()){s.value.next(r);}}catch(r){e={error:r};}finally{try{s&&!s.done&&(o=n.return)&&o.call(n);}finally{if(e)throw e.error}}}}));},t.prototype.error=function(r){var t=this;errorContext((function(){if(t._throwIfClosed(),!t.isStopped){t.hasError=t.isStopped=!0,t.thrownError=r;for(var e=t.observers;e.length;)e.shift().error(r);}}));},t.prototype.complete=function(){var r=this;errorContext((function(){if(r._throwIfClosed(),!r.isStopped){r.isStopped=!0;for(var t=r.observers;t.length;)t.shift().complete();}}));},t.prototype.unsubscribe=function(){this.isStopped=this.closed=!0,this.observers=this.currentObservers=null;},Object.defineProperty(t.prototype,"observed",{get:function(){var r;return (null===(r=this.observers)||void 0===r?void 0:r.length)>0},enumerable:!1,configurable:!0}),t.prototype._trySubscribe=function(t){return this._throwIfClosed(),r.prototype._trySubscribe.call(this,t)},t.prototype._subscribe=function(r){return this._throwIfClosed(),this._checkFinalizedStatuses(r),this._innerSubscribe(r)},t.prototype._innerSubscribe=function(r){var t=this,e=this,o=e.hasError,n=e.isStopped,s=e.observers;return o||n?EMPTY_SUBSCRIPTION:(this.currentObservers=null,s.push(r),new Subscription((function(){t.currentObservers=null,arrRemove(s,r);})))},t.prototype._checkFinalizedStatuses=function(r){var t=this,e=t.hasError,o=t.thrownError,n=t.isStopped;e?r.error(o):n&&r.complete();},t.prototype.asObservable=function(){var r=new Observable;return r.source=this,r},t.create=function(r,t){return new AnonymousSubject(r,t)},t}(Observable);var AnonymousSubject=function(r){function t(t,e){var o=r.call(this)||this;return o.destination=t,o.source=e,o}return __extends(t,r),t.prototype.next=function(r){var t,e;null===(e=null===(t=this.destination)||void 0===t?void 0:t.next)||void 0===e||e.call(t,r);},t.prototype.error=function(r){var t,e;null===(e=null===(t=this.destination)||void 0===t?void 0:t.error)||void 0===e||e.call(t,r);},t.prototype.complete=function(){var r,t;null===(t=null===(r=this.destination)||void 0===r?void 0:r.complete)||void 0===t||t.call(r);},t.prototype._subscribe=function(r){var t,e;return null!==(e=null===(t=this.source)||void 0===t?void 0:t.subscribe(r))&&void 0!==e?e:EMPTY_SUBSCRIPTION},t}(Subject);

	var BehaviorSubject=function(t){function e(e){var r=t.call(this)||this;return r._value=e,r}return __extends(e,t),Object.defineProperty(e.prototype,"value",{get:function(){return this.getValue()},enumerable:!1,configurable:!0}),e.prototype._subscribe=function(e){var r=t.prototype._subscribe.call(this,e);return !r.closed&&e.next(this._value),r},e.prototype.getValue=function(){var t=this,e=t.hasError,r=t.thrownError,o=t._value;if(e)throw r;return this._throwIfClosed(),o},e.prototype.next=function(e){t.prototype.next.call(this,this._value=e);},e}(Subject);

	var dateTimestampProvider={now:function(){return (dateTimestampProvider.delegate||Date).now()},delegate:void 0};

	var ReplaySubject=function(i){function e(e,t,r){void 0===e&&(e=1/0),void 0===t&&(t=1/0),void 0===r&&(r=dateTimestampProvider);var n=i.call(this)||this;return n._bufferSize=e,n._windowTime=t,n._timestampProvider=r,n._buffer=[],n._infiniteTimeWindow=!0,n._infiniteTimeWindow=t===1/0,n._bufferSize=Math.max(1,e),n._windowTime=Math.max(1,t),n}return __extends(e,i),e.prototype.next=function(e){var t=this,r=t.isStopped,n=t._buffer,o=t._infiniteTimeWindow,f=t._timestampProvider,s=t._windowTime;r||(n.push(e),!o&&n.push(f.now()+s)),this._trimBuffer(),i.prototype.next.call(this,e);},e.prototype._subscribe=function(i){this._throwIfClosed(),this._trimBuffer();for(var e=this._innerSubscribe(i),t=this._infiniteTimeWindow,r=this._buffer.slice(),n=0;n<r.length&&!i.closed;n+=t?1:2)i.next(r[n]);return this._checkFinalizedStatuses(i),e},e.prototype._trimBuffer=function(){var i=this,e=i._bufferSize,t=i._timestampProvider,r=i._buffer,n=i._infiniteTimeWindow,o=(n?1:2)*e;if(e<1/0&&o<r.length&&r.splice(0,r.length-o),!n){for(var f=t.now(),s=0,m=1;m<r.length&&r[m]<=f;m+=2)s=m;s&&r.splice(0,s+1);}},e}(Subject);

	var Action=function(t){function i(i,n){return t.call(this)||this}return __extends(i,t),i.prototype.schedule=function(t,i){return this},i}(Subscription);

	var intervalProvider={setInterval:function(r,e){for(var a=[],t=2;t<arguments.length;t++)a[t-2]=arguments[t];var l=intervalProvider.delegate;return (null==l?void 0:l.setInterval)?l.setInterval.apply(l,__spreadArray([r,e],__read(a))):setInterval.apply(void 0,__spreadArray([r,e],__read(a)))},clearInterval:function(r){var e=intervalProvider.delegate;return ((null==e?void 0:e.clearInterval)||clearInterval)(r)},delegate:void 0};

	var AsyncAction=function(t){function i(i,e){var r=t.call(this,i,e)||this;return r.scheduler=i,r.work=e,r.pending=!1,r}return __extends(i,t),i.prototype.schedule=function(t,i){var e;if(void 0===i&&(i=0),this.closed)return this;this.state=t;var r=this.id,n=this.scheduler;return null!=r&&(this.id=this.recycleAsyncId(n,r,i)),this.pending=!0,this.delay=i,this.id=null!==(e=this.id)&&void 0!==e?e:this.requestAsyncId(n,this.id,i),this},i.prototype.requestAsyncId=function(t,i,e){return void 0===e&&(e=0),intervalProvider.setInterval(t.flush.bind(t,this),e)},i.prototype.recycleAsyncId=function(t,i,e){if(void 0===e&&(e=0),null!=e&&this.delay===e&&!1===this.pending)return i;null!=i&&intervalProvider.clearInterval(i);},i.prototype.execute=function(t,i){if(this.closed)return new Error("executing a cancelled action");this.pending=!1;var e=this._execute(t,i);if(e)return e;!1===this.pending&&null!=this.id&&(this.id=this.recycleAsyncId(this.scheduler,this.id,null));},i.prototype._execute=function(t,i){var e,r=!1;try{this.work(t);}catch(t){r=!0,e=t||new Error("Scheduled action threw falsy error");}if(r)return this.unsubscribe(),e},i.prototype.unsubscribe=function(){if(!this.closed){var i=this.id,e=this.scheduler,r=e.actions;this.work=this.state=this.scheduler=null,this.pending=!1,arrRemove(r,this),null!=i&&(this.id=this.recycleAsyncId(e,i,null)),this.delay=null,t.prototype.unsubscribe.call(this);}},i}(Action);

	var resolved,nextHandle=1,activeHandles={};function findAndClearHandle(e){return e in activeHandles&&(delete activeHandles[e],!0)}var Immediate={setImmediate:function(e){var n=nextHandle++;return activeHandles[n]=!0,resolved||(resolved=Promise.resolve()),resolved.then((function(){return findAndClearHandle(n)&&e()})),n},clearImmediate:function(e){findAndClearHandle(e);}};

	var setImmediate=Immediate.setImmediate,clearImmediate=Immediate.clearImmediate;var immediateProvider={setImmediate:function(){for(var e=[],m=0;m<arguments.length;m++)e[m]=arguments[m];var a=immediateProvider.delegate;return ((null==a?void 0:a.setImmediate)||setImmediate).apply(void 0,__spreadArray([],__read(e)))},clearImmediate:function(e){var m=immediateProvider.delegate;return ((null==m?void 0:m.clearImmediate)||clearImmediate)(e)},delegate:void 0};

	var AsapAction=function(e){function t(t,i){var r=e.call(this,t,i)||this;return r.scheduler=t,r.work=i,r}return __extends(t,e),t.prototype.requestAsyncId=function(t,i,r){return void 0===r&&(r=0),null!==r&&r>0?e.prototype.requestAsyncId.call(this,t,i,r):(t.actions.push(this),t._scheduled||(t._scheduled=immediateProvider.setImmediate(t.flush.bind(t,void 0))))},t.prototype.recycleAsyncId=function(t,i,r){var o;if(void 0===r&&(r=0),null!=r?r>0:this.delay>0)return e.prototype.recycleAsyncId.call(this,t,i,r);var n=t.actions;null!=i&&(null===(o=n[n.length-1])||void 0===o?void 0:o.id)!==i&&(immediateProvider.clearImmediate(i),t._scheduled=void 0);},t}(AsyncAction);

	var Scheduler=function(){function e(t,r){void 0===r&&(r=e.now),this.schedulerActionCtor=t,this.now=r;}return e.prototype.schedule=function(e,t,r){return void 0===t&&(t=0),new this.schedulerActionCtor(this,e).schedule(r,t)},e.now=dateTimestampProvider.now,e}();

	var AsyncScheduler=function(e){function t(t,i){void 0===i&&(i=Scheduler.now);var r=e.call(this,t,i)||this;return r.actions=[],r._active=!1,r}return __extends(t,e),t.prototype.flush=function(e){var t=this.actions;if(this._active)t.push(e);else {var i;this._active=!0;do{if(i=e.execute(e.state,e.delay))break}while(e=t.shift());if(this._active=!1,i){for(;e=t.shift();)e.unsubscribe();throw i}}},t}(Scheduler);

	var AsapScheduler=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return __extends(t,e),t.prototype.flush=function(e){this._active=!0;var t=this._scheduled;this._scheduled=void 0;var i,s=this.actions;e=e||s.shift();do{if(i=e.execute(e.state,e.delay))break}while((e=s[0])&&e.id===t&&s.shift());if(this._active=!1,i){for(;(e=s[0])&&e.id===t&&s.shift();)e.unsubscribe();throw i}},t}(AsyncScheduler);

	var asapScheduler=new AsapScheduler(AsapAction);

	var EMPTY=new Observable((function(e){return e.complete()}));

	function isScheduler(i){return i&&isFunction(i.schedule)}

	function last(o){return o[o.length-1]}function popResultSelector(o){return isFunction(last(o))?o.pop():void 0}function popScheduler(o){return isScheduler(last(o))?o.pop():void 0}

	var isArrayLike$1=function(e){return e&&"number"==typeof e.length&&"function"!=typeof e};

	function isPromise(i){return isFunction(null==i?void 0:i.then)}

	function isInteropObservable(o){return isFunction(o[observable])}

	function isAsyncIterable(n){return Symbol.asyncIterator&&isFunction(null==n?void 0:n[Symbol.asyncIterator])}

	function createInvalidObservableTypeError(e){return new TypeError("You provided "+(null!==e&&"object"==typeof e?"an invalid object":"'"+e+"'")+" where a stream was expected. You can provide an Observable, Promise, ReadableStream, Array, AsyncIterable, or Iterable.")}

	function getSymbolIterator(){return "function"==typeof Symbol&&Symbol.iterator?Symbol.iterator:"@@iterator"}var iterator=getSymbolIterator();

	function isIterable(o){return isFunction(null==o?void 0:o[iterator])}

	function readableStreamLikeToAsyncGenerator(e){return __asyncGenerator(this,arguments,(function(){var r,t,a;return __generator(this,(function(n){switch(n.label){case 0:r=e.getReader(),n.label=1;case 1:n.trys.push([1,,9,10]),n.label=2;case 2:return [4,__await(r.read())];case 3:return t=n.sent(),a=t.value,t.done?[4,__await(void 0)]:[3,5];case 4:return [2,n.sent()];case 5:return [4,__await(a)];case 6:return [4,n.sent()];case 7:return n.sent(),[3,2];case 8:return [3,10];case 9:return r.releaseLock(),[7];case 10:return [2]}}))}))}function isReadableStreamLike(e){return isFunction(null==e?void 0:e.getReader)}

	function innerFrom(r){if(r instanceof Observable)return r;if(null!=r){if(isInteropObservable(r))return fromInteropObservable(r);if(isArrayLike$1(r))return fromArrayLike(r);if(isPromise(r))return fromPromise(r);if(isAsyncIterable(r))return fromAsyncIterable(r);if(isIterable(r))return fromIterable(r);if(isReadableStreamLike(r))return fromReadableStreamLike(r)}throw createInvalidObservableTypeError(r)}function fromInteropObservable(r){return new Observable((function(e){var t=r[observable]();if(isFunction(t.subscribe))return t.subscribe(e);throw new TypeError("Provided object does not correctly implement Symbol.observable")}))}function fromArrayLike(r){return new Observable((function(e){for(var t=0;t<r.length&&!e.closed;t++)e.next(r[t]);e.complete();}))}function fromPromise(r){return new Observable((function(e){r.then((function(r){e.closed||(e.next(r),e.complete());}),(function(r){return e.error(r)})).then(null,reportUnhandledError);}))}function fromIterable(r){return new Observable((function(e){var t,o;try{for(var n=__values(r),a=n.next();!a.done;a=n.next()){var i=a.value;if(e.next(i),e.closed)return}}catch(r){t={error:r};}finally{try{a&&!a.done&&(o=n.return)&&o.call(n);}finally{if(t)throw t.error}}e.complete();}))}function fromAsyncIterable(r){return new Observable((function(e){process(r,e).catch((function(r){return e.error(r)}));}))}function fromReadableStreamLike(r){return fromAsyncIterable(readableStreamLikeToAsyncGenerator(r))}function process(r,e){var t,o,n,a;return __awaiter(this,void 0,void 0,(function(){var i,s;return __generator(this,(function(l){switch(l.label){case 0:l.trys.push([0,5,6,11]),t=__asyncValues(r),l.label=1;case 1:return [4,t.next()];case 2:if((o=l.sent()).done)return [3,4];if(i=o.value,e.next(i),e.closed)return [2];l.label=3;case 3:return [3,1];case 4:return [3,11];case 5:return s=l.sent(),n={error:s},[3,11];case 6:return l.trys.push([6,,9,10]),o&&!o.done&&(a=t.return)?[4,a.call(t)]:[3,8];case 7:l.sent(),l.label=8;case 8:return [3,10];case 9:if(n)throw n.error;return [7];case 10:return [7];case 11:return e.complete(),[2]}}))}))}

	function executeSchedule(e,u,d,i,c){void 0===i&&(i=0),void 0===c&&(c=!1);var n=u.schedule((function(){d(),c?e.add(this.schedule(null,i)):this.unsubscribe();}),i);if(e.add(n),!c)return n}

	function observeOn(e,r){return void 0===r&&(r=0),operate((function(t,u){t.subscribe(createOperatorSubscriber(u,(function(t){return executeSchedule(u,e,(function(){return u.next(t)}),r)}),(function(){return executeSchedule(u,e,(function(){return u.complete()}),r)}),(function(t){return executeSchedule(u,e,(function(){return u.error(t)}),r)})));}))}

	function subscribeOn(e,r){return void 0===r&&(r=0),operate((function(t,i){i.add(e.schedule((function(){return t.subscribe(i)}),r));}))}

	function scheduleObservable(r,e){return innerFrom(r).pipe(subscribeOn(e),observeOn(e))}

	function schedulePromise(r,e){return innerFrom(r).pipe(subscribeOn(e),observeOn(e))}

	function scheduleArray(e,r){return new Observable((function(n){var t=0;return r.schedule((function(){t===e.length?n.complete():(n.next(e[t++]),n.closed||this.schedule());}))}))}

	function scheduleIterable(e,r){return new Observable((function(t){var o;return executeSchedule(t,r,(function(){o=e[iterator](),executeSchedule(t,r,(function(){var e,r,n;try{r=(e=o.next()).value,n=e.done;}catch(e){return void t.error(e)}n?t.complete():t.next(r);}),0,!0);})),function(){return isFunction(null==o?void 0:o.return)&&o.return()}}))}

	function scheduleAsyncIterable(e,t){if(!e)throw new Error("Iterable cannot be null");return new Observable((function(n){executeSchedule(n,t,(function(){var r=e[Symbol.asyncIterator]();executeSchedule(n,t,(function(){r.next().then((function(e){e.done?n.complete():n.next(e.value);}));}),0,!0);}));}))}

	function scheduleReadableStreamLike(e,r){return scheduleAsyncIterable(readableStreamLikeToAsyncGenerator(e),r)}

	function scheduled(e,r){if(null!=e){if(isInteropObservable(e))return scheduleObservable(e,r);if(isArrayLike$1(e))return scheduleArray(e,r);if(isPromise(e))return schedulePromise(e,r);if(isAsyncIterable(e))return scheduleAsyncIterable(e,r);if(isIterable(e))return scheduleIterable(e,r);if(isReadableStreamLike(e))return scheduleReadableStreamLike(e,r)}throw createInvalidObservableTypeError(e)}

	function from(r,e){return e?scheduled(r,e):innerFrom(r)}

	function of(){for(var r=[],o=0;o<arguments.length;o++)r[o]=arguments[o];var f=popScheduler(r);return from(r,f)}

	var EmptyError=createErrorClass((function(r){return function(){r(this),this.name="EmptyError",this.message="no elements in sequence";}}));

	function firstValueFrom(r,e){var o="object"==typeof e;return new Promise((function(t,u){var i=new SafeSubscriber({next:function(r){t(r),i.unsubscribe();},error:u,complete:function(){o?t(e.defaultValue):u(new EmptyError);}});r.subscribe(i);}))}

	function map(r,e){return operate((function(t,o){var i=0;t.subscribe(createOperatorSubscriber(o,(function(t){o.next(r.call(e,t,i++));})));}))}

	var isArray$1=Array.isArray;function callOrApply(r,a){return isArray$1(a)?r.apply(void 0,__spreadArray([],__read(a))):r(a)}function mapOneOrManyArgs(r){return map((function(a){return callOrApply(r,a)}))}

	var isArray=Array.isArray,getPrototypeOf=Object.getPrototypeOf,objectProto=Object.prototype,getKeys=Object.keys;function argsArgArrayOrObject(r){if(1===r.length){var t=r[0];if(isArray(t))return {args:t,keys:null};if(isPOJO(t)){var e=getKeys(t);return {args:e.map((function(r){return t[r]})),keys:e}}}return {args:r,keys:null}}function isPOJO(r){return r&&"object"==typeof r&&getPrototypeOf(r)===objectProto}

	function createObject(e,r){return e.reduce((function(e,t,n){return e[t]=r[n],e}),{})}

	function combineLatest(){for(var e=[],r=0;r<arguments.length;r++)e[r]=arguments[r];var t=popScheduler(e),o=popResultSelector(e),i=argsArgArrayOrObject(e),n=i.args,c=i.keys;if(0===n.length)return from([],t);var a=new Observable(combineLatestInit(n,t,c?function(e){return createObject(c,e)}:identity$2));return o?a.pipe(mapOneOrManyArgs(o)):a}function combineLatestInit(e,r,t){return void 0===t&&(t=identity$2),function(o){maybeSchedule(r,(function(){for(var i=e.length,n=new Array(i),c=i,a=i,u=function(i){maybeSchedule(r,(function(){var u=from(e[i],r),m=!1;u.subscribe(createOperatorSubscriber(o,(function(e){n[i]=e,m||(m=!0,a--),a||o.next(t(n.slice()));}),(function(){--c||o.complete();})));}),o);},m=0;m<i;m++)u(m);}),o);}}function maybeSchedule(e,r,t){e?executeSchedule(t,e,r):r();}

	function mergeInternals(r,e,n,t,o,u,c,i){var f=[],a=0,b=0,l=!1,s=function(){!l||f.length||a||e.complete();},m=function(r){return a<t?p(r):f.push(r)},p=function(r){u&&e.next(r),a++;var i=!1;innerFrom(n(r,b++)).subscribe(createOperatorSubscriber(e,(function(r){null==o||o(r),u?m(r):e.next(r);}),(function(){i=!0;}),void 0,(function(){if(i)try{a--;for(var r=function(){var r=f.shift();c?executeSchedule(e,c,(function(){return p(r)})):p(r);};f.length&&a<t;)r();s();}catch(r){e.error(r);}})));};return r.subscribe(createOperatorSubscriber(e,m,(function(){l=!0,s();}))),function(){null==i||i();}}

	function mergeMap(r,n,e){return void 0===e&&(e=1/0),isFunction(n)?mergeMap((function(e,o){return map((function(r,t){return n(e,r,o,t)}))(innerFrom(r(e,o)))}),e):("number"==typeof n&&(e=n),operate((function(n,o){return mergeInternals(n,o,r,e)})))}

	function mergeAll(e){return void 0===e&&(e=1/0),mergeMap(identity$2,e)}

	function concatAll(){return mergeAll(1)}

	function concat(){for(var o=[],r=0;r<arguments.length;r++)o[r]=arguments[r];return concatAll()(from(o,popScheduler(o)))}

	function filter(r,e){return operate((function(t,o){var i=0;t.subscribe(createOperatorSubscriber(o,(function(t){return r.call(e,t,i++)&&o.next(t)})));}))}

	function catchError(r){return operate((function(e,o){var i,t=null,b=!1;t=e.subscribe(createOperatorSubscriber(o,void 0,void 0,(function(n){i=innerFrom(r(n,catchError(r)(e))),t?(t.unsubscribe(),t=null,i.subscribe(o)):b=!0;}))),b&&(t.unsubscribe(),t=null,i.subscribe(o));}))}

	function scanInternals(r,e,t,n,c){return function(o,a){var i=t,u=e,b=0;o.subscribe(createOperatorSubscriber(a,(function(e){var t=b++;u=i?r(u,e,t):(i=!0,e),n&&a.next(u);}),c&&function(){i&&a.next(u),a.complete();}));}}

	function reduce(n,r){return operate(scanInternals(n,r,arguments.length>=2,!1,!0))}

	var arrReducer=function(r,e){return r.push(e),r};function toArray(){return operate((function(r,e){reduce(arrReducer,[])(r).subscribe(e);}))}

	function fromSubscribable(r){return new Observable((function(e){return r.subscribe(e)}))}

	var DEFAULT_CONFIG={connector:function(){return new Subject}};function connect(r,o){void 0===o&&(o=DEFAULT_CONFIG);var e=o.connector;return operate((function(o,n){var b=e();innerFrom(r(fromSubscribable(b))).subscribe(n),n.add(o.subscribe(b));}))}

	function defaultIfEmpty(r){return operate((function(e,t){var o=!1;e.subscribe(createOperatorSubscriber(t,(function(r){o=!0,t.next(r);}),(function(){o||t.next(r),t.complete();})));}))}

	function take(r){return r<=0?function(){return EMPTY}:operate((function(e,t){var o=0;e.subscribe(createOperatorSubscriber(t,(function(e){++o<=r&&(t.next(e),r<=o&&t.complete());})));}))}

	function distinctUntilChanged(r,t){return void 0===t&&(t=identity$2),r=null!=r?r:defaultCompare,operate((function(e,i){var o,n=!0;e.subscribe(createOperatorSubscriber(i,(function(e){var u=t(e);!n&&r(o,u)||(n=!1,o=u,i.next(e));})));}))}function defaultCompare(r,t){return r===t}

	function throwIfEmpty(r){return void 0===r&&(r=defaultErrorFactory),operate((function(t,o){var e=!1;t.subscribe(createOperatorSubscriber(o,(function(r){e=!0,o.next(r);}),(function(){return e?o.complete():o.error(r())})));}))}function defaultErrorFactory(){return new EmptyError}

	function first(t,r){var f=arguments.length>=2;return function(i){return i.pipe(t?filter((function(r,f){return t(r,f,i)})):identity$2,take(1),f?defaultIfEmpty(r):throwIfEmpty((function(){return new EmptyError})))}}

	function multicast(n,t){var e=isFunction(n)?n:function(){return n};return isFunction(t)?connect(t,{connector:e}):function(n){return new ConnectableObservable(n,e)}}

	function publishReplay(t,i,u,n){u&&!isFunction(u)&&(n=u);var o=isFunction(u)?u:void 0;return function(u){return multicast(new ReplaySubject(t,i,n),o)(u)}}

	function startWith(){for(var r=[],t=0;t<arguments.length;t++)r[t]=arguments[t];var o=popScheduler(r);return operate((function(t,e){(o?concat(r,t,o):concat(r,t)).subscribe(e);}))}

	function switchMap(r,e){return operate((function(n,t){var o=null,i=0,u=!1,c=function(){return u&&!o&&t.complete()};n.subscribe(createOperatorSubscriber(t,(function(n){null==o||o.unsubscribe();var u=0,b=i++;innerFrom(r(n,b)).subscribe(o=createOperatorSubscriber(t,(function(r){return t.next(e?e(n,r,b,u++):r)}),(function(){o=null,c();})));}),(function(){u=!0,c();})));}))}

	function tap(r,i,t){var e=isFunction(r)||i||t?{next:r,error:i,complete:t}:r;return e?operate((function(r,i){var t;null===(t=e.subscribe)||void 0===t||t.call(e);var o=!0;r.subscribe(createOperatorSubscriber(i,(function(r){var t;null===(t=e.next)||void 0===t||t.call(e,r),i.next(r);}),(function(){var r;o=!1,null===(r=e.complete)||void 0===r||r.call(e),i.complete();}),(function(r){var t;o=!1,null===(t=e.error)||void 0===t||t.call(e,r),i.error(r);}),(function(){var r,i;o&&(null===(r=e.unsubscribe)||void 0===r||r.call(e)),null===(i=e.finalize)||void 0===i||i.call(e);})));})):identity$2}

	const AllHashers={Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null,Identity:null};

	const runtime$r={Metadata:[{methods:{metadata:{description:"Returns the metadata of a runtime",params:[],type:"OpaqueMetadata"}},version:1}]};

	const v9={ErrorMetadataV9:{name:"Text",docs:"Vec<Text>"},EventMetadataV9:{name:"Text",args:"Vec<Type>",docs:"Vec<Text>"},FunctionArgumentMetadataV9:{name:"Text",type:"Type"},FunctionMetadataV9:{name:"Text",args:"Vec<FunctionArgumentMetadataV9>",docs:"Vec<Text>"},MetadataV9:{modules:"Vec<ModuleMetadataV9>"},ModuleConstantMetadataV9:{name:"Text",type:"Type",value:"Bytes",docs:"Vec<Text>"},ModuleMetadataV9:{name:"Text",storage:"Option<StorageMetadataV9>",calls:"Option<Vec<FunctionMetadataV9>>",events:"Option<Vec<EventMetadataV9>>",constants:"Vec<ModuleConstantMetadataV9>",errors:"Vec<ErrorMetadataV9>"},StorageEntryMetadataV9:{name:"Text",modifier:"StorageEntryModifierV9",type:"StorageEntryTypeV9",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV9:{_enum:["Optional","Default","Required"]},StorageEntryTypeV9:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV9",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV9",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV9"}}},StorageHasherV9:{_enum:{Blake2_128:null,Blake2_256:null,Twox128:null,Twox256:null,Twox64Concat:null}},StorageMetadataV9:{prefix:"Text",items:"Vec<StorageEntryMetadataV9>"}};

	const v10={ErrorMetadataV10:"ErrorMetadataV9",EventMetadataV10:"EventMetadataV9",FunctionArgumentMetadataV10:"FunctionArgumentMetadataV9",FunctionMetadataV10:"FunctionMetadataV9",MetadataV10:{modules:"Vec<ModuleMetadataV10>"},ModuleConstantMetadataV10:"ModuleConstantMetadataV9",ModuleMetadataV10:{name:"Text",storage:"Option<StorageMetadataV10>",calls:"Option<Vec<FunctionMetadataV10>>",events:"Option<Vec<EventMetadataV10>>",constants:"Vec<ModuleConstantMetadataV10>",errors:"Vec<ErrorMetadataV10>"},StorageEntryModifierV10:"StorageEntryModifierV9",StorageEntryMetadataV10:{name:"Text",modifier:"StorageEntryModifierV10",type:"StorageEntryTypeV10",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV10:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV10",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV10",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV10"}}},StorageMetadataV10:{prefix:"Text",items:"Vec<StorageEntryMetadataV10>"},StorageHasherV10:{_enum:{Blake2_128:null,Blake2_256:null,Blake2_128Concat:null,Twox128:null,Twox256:null,Twox64Concat:null}}};

	const v11={ErrorMetadataV11:"ErrorMetadataV10",EventMetadataV11:"EventMetadataV10",ExtrinsicMetadataV11:{version:"u8",signedExtensions:"Vec<Text>"},FunctionArgumentMetadataV11:"FunctionArgumentMetadataV10",FunctionMetadataV11:"FunctionMetadataV10",MetadataV11:{modules:"Vec<ModuleMetadataV11>",extrinsic:"ExtrinsicMetadataV11"},ModuleConstantMetadataV11:"ModuleConstantMetadataV10",ModuleMetadataV11:{name:"Text",storage:"Option<StorageMetadataV11>",calls:"Option<Vec<FunctionMetadataV11>>",events:"Option<Vec<EventMetadataV11>>",constants:"Vec<ModuleConstantMetadataV11>",errors:"Vec<ErrorMetadataV11>"},StorageEntryModifierV11:"StorageEntryModifierV10",StorageEntryMetadataV11:{name:"Text",modifier:"StorageEntryModifierV11",type:"StorageEntryTypeV11",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV11:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV11",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV11",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV11"}}},StorageMetadataV11:{prefix:"Text",items:"Vec<StorageEntryMetadataV11>"},StorageHasherV11:{_enum:AllHashers}};

	const v12={ErrorMetadataV12:"ErrorMetadataV11",EventMetadataV12:"EventMetadataV11",ExtrinsicMetadataV12:"ExtrinsicMetadataV11",FunctionArgumentMetadataV12:"FunctionArgumentMetadataV11",FunctionMetadataV12:"FunctionMetadataV11",MetadataV12:{modules:"Vec<ModuleMetadataV12>",extrinsic:"ExtrinsicMetadataV12"},ModuleConstantMetadataV12:"ModuleConstantMetadataV11",ModuleMetadataV12:{name:"Text",storage:"Option<StorageMetadataV12>",calls:"Option<Vec<FunctionMetadataV12>>",events:"Option<Vec<EventMetadataV12>>",constants:"Vec<ModuleConstantMetadataV12>",errors:"Vec<ErrorMetadataV12>",index:"u8"},StorageEntryModifierV12:"StorageEntryModifierV11",StorageEntryMetadataV12:"StorageEntryMetadataV11",StorageEntryTypeV12:"StorageEntryTypeV11",StorageMetadataV12:"StorageMetadataV11",StorageHasherV12:"StorageHasherV11"};

	const v13={ErrorMetadataV13:"ErrorMetadataV12",EventMetadataV13:"EventMetadataV12",ExtrinsicMetadataV13:"ExtrinsicMetadataV12",FunctionArgumentMetadataV13:"FunctionArgumentMetadataV12",FunctionMetadataV13:"FunctionMetadataV12",MetadataV13:{modules:"Vec<ModuleMetadataV13>",extrinsic:"ExtrinsicMetadataV13"},ModuleConstantMetadataV13:"ModuleConstantMetadataV12",ModuleMetadataV13:{name:"Text",storage:"Option<StorageMetadataV13>",calls:"Option<Vec<FunctionMetadataV13>>",events:"Option<Vec<EventMetadataV13>>",constants:"Vec<ModuleConstantMetadataV13>",errors:"Vec<ErrorMetadataV13>",index:"u8"},StorageEntryModifierV13:"StorageEntryModifierV12",StorageEntryMetadataV13:{name:"Text",modifier:"StorageEntryModifierV13",type:"StorageEntryTypeV13",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryTypeV13:{_enum:{Plain:"Type",Map:{hasher:"StorageHasherV13",key:"Type",value:"Type",linked:"bool"},DoubleMap:{hasher:"StorageHasherV13",key1:"Type",key2:"Type",value:"Type",key2Hasher:"StorageHasherV13"},NMap:{keyVec:"Vec<Type>",hashers:"Vec<StorageHasherV13>",value:"Type"}}},StorageMetadataV13:{prefix:"Text",items:"Vec<StorageEntryMetadataV13>"},StorageHasherV13:"StorageHasherV12"};

	const Si1Variant={name:"Text",fields:"Vec<Si1Field>",index:"u8",docs:"Vec<Text>"};const v1$1={Si1Field:{name:"Option<Text>",type:"Si1LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si1LookupTypeId:"Compact<u32>",Si1Path:"Si0Path",Si1Type:{path:"Si1Path",params:"Vec<Si1TypeParameter>",def:"Si1TypeDef",docs:"Vec<Text>"},Si1TypeDef:{_enum:{Composite:"Si1TypeDefComposite",Variant:"Si1TypeDefVariant",Sequence:"Si1TypeDefSequence",Array:"Si1TypeDefArray",Tuple:"Si1TypeDefTuple",Primitive:"Si1TypeDefPrimitive",Compact:"Si1TypeDefCompact",BitSequence:"Si1TypeDefBitSequence",HistoricMetaCompat:"Type"}},Si1TypeDefArray:{len:"u32",type:"Si1LookupTypeId"},Si1TypeDefBitSequence:{bitStoreType:"Si1LookupTypeId",bitOrderType:"Si1LookupTypeId"},Si1TypeDefCompact:{type:"Si1LookupTypeId"},Si1TypeDefComposite:{fields:"Vec<Si1Field>"},Si1TypeDefPrimitive:"Si0TypeDefPrimitive",Si1TypeDefSequence:{type:"Si1LookupTypeId"},Si1TypeDefTuple:"Vec<Si1LookupTypeId>",Si1TypeParameter:{name:"Text",type:"Option<Si1LookupTypeId>"},Si1TypeDefVariant:{variants:"Vec<Si1Variant>"},Si1Variant:Si1Variant};

	const v14={PortableTypeV14:{id:"Si1LookupTypeId",type:"Si1Type"},ErrorMetadataV14:objectSpread({},Si1Variant,{args:"Vec<Type>"}),EventMetadataV14:objectSpread({},Si1Variant,{args:"Vec<Type>"}),FunctionArgumentMetadataV14:{name:"Text",type:"Type",typeName:"Option<Type>"},FunctionMetadataV14:objectSpread({},Si1Variant,{args:"Vec<FunctionArgumentMetadataV14>"}),ExtrinsicMetadataV14:{type:"SiLookupTypeId",version:"u8",signedExtensions:"Vec<SignedExtensionMetadataV14>"},MetadataV14:{lookup:"PortableRegistry",pallets:"Vec<PalletMetadataV14>",extrinsic:"ExtrinsicMetadataV14",type:"SiLookupTypeId"},PalletCallMetadataV14:{type:"SiLookupTypeId"},PalletConstantMetadataV14:{name:"Text",type:"SiLookupTypeId",value:"Bytes",docs:"Vec<Text>"},PalletErrorMetadataV14:{type:"SiLookupTypeId"},PalletEventMetadataV14:{type:"SiLookupTypeId"},PalletMetadataV14:{name:"Text",storage:"Option<PalletStorageMetadataV14>",calls:"Option<PalletCallMetadataV14>",events:"Option<PalletEventMetadataV14>",constants:"Vec<PalletConstantMetadataV14>",errors:"Option<PalletErrorMetadataV14>",index:"u8"},PalletStorageMetadataV14:{prefix:"Text",items:"Vec<StorageEntryMetadataV14>"},SignedExtensionMetadataV14:{identifier:"Text",type:"SiLookupTypeId",additionalSigned:"SiLookupTypeId"},StorageEntryMetadataV14:{name:"Text",modifier:"StorageEntryModifierV14",type:"StorageEntryTypeV14",fallback:"Bytes",docs:"Vec<Text>"},StorageEntryModifierV14:"StorageEntryModifierV13",StorageEntryTypeV14:{_enum:{Plain:"SiLookupTypeId",Map:{hashers:"Vec<StorageHasherV14>",key:"SiLookupTypeId",value:"SiLookupTypeId"}}},StorageHasherV14:"StorageHasherV13"};

	var definitions$14 = {rpc:{},runtime:runtime$r,types:objectSpread({},v9,v10,v11,v12,v13,v14,{ErrorMetadataLatest:"ErrorMetadataV14",EventMetadataLatest:"EventMetadataV14",ExtrinsicMetadataLatest:"ExtrinsicMetadataV14",FunctionArgumentMetadataLatest:"FunctionArgumentMetadataV14",FunctionMetadataLatest:"FunctionMetadataV14",MetadataLatest:"MetadataV14",PalletCallMetadataLatest:"PalletCallMetadataV14",PalletConstantMetadataLatest:"PalletConstantMetadataV14",PalletErrorMetadataLatest:"PalletErrorMetadataV14",PalletEventMetadataLatest:"PalletEventMetadataV14",PalletMetadataLatest:"PalletMetadataV14",PalletStorageMetadataLatest:"PalletStorageMetadataV14",PortableType:"PortableTypeV14",SignedExtensionMetadataLatest:"SignedExtensionMetadataV14",StorageEntryMetadataLatest:"StorageEntryMetadataV14",StorageEntryModifierLatest:"StorageEntryModifierV14",StorageEntryTypeLatest:"StorageEntryTypeV14",StorageHasher:"StorageHasherV14",OpaqueMetadata:"Opaque<Bytes>",MetadataAll:{_enum:{V0:"DoNotConstruct<MetadataV0>",V1:"DoNotConstruct<MetadataV1>",V2:"DoNotConstruct<MetadataV2>",V3:"DoNotConstruct<MetadataV3>",V4:"DoNotConstruct<MetadataV4>",V5:"DoNotConstruct<MetadataV5>",V6:"DoNotConstruct<MetadataV6>",V7:"DoNotConstruct<MetadataV7>",V8:"DoNotConstruct<MetadataV8>",V9:"MetadataV9",V10:"MetadataV10",V11:"MetadataV11",V12:"MetadataV12",V13:"MetadataV13",V14:"MetadataV14"}}})};

	const CORE_V1_TO_V4={execute_block:{description:"Execute the given block.",params:[{name:"block",type:"Block"}],type:"Null"}},CORE_V1_TO_V2={version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre3"}},CORE_V2_TO_V4={initialize_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"}};const runtime$q={Core:[{methods:objectSpread({version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersion"}},CORE_V1_TO_V4,CORE_V2_TO_V4),version:4},{methods:objectSpread({version:{description:"Returns the version of the runtime.",params:[],type:"RuntimeVersionPre4"}},CORE_V1_TO_V4,CORE_V2_TO_V4),version:3},{methods:objectSpread({},CORE_V1_TO_V2,CORE_V1_TO_V4,CORE_V2_TO_V4),version:2},{methods:objectSpread({initialise_block:{description:"Initialize a block with the given header.",params:[{name:"header",type:"Header"}],type:"Null"}},CORE_V1_TO_V2,CORE_V1_TO_V4),version:1}]};

	const numberTypes={Fixed64:"Int<64, Fixed64>",FixedI64:"Int<64, FixedI64>",FixedU64:"UInt<64, FixedU64>",Fixed128:"Int<128, Fixed128>",FixedI128:"Int<128, FixedI128>",FixedU128:"UInt<128, FixedU128>",I32F32:"Int<64, I32F32>",U32F32:"UInt<64, U32F32>",PerU16:"UInt<16, PerU16>",Perbill:"UInt<32, Perbill>",Percent:"UInt<8, Percent>",Permill:"UInt<32, Permill>",Perquintill:"UInt<64, Perquintill>"};const knownOrigins={Council:"CollectiveOrigin",System:"SystemOrigin",TechnicalCommittee:"CollectiveOrigin",Xcm:"XcmOrigin",XcmPallet:"XcmOrigin",Authority:"AuthorityOrigin",GeneralCouncil:"CollectiveOrigin"};var definitions$13 = {rpc:{},runtime:runtime$q,types:objectSpread({},numberTypes,{AccountId:"AccountId32",AccountId20:"GenericEthereumAccountId",AccountId32:"GenericAccountId32",AccountId33:"GenericAccountId33",AccountIdOf:"AccountId",AccountIndex:"GenericAccountIndex",Address:"MultiAddress",AssetId:"u32",Balance:"UInt<128, Balance>",BalanceOf:"Balance",Block:"GenericBlock",BlockNumber:"u32",BlockNumberFor:"BlockNumber",BlockNumberOf:"BlockNumber",Call:"GenericCall",CallHash:"Hash",CallHashOf:"CallHash",ChangesTrieConfiguration:{digestInterval:"u32",digestLevels:"u32"},ChangesTrieSignal:{_enum:{NewConfiguration:"Option<ChangesTrieConfiguration>"}},ConsensusEngineId:"GenericConsensusEngineId",CodecHash:"Hash",CrateVersion:{major:"u16",minor:"u8",patch:"u8"},Digest:{logs:"Vec<DigestItem>"},DigestItem:{_enum:{Other:"Bytes",AuthoritiesChange:"Vec<AuthorityId>",ChangesTrieRoot:"Hash",SealV0:"SealV0",Consensus:"Consensus",Seal:"Seal",PreRuntime:"PreRuntime",ChangesTrieSignal:"ChangesTrieSignal",RuntimeEnvironmentUpdated:"Null"}},ExtrinsicsWeight:{normal:"Weight",operational:"Weight"},H32:"[u8; 4; H32]",H64:"[u8; 8; H64]",H128:"[u8; 16; H128]",H160:"[u8; 20; H160]",H256:"[u8; 32; H256]",H512:"[u8; 64; H512]",H1024:"[u8; 128; H1024]",H2048:"[u8; 256; H2048]",Hash:"H256",Header:{parentHash:"Hash",number:"Compact<BlockNumber>",stateRoot:"Hash",extrinsicsRoot:"Hash",digest:"Digest"},HeaderPartial:{parentHash:"Hash",number:"BlockNumber"},IndicesLookupSource:"GenericLookupSource",Index:"u32",Justification:"(ConsensusEngineId, EncodedJustification)",EncodedJustification:"Bytes",Justifications:"Vec<Justification>",KeyValue:"(StorageKey, StorageData)",KeyTypeId:"u32",LockIdentifier:"[u8; 8]",LookupSource:"MultiAddress",LookupTarget:"AccountId",ModuleId:"LockIdentifier",MultiAddress:"GenericMultiAddress",MultiSigner:{_enum:{Ed25519:"[u8; 32]",Sr25519:"[u8; 32]",Ecdsa:"[u8; 33]"}},Moment:"UInt<64, Moment>",OpaqueCall:"Bytes",Origin:"DoNotConstruct<Origin>",OriginCaller:{_enum:{System:"SystemOrigin"}},PalletId:"LockIdentifier",PalletsOrigin:"OriginCaller",PalletVersion:{major:"u16",minor:"u8",patch:"u8"},Pays:{_enum:["Yes","No"]},Phantom:"Null",PhantomData:"Null",Releases:{_enum:["V1","V2","V3","V4","V5","V6","V7","V8","V9","V10"]},RuntimeCall:"Call",RuntimeEvent:"Event",RuntimeDbWeight:{read:"Weight",write:"Weight"},SignedBlock:"SignedBlockWithJustifications",SignedBlockWithJustification:{block:"Block",justification:"Option<EncodedJustification>"},SignedBlockWithJustifications:{block:"Block",justifications:"Option<Justifications>"},Slot:"u64",SlotDuration:"u64",StorageData:"Bytes",StorageInfo:{palletName:"Bytes",storage_name:"Bytes",prefix:"Bytes",maxValues:"Option<u32>",maxSize:"Option<u32>"},StorageProof:{trieNodes:"Vec<Bytes>"},TransactionPriority:"u64",TransactionLongevity:"u64",TransactionTag:"Bytes",TransactionInfo:{_alias:{dataSize:"size"},chunkRoot:"H256",contentHash:"H256",dataSize:"u32",blockChunks:"u32"},TransactionStorageProof:{chunk:"Vec<u8>",proof:"Vec<Vec<u8>>"},ValidatorId:"AccountId",ValidatorIdOf:"ValidatorId",WeightV0:"u32",WeightV1:"u64",WeightV2:{refTime:"Compact<u64>",proofSize:"Compact<u64>"},Weight:"WeightV2",WeightMultiplier:"Fixed64",PreRuntime:"(ConsensusEngineId, Bytes)",SealV0:"(u64, Signature)",Seal:"(ConsensusEngineId, Bytes)",Consensus:"(ConsensusEngineId, Bytes)"})};

	const v0$1={Si0Field:{name:"Option<Text>",type:"Si0LookupTypeId",typeName:"Option<Text>",docs:"Vec<Text>"},Si0LookupTypeId:"u32",Si0Path:"Vec<Text>",Si0Type:{path:"Si0Path",params:"Vec<Si0LookupTypeId>",def:"Si0TypeDef"},Si0TypeDef:{_enum:{Composite:"Si0TypeDefComposite",Variant:"Si0TypeDefVariant",Sequence:"Si0TypeDefSequence",Array:"Si0TypeDefArray",Tuple:"Si0TypeDefTuple",Primitive:"Si0TypeDefPrimitive",Compact:"Si0TypeDefCompact",Phantom:"Si0TypeDefPhantom",BitSequence:"Si0TypeDefBitSequence"}},Si0TypeDefArray:{len:"u32",type:"Si0LookupTypeId"},Si0TypeDefBitSequence:{bitStoreType:"Si0LookupTypeId",bitOrderType:"Si0LookupTypeId"},Si0TypeDefCompact:{type:"Si0LookupTypeId"},Si0TypeDefComposite:{fields:"Vec<Si0Field>"},Si0TypeDefPhantom:"Null",Si0TypeDefVariant:{variants:"Vec<Si0Variant>"},Si0TypeDefPrimitive:{_enum:["Bool","Char","Str","U8","U16","U32","U64","U128","U256","I8","I16","I32","I64","I128","I256"]},Si0TypeDefSequence:{type:"Si0LookupTypeId"},Si0TypeDefTuple:"Vec<Si0LookupTypeId>",Si0TypeParameter:{name:"Text",type:"Option<Si0LookupTypeId>"},Si0Variant:{name:"Text",fields:"Vec<Si0Field>",index:"Option<u8>",discriminant:"Option<u64>",docs:"Vec<Text>"}};

	var definitions$12 = {rpc:{},types:objectSpread({},v0$1,v1$1,{SiField:"Si1Field",SiLookupTypeId:"Si1LookupTypeId",SiPath:"Si1Path",SiType:"Si1Type",SiTypeDef:"Si1TypeDef",SiTypeDefArray:"Si1TypeDefArray",SiTypeDefBitSequence:"Si1TypeDefBitSequence",SiTypeDefCompact:"Si1TypeDefCompact",SiTypeDefComposite:"Si1TypeDefComposite",SiTypeDefPrimitive:"Si1TypeDefPrimitive",SiTypeDefSequence:"Si1TypeDefSequence",SiTypeDefTuple:"Si1TypeDefTuple",SiTypeParameter:"Si1TypeParameter",SiTypeDefVariant:"Si1TypeDefVariant",SiVariant:"Si1Variant"})};

	const runtime$p={AssetsApi:[{methods:{account_balances:{description:"Return the current set of authorities.",params:[{name:"account",type:"AccountId"}],type:"Vec<(u32, TAssetBalance)>"}},version:1}]};

	var definitions$11 = {rpc:{},runtime:runtime$p,types:{AssetApprovalKey:{owner:"AccountId",delegate:"AccountId"},AssetApproval:{amount:"TAssetBalance",deposit:"TAssetDepositBalance"},AssetBalance:{balance:"TAssetBalance",isFrozen:"bool",isSufficient:"bool"},AssetDestroyWitness:{accounts:"Compact<u32>",sufficients:"Compact<u32>",approvals:"Compact<u32>"},AssetDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",supply:"TAssetBalance",deposit:"TAssetDepositBalance",minBalance:"TAssetBalance",isSufficient:"bool",accounts:"u32",sufficients:"u32",approvals:"u32",isFrozen:"bool"},AssetMetadata:{deposit:"TAssetDepositBalance",name:"Vec<u8>",symbol:"Vec<u8>",decimals:"u8",isFrozen:"bool"},TAssetBalance:"u64",TAssetDepositBalance:"BalanceOf"}};

	var definitions$10 = {rpc:{},types:{UncleEntryItem:{_enum:{InclusionHeight:"BlockNumber",Uncle:"(Hash, Option<AccountId>)"}}}};

	const runtime$o={AuraApi:[{methods:{authorities:{description:"Return the current set of authorities.",params:[],type:"Vec<AuthorityId>"},slot_duration:{description:"Returns the slot duration for Aura.",params:[],type:"SlotDuration"}},version:1}]};

	var definitions$$ = {rpc:{},runtime:runtime$o,types:{RawAuraPreDigest:{slotNumber:"u64"}}};

	const rpc$g={epochAuthorship:{description:"Returns data about which slots (primary or secondary) can be claimed in the current epoch with the keys in the keystore",isUnsafe:!0,params:[],type:"HashMap<AuthorityId, EpochAuthorship>"}};

	const V1_V2_SHARED={current_epoch:{description:"Returns information regarding the current epoch.",params:[],type:"Epoch"},current_epoch_start:{description:"Returns the slot that started the current epoch.",params:[],type:"Slot"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the current epoch.",params:[{name:"slot",type:"Slot"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},next_epoch:{description:"Returns information regarding the next epoch (which was already previously announced).",params:[],type:"Epoch"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BabeEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}};const runtime$n={BabeApi:[{methods:objectSpread({configuration:{description:"Return the genesis configuration for BABE. The configuration is only read on genesis.",params:[],type:"BabeGenesisConfiguration"}},V1_V2_SHARED),version:2},{methods:objectSpread({configuration:{description:"Return the configuration for BABE. Version 1.",params:[],type:"BabeGenesisConfigurationV1"}},V1_V2_SHARED),version:1}]};

	var definitions$_ = {rpc:rpc$g,runtime:runtime$n,types:{AllowedSlots:{_enum:["PrimarySlots","PrimaryAndSecondaryPlainSlots","PrimaryAndSecondaryVRFSlots"]},BabeAuthorityWeight:"u64",BabeEpochConfiguration:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},BabeBlockWeight:"u32",BabeEquivocationProof:{offender:"AuthorityId",slotNumber:"SlotNumber",firstHeader:"Header",secondHeader:"Header"},BabeGenesisConfiguration:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",allowedSlots:"AllowedSlots"},BabeGenesisConfigurationV1:{slotDuration:"u64",epochLength:"u64",c:"(u64, u64)",genesisAuthorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Randomness",secondarySlots:"bool"},BabeWeight:"u64",MaybeRandomness:"Option<Randomness>",MaybeVrf:"Option<VrfData>",Epoch:{epochIndex:"u64",startSlot:"Slot",duration:"u64",authorities:"Vec<(AuthorityId, BabeAuthorityWeight)>",randomness:"Hash",config:"BabeEpochConfiguration"},EpochAuthorship:{primary:"Vec<u64>",secondary:"Vec<u64>",secondary_vrf:"Vec<u64>"},NextConfigDescriptor:{_enum:{V0:"Null",V1:"NextConfigDescriptorV1"}},NextConfigDescriptorV1:{c:"(u64, u64)",allowedSlots:"AllowedSlots"},OpaqueKeyOwnershipProof:"Bytes",Randomness:"Hash",RawBabePreDigest:{_enum:{Phantom:"Null",Primary:"RawBabePreDigestPrimary",SecondaryPlain:"RawBabePreDigestSecondaryPlain",SecondaryVRF:"RawBabePreDigestSecondaryVRF"}},RawBabePreDigestPrimary:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryPlain:{authorityIndex:"u32",slotNumber:"SlotNumber"},RawBabePreDigestSecondaryVRF:{authorityIndex:"u32",slotNumber:"SlotNumber",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestTo159:{_enum:{Primary:"RawBabePreDigestPrimaryTo159",Secondary:"RawBabePreDigestSecondaryTo159"}},RawBabePreDigestPrimaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight",vrfOutput:"VrfOutput",vrfProof:"VrfProof"},RawBabePreDigestSecondaryTo159:{authorityIndex:"u32",slotNumber:"SlotNumber",weight:"BabeBlockWeight"},RawBabePreDigestCompat:{_enum:{Zero:"u32",One:"u32",Two:"u32",Three:"u32"}},SlotNumber:"u64",VrfData:"[u8; 32]",VrfOutput:"[u8; 32]",VrfProof:"[u8; 64]"}};

	var definitions$Z = {rpc:{},types:{AccountData:{free:"Balance",reserved:"Balance",miscFrozen:"Balance",feeFrozen:"Balance"},BalanceLockTo212:{id:"LockIdentifier",amount:"Balance",until:"BlockNumber",reasons:"WithdrawReasons"},BalanceLock:{id:"LockIdentifier",amount:"Balance",reasons:"Reasons"},BalanceStatus:{_enum:["Free","Reserved"]},Reasons:{_enum:["Fee","Misc","All"]},ReserveData:{id:"ReserveIdentifier",amount:"Balance"},ReserveIdentifier:"[u8; 8]",VestingSchedule:{offset:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"},WithdrawReasons:{_set:{TransactionPayment:1,Transfer:2,Reserve:4,Fee:8,Tip:16}}}};

	const rpc$f={getFinalizedHead:{description:"Returns hash of the latest BEEFY finalized block as seen by this client.",params:[],type:"H256"},subscribeJustifications:{description:"Returns the block most recently finalized by BEEFY, alongside side its justification.",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"BeefySignedCommitment"}};

	const BEEFY_V1_V2={beefy_genesis:{description:"Return the block number where BEEFY consensus is enabled/started",params:[],type:"Option<BlockNumber>"},generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"ValidatorSetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"BeefyEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"},validator_set:{description:"Return the current active BEEFY validator set",params:[],type:"Option<ValidatorSet>"}},BEEFY_MMR_V1={authority_set_proof:{description:"Return the currently active BEEFY authority set proof.",params:[],type:"BeefyAuthoritySet"},next_authority_set_proof:{description:"Return the next/queued BEEFY authority set proof.",params:[],type:"BeefyNextAuthoritySet"}};const runtime$m={BeefyApi:[{methods:BEEFY_V1_V2,version:2},{methods:BEEFY_V1_V2,version:1}],BeefyMmrApi:[{methods:BEEFY_MMR_V1,version:1}]};

	var definitions$Y = {rpc:rpc$f,runtime:runtime$m,types:{BeefyAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyCommitment:{payload:"BeefyPayload",blockNumber:"BlockNumber",validatorSetId:"ValidatorSetId"},BeefyId:"[u8; 33]",BeefyEquivocationProof:{first:"BeefyVoteMessage",second:"BeefyVoteMessage"},BeefySignedCommitment:{commitment:"BeefyCommitment",signatures:"Vec<Option<EcdsaSignature>>"},BeefyNextAuthoritySet:{id:"u64",len:"u32",root:"H256"},BeefyPayload:"Vec<(BeefyPayloadId, Bytes)>",BeefyPayloadId:"[u8;2]",BeefyVoteMessage:{commitment:"BeefyCommitment",id:"AuthorityId",signature:"Signature"},MmrRootHash:"H256",ValidatorSetId:"u64",ValidatorSet:{validators:"Vec<AuthorityId>",id:"ValidatorSetId"}}};

	const runtime$l={Benchmark:[{methods:{benchmark_metadata:{description:"Get the benchmark metadata available for this runtime.",params:[{name:"extra",type:"bool"}],type:"(Vec<BenchmarkList>, Vec<StorageInfo>)"},dispatch_benchmark:{description:"Dispatch the given benchmark.",params:[{name:"config",type:"BenchmarkConfig"}],type:"Result<Vec<BenchmarkBatch>, Text>"}},version:1}]};

	var definitions$X = {rpc:{},runtime:runtime$l,types:{BenchmarkBatch:{pallet:"Text",instance:"Text",benchmark:"Text",results:"Vec<BenchmarkResult>"},BenchmarkConfig:{pallet:"Bytes",benchmark:"Bytes",selectedComponents:"Vec<(BenchmarkParameter, u32)>",verify:"bool",internalRepeats:"u32"},BenchmarkList:{pallet:"Bytes",instance:"Bytes",benchmarks:"Vec<BenchmarkMetadata>"},BenchmarkMetadata:{name:"Bytes",components:"Vec<(BenchmarkParameter, u32, u32)>"},BenchmarkParameter:{_enum:["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]},BenchmarkResult:{components:"Vec<(BenchmarkParameter, u32)>",extrinsicTime:"u128",storageRootTime:"u128",reads:"u32",repeatReads:"u32",writes:"u32",repeatWrites:"u32",proofSize:"u32",benchKeys:"Vec<(Vec<u8>, u32, u32, bool)>"}}};

	const BB_V2_TO_V4={random_seed:{description:"Generate a random seed.",params:[],type:"Hash"}},BB_V2_TO_V5={apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResultPre6"}},BB_V2_TO_V6={check_inherents:{description:"Check that the inherents are valid.",params:[{name:"block",type:"Block"},{name:"data",type:"InherentData"}],type:"CheckInherentsResult"},inherent_extrinsics:{description:"Generate inherent extrinsics.",params:[{name:"inherent",type:"InherentData"}],type:"Vec<Extrinsic>"}},BB_V3_TO_V6={finalize_block:{description:"Finish the current block.",params:[],type:"Header"}};const runtime$k={BlockBuilder:[{methods:objectSpread({apply_extrinsic:{description:"Apply the given extrinsic.",params:[{name:"extrinsic",type:"Extrinsic"}],type:"ApplyExtrinsicResult"}},BB_V2_TO_V6,BB_V3_TO_V6),version:6},{methods:objectSpread({},BB_V2_TO_V5,BB_V2_TO_V6,BB_V3_TO_V6),version:5},{methods:objectSpread({},BB_V2_TO_V4,BB_V2_TO_V5,BB_V2_TO_V6,BB_V3_TO_V6),version:4},{methods:objectSpread({},BB_V2_TO_V4,BB_V2_TO_V6,BB_V3_TO_V6),version:3},{methods:objectSpread({finalise_block:{description:"Finish the current block.",params:[],type:"Header"}},BB_V2_TO_V4,BB_V2_TO_V6),version:2}]};

	var definitions$W = {rpc:{},runtime:runtime$k,types:{CheckInherentsResult:{okay:"bool",fatalError:"bool",errors:"InherentData"},InherentData:{data:"BTreeMap<InherentIdentifier, Bytes>"},InherentIdentifier:"[u8; 8]"}};

	var definitions$V = {rpc:{},types:{CollectiveOrigin:{_enum:{Members:"(MemberCount, MemberCount)",Member:"AccountId"}},MemberCount:"u32",ProposalIndex:"u32",VotesTo230:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>"},Votes:{index:"ProposalIndex",threshold:"MemberCount",ayes:"Vec<AccountId>",nays:"Vec<AccountId>",end:"BlockNumber"}}};

	var definitions$U = {rpc:{},types:{AuthorityId:"AccountId",RawVRFOutput:"[u8; 32]"}};

	const rpc$e={call:{deprecated:"Use the runtime interface `api.call.contractsApi.call` instead",description:"Executes a call to a contract",params:[{name:"callRequest",type:"ContractCallRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractExecResult"},getStorage:{deprecated:"Use the runtime interface `api.call.contractsApi.getStorage` instead",description:"Returns the value under a specified storage key in a contract",params:[{name:"address",type:"AccountId"},{name:"key",type:"H256"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<Bytes>"},instantiate:{deprecated:"Use the runtime interface `api.call.contractsApi.instantiate` instead",description:"Instantiate a new contract",params:[{name:"request",type:"InstantiateRequestV1"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ContractInstantiateResult"},rentProjection:{deprecated:"Not available in newer versions of the contracts interfaces",description:"Returns the projected time a given contract will be able to sustain paying its rent",params:[{name:"address",type:"AccountId"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Option<BlockNumber>"},uploadCode:{deprecated:"Use the runtime interface `api.call.contractsApi.uploadCode` instead",description:"Upload new code without instantiating a contract from it",endpoint:"contracts_upload_code",params:[{name:"uploadRequest",type:"CodeUploadRequest"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"CodeUploadResult"}};

	const SHARED_V1_V2={get_storage:{description:"Query a given storage key in a given contract.",params:[{name:"address",type:"AccountId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},upload_code:{description:"Upload new code without instantiating a contract from it.",params:[{name:"origin",type:"AccountId"},{name:"code",type:"Bytes"},{name:"storageDepositLimit",type:"Option<Balance>"}],type:"CodeUploadResult"}};const runtime$j={ContractsApi:[{methods:objectSpread({call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"Option<WeightV2>"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResult"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"Option<WeightV2>"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"CodeSource"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResult"}},SHARED_V1_V2),version:2},{methods:objectSpread({call:{description:"Perform a call from a specified account to a given contract.",params:[{name:"origin",type:"AccountId"},{name:"dest",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"inputData",type:"Vec<u8>"}],type:"ContractExecResultU64"},instantiate:{description:"Instantiate a new contract.",params:[{name:"origin",type:"AccountId"},{name:"value",type:"Balance"},{name:"gasLimit",type:"u64"},{name:"storageDepositLimit",type:"Option<Balance>"},{name:"code",type:"CodeSource"},{name:"data",type:"Bytes"},{name:"salt",type:"Bytes"}],type:"ContractInstantiateResultU64"}},SHARED_V1_V2),version:1}]};

	var definitions$T = {rpc:rpc$e,runtime:runtime$j,types:{AliveContractInfo:{trieId:"TrieId",storageSize:"u32",pairCount:"u32",codeHash:"CodeHash",rentAllowance:"Balance",rentPaid:"Balance",deductBlock:"BlockNumber",lastWrite:"Option<BlockNumber>",_reserved:"Option<Null>"},CodeHash:"Hash",CodeSource:{_enum:{Upload:"Bytes",Existing:"Hash"}},CodeUploadRequest:{origin:"AccountId",code:"Bytes",storageDepositLimit:"Option<Balance>"},CodeUploadResult:"Result<CodeUploadResultValue, DispatchError>",CodeUploadResultValue:{codeHash:"CodeHash",deposit:"Balance"},ContractCallRequest:{origin:"AccountId",dest:"AccountId",value:"Balance",gasLimit:"u64",storageDepositLimit:"Option<Balance>",inputData:"Bytes"},ContractExecResultSuccessTo255:{status:"u8",data:"Raw"},ContractExecResultTo255:{_enum:{Success:"ContractExecResultSuccessTo255",Error:"Null"}},ContractExecResultSuccessTo260:{flags:"ContractReturnFlags",data:"Bytes",gasConsumed:"u64"},ContractExecResultTo260:{_enum:{Success:"ContractExecResultSuccessTo260",Error:"Null"}},ContractExecResultOk:{flags:"ContractReturnFlags",data:"Bytes"},ContractExecResultResult:"Result<ContractExecResultOk, DispatchError>",ContractExecResultTo267:{gasConsumed:"u64",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResult:{gasConsumed:"Weight",gasRequired:"Weight",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractExecResultU64:{gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"ContractExecResultResult"},ContractInfo:{_enum:{Alive:"AliveContractInfo",Tombstone:"TombstoneContractInfo"}},ContractCallFlags:{_set:{_bitLength:32,ForwardInput:1,CloneInput:2,TailCall:4,AllowReentry:8}},ContractReturnFlags:{_set:{_bitLength:32,Revert:1}},ContractStorageKey:"[u8; 32]",DeletedContract:{pairCount:"u32",trieId:"TrieId"},ExecReturnValue:{flags:"ContractReturnFlags",data:"Bytes"},Gas:"u64",HostFnWeightsTo264:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",restoreTo:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight"},HostFnWeights:{caller:"Weight",address:"Weight",gasLeft:"Weight",balance:"Weight",valueTransferred:"Weight",minimumBalance:"Weight",tombstoneDeposit:"Weight",rentAllowance:"Weight",blockNumber:"Weight",now:"Weight",weightToFee:"Weight",gas:"Weight",input:"Weight",inputPerByte:"Weight",return:"Weight",returnPerByte:"Weight",terminate:"Weight",terminatePerCodeByte:"Weight",restoreTo:"Weight",restoreToPerCallerCodeByte:"Weight",restoreToPerTombstoneCodeByte:"Weight",restoreToPerDelta:"Weight",random:"Weight",depositEvent:"Weight",depositEventPerTopic:"Weight",depositEventPerByte:"Weight",setRentAllowance:"Weight",setStorage:"Weight",setStoragePerByte:"Weight",clearStorage:"Weight",getStorage:"Weight",getStoragePerByte:"Weight",transfer:"Weight",call:"Weight",callPerCodeByte:"Weight",callTransferSurcharge:"Weight",callPerInputByte:"Weight",callPerOutputByte:"Weight",instantiate:"Weight",instantiatePerCodeByte:"Weight",instantiatePerInputByte:"Weight",instantiatePerOutputByte:"Weight",instantiatePerSaltByte:"Weight",hashSha2256:"Weight",hashSha2256PerByte:"Weight",hashKeccak256:"Weight",hashKeccak256PerByte:"Weight",hashBlake2256:"Weight",hashBlake2256PerByte:"Weight",hashBlake2128:"Weight",hashBlake2128PerByte:"Weight",rentParams:"Weight"},InstantiateRequestV1:{origin:"AccountId",value:"Balance",gasLimit:"Gas",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequestV2:{_fallback:"InstantiateRequestV1",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"Bytes",data:"Bytes",salt:"Bytes"},InstantiateRequest:{_fallback:"InstantiateRequestV2",origin:"AccountId",value:"Balance",gasLimit:"Gas",storageDepositLimit:"Option<Balance>",code:"CodeSource",data:"Bytes",salt:"Bytes"},ContractInstantiateResultTo267:"Result<InstantiateReturnValueTo267, Null>",ContractInstantiateResultTo299:"Result<InstantiateReturnValueOk, Null>",ContractInstantiateResult:{gasConsumed:"WeightV2",gasRequired:"WeightV2",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},ContractInstantiateResultU64:{_fallback:"ContractInstantiateResultTo299",gasConsumed:"u64",gasRequired:"u64",storageDeposit:"StorageDeposit",debugMessage:"Text",result:"InstantiateReturnValue"},InstantiateReturnValueTo267:{result:"ExecReturnValue",accountId:"AccountId",rentProjection:"Option<RentProjection>"},InstantiateReturnValueOk:{result:"ExecReturnValue",accountId:"AccountId"},InstantiateReturnValue:"Result<InstantiateReturnValueOk, DispatchError>",InstructionWeights:{i64const:"u32",i64load:"u32",i64store:"u32",select:"u32",rIf:"u32",br:"u32",brIf:"u32",brIable:"u32",brIablePerEntry:"u32",call:"u32",callIndirect:"u32",callIndirectPerParam:"u32",localGet:"u32",localSet:"u32",local_tee:"u32",globalGet:"u32",globalSet:"u32",memoryCurrent:"u32",memoryGrow:"u32",i64clz:"u32",i64ctz:"u32",i64popcnt:"u32",i64eqz:"u32",i64extendsi32:"u32",i64extendui32:"u32",i32wrapi64:"u32",i64eq:"u32",i64ne:"u32",i64lts:"u32",i64ltu:"u32",i64gts:"u32",i64gtu:"u32",i64les:"u32",i64leu:"u32",i64ges:"u32",i64geu:"u32",i64add:"u32",i64sub:"u32",i64mul:"u32",i64divs:"u32",i64divu:"u32",i64rems:"u32",i64remu:"u32",i64and:"u32",i64or:"u32",i64xor:"u32",i64shl:"u32",i64shrs:"u32",i64shru:"u32",i64rotl:"u32",i64rotr:"u32"},LimitsTo264:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32",codeSize:"u32"},Limits:{eventTopics:"u32",stackHeight:"u32",globals:"u32",parameters:"u32",memoryPages:"u32",tableSize:"u32",brTableSize:"u32",subjectLen:"u32"},PrefabWasmModule:{scheduleVersion:"Compact<u32>",initial:"Compact<u32>",maximum:"Compact<u32>",refcount:"Compact<u64>",_reserved:"Option<Null>",code:"Bytes",originalCodeLen:"u32"},RentProjection:{_enum:{EvictionAt:"BlockNumber",NoEviction:"Null"}},ScheduleTo212:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo258:{version:"u32",putCodePerByteCost:"Gas",growMemCost:"Gas",regularOpCost:"Gas",returnDataPerByteCost:"Gas",eventDataPerByteCost:"Gas",eventPerTopicCost:"Gas",eventBaseCost:"Gas",sandboxDataReadCost:"Gas",sandboxDataWriteCost:"Gas",transferCost:"Gas",maxEventTopics:"u32",maxStackHeight:"u32",maxMemoryPages:"u32",enablePrintln:"bool",maxSubjectLen:"u32"},ScheduleTo264:{version:"u32",enablePrintln:"bool",limits:"LimitsTo264",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeightsTo264"},Schedule:{version:"u32",enablePrintln:"bool",limits:"Limits",instructionWeights:"InstructionWeights",hostFnWeights:"HostFnWeights"},SeedOf:"Hash",StorageDeposit:{_enum:{Refund:"Balance",Charge:"Balance"}},TombstoneContractInfo:"Hash",TrieId:"Bytes"}};

	const AllConvictions=["None","Locked1x","Locked2x","Locked3x","Locked4x","Locked5x","Locked6x"];var definitions$S = {rpc:{},types:{AccountVote:{_enum:{Standard:"AccountVoteStandard",Split:"AccountVoteSplit"}},AccountVoteSplit:{aye:"Balance",nay:"Balance"},AccountVoteStandard:{vote:"Vote",balance:"Balance"},Conviction:{_enum:AllConvictions},Delegations:{votes:"Balance",capital:"Balance"},PreimageStatus:{_enum:{Missing:"BlockNumber",Available:"PreimageStatusAvailable"}},PreimageStatusAvailable:{data:"Bytes",provider:"AccountId",deposit:"Balance",since:"BlockNumber",expiry:"Option<BlockNumber>"},PriorLock:"(BlockNumber, Balance)",PropIndex:"u32",Proposal:"Call",ProxyState:{_enum:{Open:"AccountId",Active:"AccountId"}},ReferendumIndex:"u32",ReferendumInfoTo239:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber"},ReferendumInfo:{_enum:{Ongoing:"ReferendumStatus",Finished:"ReferendumInfoFinished"}},ReferendumInfoFinished:{approved:"bool",end:"BlockNumber"},ReferendumStatus:{end:"BlockNumber",proposalHash:"Hash",threshold:"VoteThreshold",delay:"BlockNumber",tally:"Tally"},Tally:{ayes:"Balance",nays:"Balance",turnout:"Balance"},Voting:{_enum:{Direct:"VotingDirect",Delegating:"VotingDelegating"}},VotingDirect:{votes:"Vec<VotingDirectVote>",delegations:"Delegations",prior:"PriorLock"},VotingDirectVote:"(ReferendumIndex, AccountVote)",VotingDelegating:{balance:"Balance",target:"AccountId",conviction:"Conviction",delegations:"Delegations",prior:"PriorLock"}}};

	const rpc$d={getBlockStats:{description:"Reexecute the specified `block_hash` and gather statistics while doing so",isUnsafe:!0,params:[{isHistoric:!0,name:"at",type:"Hash"}],type:"Option<BlockStats>"}};

	var definitions$R = {rpc:rpc$d,types:{BlockStats:{witnessLen:"u64",witnessCompactLen:"u64",blockLen:"u64",blockNumExtrinsics:"u64"}}};

	const runtime$i={AuthorityDiscoveryApi:[{methods:{authorities:{description:"Retrieve authority identifiers of the current and next authority set.",params:[],type:"Vec<AuthorityId>"}},version:1}]};

	var definitions$Q = {rpc:{},runtime:runtime$i,types:{}};

	var definitions$P = {rpc:{},types:{ApprovalFlag:"u32",DefunctVoter:{who:"AccountId",voteCount:"Compact<u32>",candidateCount:"Compact<u32>"},Renouncing:{_enum:{Member:"Null",RunnerUp:"Null",Candidate:"Compact<u32>"}},SetIndex:"u32",Vote:"GenericVote",VoteIndex:"u32",VoterInfo:{lastActive:"VoteIndex",lastWin:"VoteIndex",pot:"Balance",stake:"Balance"},VoteThreshold:{_enum:["Super Majority Approve","Super Majority Against","Simple Majority"]}}};

	const rpc$c={createBlock:{description:"Instructs the manual-seal authorship task to create a new block",params:[{name:"createEmpty",type:"bool"},{name:"finalize",type:"bool"},{isOptional:!0,name:"parentHash",type:"BlockHash"}],type:"CreatedBlock"},finalizeBlock:{description:"Instructs the manual-seal authorship task to finalize a block",params:[{name:"hash",type:"BlockHash"},{isOptional:!0,name:"justification",type:"Justification"}],type:"bool"}};

	var definitions$O = {rpc:rpc$c,types:{CreatedBlock:{_alias:{blockHash:"hash"},blockHash:"BlockHash",aux:"ImportedAux"},ImportedAux:{headerOnly:"bool",clearJustificationRequests:"bool",needsJustification:"bool",badJustification:"bool",needsFinalityProof:"bool",isNewBest:"bool"}}};

	var definitions$N = {rpc:{},types:{EvmAccount:{nonce:"u256",balance:"u256"},EvmCallInfo:{exitReason:"ExitReason",value:"Bytes",usedGas:"U256",logs:"Vec<EvmLog>"},EvmCreateInfo:{exitReason:"ExitReason",value:"H160",usedGas:"U256",logs:"Vec<EvmLog>"},EvmLog:{address:"H160",topics:"Vec<H256>",data:"Bytes"},EvmVicinity:{gasPrice:"u256",origin:"H160"},ExitError:{_enum:{StackUnderflow:"Null",StackOverflow:"Null",InvalidJump:"Null",InvalidRange:"Null",DesignatedInvalid:"Null",CallTooDeep:"Null",CreateCollision:"Null",CreateContractLimit:"Null",OutOfOffset:"Null",OutOfGas:"Null",OutOfFund:"Null",PCUnderflow:"Null",CreateEmpty:"Null",Other:"Text"}},ExitFatal:{_enum:{NotSupported:"Null",UnhandledInterrupt:"Null",CallErrorAsFatal:"ExitError",Other:"Text"}},ExitReason:{_enum:{Succeed:"ExitSucceed",Error:"ExitError",Revert:"ExitRevert",Fatal:"ExitFatal"}},ExitRevert:{_enum:["Reverted"]},ExitSucceed:{_enum:["Stopped","Returned","Suicided"]}}};

	var definitions$M = {rpc:{},types:{Extrinsic:"GenericExtrinsic",ExtrinsicEra:"GenericExtrinsicEra",ExtrinsicPayload:"GenericExtrinsicPayload",ExtrinsicSignature:"MultiSignature",ExtrinsicV4:"GenericExtrinsicV4",ExtrinsicPayloadV4:"GenericExtrinsicPayloadV4",ExtrinsicSignatureV4:"GenericExtrinsicSignatureV4",ExtrinsicUnknown:"GenericExtrinsicUnknown",ExtrinsicPayloadUnknown:"GenericExtrinsicPayloadUnknown",Era:"ExtrinsicEra",ImmortalEra:"GenericImmortalEra",MortalEra:"GenericMortalEra",AnySignature:"H512",MultiSignature:{_enum:{Ed25519:"Ed25519Signature",Sr25519:"Sr25519Signature",Ecdsa:"EcdsaSignature"}},Signature:"H512",SignerPayload:"GenericSignerPayload",EcdsaSignature:"[u8; 65]",Ed25519Signature:"H512",Sr25519Signature:"H512"}};

	var definitions$L = {rpc:{},types:{AssetOptions:{initalIssuance:"Compact<Balance>",permissions:"PermissionLatest"},Owner:{_enum:{None:"Null",Address:"AccountId"}},PermissionsV1:{update:"Owner",mint:"Owner",burn:"Owner"},PermissionVersions:{_enum:{V1:"PermissionsV1"}},PermissionLatest:"PermissionsV1"}};

	var definitions$K = {rpc:{},types:{ActiveGilt:{proportion:"Perquintill",amount:"Balance",who:"AccountId",expiry:"BlockNumber"},ActiveGiltsTotal:{frozen:"Balance",proportion:"Perquintill",index:"ActiveIndex",target:"Perquintill"},ActiveIndex:"u32",GiltBid:{amount:"Balance",who:"AccountId"}}};

	const rpc$b={proveFinality:{description:"Prove finality for the given block number, returning the Justification for the last block in the set.",params:[{name:"blockNumber",type:"BlockNumber"}],type:"Option<EncodedFinalityProofs>"},roundState:{description:"Returns the state of the current best round state as well as the ongoing background rounds",params:[],type:"ReportedRoundStates"},subscribeJustifications:{description:"Subscribes to grandpa justifications",params:[],pubsub:["justifications","subscribeJustifications","unsubscribeJustifications"],type:"JustificationNotification"}};

	const GRANDPA_V2_V3={generate_key_ownership_proof:{description:"Generates a proof of key ownership for the given authority in the given set.",params:[{name:"setId",type:"SetId"},{name:"authorityId",type:"AuthorityId"}],type:"Option<OpaqueKeyOwnershipProof>"},grandpa_authorities:{description:"Get the current GRANDPA authorities and weights. This should not change except for when changes are scheduled and the corresponding delay has passed.",params:[],type:"AuthorityList"},submit_report_equivocation_unsigned_extrinsic:{description:"Submits an unsigned extrinsic to report an equivocation.",params:[{name:"equivocationProof",type:"GrandpaEquivocationProof"},{name:"keyOwnerProof",type:"OpaqueKeyOwnershipProof"}],type:"Option<Null>"}};const runtime$h={GrandpaApi:[{methods:objectSpread({current_set_id:{description:"Get current GRANDPA authority set id.",params:[],type:"SetId"}},GRANDPA_V2_V3),version:3},{methods:GRANDPA_V2_V3,version:2}]};

	var definitions$J = {rpc:rpc$b,runtime:runtime$h,types:{AuthorityIndex:"u64",AuthorityList:"Vec<NextAuthority>",AuthoritySet:{currentAuthorities:"AuthorityList",setId:"u64",pendingStandardChanges:"ForkTreePendingChange",pendingForcedChanges:"Vec<PendingChange>",authoritySetChanges:"AuthoritySetChanges"},ForkTreePendingChange:{roots:"Vec<ForkTreePendingChangeNode>",bestFinalizedNumber:"Option<BlockNumber>"},ForkTreePendingChangeNode:{hash:"BlockHash",number:"BlockNumber",data:"PendingChange",children:"Vec<ForkTreePendingChangeNode>"},AuthoritySetChange:"(U64, BlockNumber)",AuthoritySetChanges:"Vec<AuthoritySetChange>",AuthorityWeight:"u64",DelayKind:{_enum:{Finalized:"Null",Best:"DelayKindBest"}},DelayKindBest:{medianLastFinalized:"BlockNumber"},EncodedFinalityProofs:"Bytes",GrandpaEquivocation:{_enum:{Prevote:"GrandpaEquivocationValue",Precommit:"GrandpaEquivocationValue"}},GrandpaEquivocationProof:{setId:"SetId",equivocation:"GrandpaEquivocation"},GrandpaEquivocationValue:{roundNumber:"u64",identity:"AuthorityId",first:"(GrandpaPrevote, AuthoritySignature)",second:"(GrandpaPrevote, AuthoritySignature)"},GrandpaPrevote:{targetHash:"Hash",targetNumber:"BlockNumber"},GrandpaCommit:{targetHash:"BlockHash",targetNumber:"BlockNumber",precommits:"Vec<GrandpaSignedPrecommit>"},GrandpaPrecommit:{targetHash:"BlockHash",targetNumber:"BlockNumber"},GrandpaSignedPrecommit:{precommit:"GrandpaPrecommit",signature:"AuthoritySignature",id:"AuthorityId"},GrandpaJustification:{round:"u64",commit:"GrandpaCommit",votesAncestries:"Vec<Header>"},JustificationNotification:"Bytes",KeyOwnerProof:"MembershipProof",NextAuthority:"(AuthorityId, AuthorityWeight)",PendingChange:{nextAuthorities:"AuthorityList",delay:"BlockNumber",canonHeight:"BlockNumber",canonHash:"BlockHash",delayKind:"DelayKind"},PendingPause:{scheduledAt:"BlockNumber",delay:"BlockNumber"},PendingResume:{scheduledAt:"BlockNumber",delay:"BlockNumber"},Precommits:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},Prevotes:{currentWeight:"u32",missing:"BTreeSet<AuthorityId>"},ReportedRoundStates:{setId:"u32",best:"RoundState",background:"Vec<RoundState>"},RoundState:{round:"u32",totalWeight:"u32",thresholdWeight:"u32",prevotes:"Prevotes",precommits:"Precommits"},SetId:"u64",StoredPendingChange:{scheduledAt:"BlockNumber",delay:"BlockNumber",nextAuthorities:"AuthorityList"},StoredState:{_enum:{Live:"Null",PendingPause:"PendingPause",Paused:"Null",PendingResume:"PendingResume"}}}};

	var definitions$I = {rpc:{},types:{IdentityFields:{_set:{_bitLength:64,Display:1,Legal:2,Web:4,Riot:8,Email:16,PgpFingerprint:32,Image:64,Twitter:128}},IdentityInfoAdditional:"(Data, Data)",IdentityInfoTo198:{additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data"},IdentityInfo:{_fallback:"IdentityInfoTo198",additional:"Vec<IdentityInfoAdditional>",display:"Data",legal:"Data",web:"Data",riot:"Data",email:"Data",pgpFingerprint:"Option<H160>",image:"Data",twitter:"Data"},IdentityJudgement:{_enum:{Unknown:"Null",FeePaid:"Balance",Reasonable:"Null",KnownGood:"Null",OutOfDate:"Null",LowQuality:"Null",Erroneous:"Null"}},RegistrationJudgement:"(RegistrarIndex, IdentityJudgement)",RegistrationTo198:{judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfoTo198"},Registration:{_fallback:"RegistrationTo198",judgements:"Vec<RegistrationJudgement>",deposit:"Balance",info:"IdentityInfo"},RegistrarIndex:"u32",RegistrarInfo:{account:"AccountId",fee:"Balance",fields:"IdentityFields"}}};

	var definitions$H = {rpc:{},types:{AuthIndex:"u32",AuthoritySignature:"Signature",Heartbeat:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex",validatorsLen:"u32"},HeartbeatTo244:{blockNumber:"BlockNumber",networkState:"OpaqueNetworkState",sessionIndex:"SessionIndex",authorityIndex:"AuthIndex"},OpaqueMultiaddr:"Opaque<Bytes>",OpaquePeerId:"Opaque<Bytes>",OpaqueNetworkState:{peerId:"OpaquePeerId",externalAddresses:"Vec<OpaqueMultiaddr>"}}};

	var definitions$G = {rpc:{},types:{CallIndex:"(u8, u8)",LotteryConfig:{price:"Balance",start:"BlockNumber",length:"BlockNumber",delay:"BlockNumber",repeat:"bool"}}};

	const rpc$a={generateBatchProof:{description:"Generate MMR proof for the given leaf indices.",params:[{name:"leafIndices",type:"Vec<u64>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrLeafProof"},generateProof:{description:"Generate MMR proof for given leaf index.",params:[{name:"leafIndex",type:"u64"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MmrLeafBatchProof"}};

	const MMR_V1_V2={generate_batch_proof:{description:"Generate MMR proof for a series of leaves under given indices.",params:[{name:"leafIndices",type:"Vec<MmrLeafIndex>"}],type:"Result<(Vec<MmrEncodableOpaqueLeaf>, MmrBatchProof), MmrError>"},generate_proof:{description:"Generate MMR proof for a leaf under given index.",params:[{name:"leafIndex",type:"MmrLeafIndex"}],type:"Result<(MmrEncodableOpaqueLeaf, MmrProof), MmrError>"},mmr_root:{description:"Return the on-chain MMR root hash.",params:[],type:"Result<Hash, MmrError>"},verify_batch_proof:{description:"Verify MMR proof against on-chain MMR for a batch of leaves.",params:[{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_batch_proof_stateless:{description:"Verify MMR proof against given root hash or a batch of leaves.",params:[{name:"root",type:"Hash"},{name:"leaves",type:"Vec<MmrEncodableOpaqueLeaf>"},{name:"proof",type:"MmrBatchProof"}],type:"Result<(), MmrError>"},verify_proof:{description:"Verify MMR proof against on-chain MMR.",params:[{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"},verify_proof_stateless:{description:"Verify MMR proof against given root hash.",params:[{name:"root",type:"Hash"},{name:"leaf",type:"MmrEncodableOpaqueLeaf"},{name:"proof",type:"MmrProof"}],type:"Result<(), MmrError>"}};const runtime$g={MmrApi:[{methods:MMR_V1_V2,version:2},{methods:MMR_V1_V2,version:1}]};

	var definitions$F = {rpc:rpc$a,runtime:runtime$g,types:{MmrBatchProof:{leafIndices:"Vec<MmrLeafIndex>",leafCount:"MmrNodeIndex",items:"Vec<Hash>"},MmrEncodableOpaqueLeaf:"Bytes",MmrError:{_enum:["Push","GetRoot","Commit","GenerateProof","Verify","LeafNotFound"," PalletNotIncluded","InvalidLeafIndex"]},MmrLeafBatchProof:{blockHash:"BlockHash",leaves:"Bytes",proof:"Bytes"},MmrLeafIndex:"u64",MmrLeafProof:{blockHash:"BlockHash",leaf:"Bytes",proof:"Bytes"},MmrNodeIndex:"u64",MmrProof:{leafIndex:"MmrLeafIndex",leafCount:"MmrNodeIndex",items:"Vec<Hash>"}}};

	const runtime$f={NftsApi:[{methods:{attribute:{description:"An attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},collection_attribute:{description:"A collection attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},collection_owner:{description:"A collection owner",params:[{name:"collection",type:"NftCollectionId"}],type:"Option<AccountId>"},custom_attribute:{description:"A custom attribute",params:[{name:"account",type:"AccountId"},{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},owner:{description:"Collection owner",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"}],type:"Option<AccountId>"},system_attribute:{description:"System attribute",params:[{name:"collection",type:"NftCollectionId"},{name:"item",type:"NftItemId"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"}},version:1}]};

	var definitions$E = {rpc:{},runtime:runtime$f,types:{NftCollectionId:"u32",NftItemId:"u32"}};

	const runtime$e={NominationPoolsApi:[{methods:{balance_to_points:{description:"Returns the equivalent points of `new_funds` for a given pool.",params:[{name:"poolId",type:"NpPoolId"},{name:"newFunds",type:"Balance"}],type:"Balance"},pending_rewards:{description:"Returns the pending rewards for the given member.",params:[{name:"member",type:"AccountId"}],type:"Balance"},points_to_balance:{description:"Returns the equivalent balance of `points` for a given pool.",params:[{name:"poolId",type:"NpPoolId"},{name:"points",type:"Balance"}],type:"Balance"}},version:1}]};

	var definitions$D = {rpc:{},runtime:runtime$e,types:{NpApiError:{_enum:["MemberNotFound","OverflowInPendingRewards"]},NpPoolId:"u32"}};

	var definitions$C = {rpc:{},types:{DeferredOffenceOf:"(Vec<OffenceDetails>, Vec<Perbill>, SessionIndex)",Kind:"[u8; 16]",OffenceDetails:{offender:"Offender",reporters:"Vec<Reporter>"},Offender:"IdentificationTuple",OpaqueTimeSlot:"Bytes",ReportIdOf:"Hash",Reporter:"AccountId"}};

	const runtime$d={DifficultyApi:[{methods:{difficulty:{description:"Return the target difficulty of the next block.",params:[],type:"Raw"}},version:1}],TimestampApi:[{methods:{timestamp:{description:"API necessary for timestamp-based difficulty adjustment algorithms.",params:[],type:"Moment"}},version:1}]};

	var definitions$B = {rpc:{},runtime:runtime$d,types:{}};

	var definitions$A = {rpc:{},types:{ProxyDefinition:{delegate:"AccountId",proxyType:"ProxyType",delay:"BlockNumber"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking"]},ProxyAnnouncement:{real:"AccountId",callHash:"Hash",height:"BlockNumber"}}};

	var definitions$z = {rpc:{},types:{ActiveRecovery:{created:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>"},RecoveryConfig:{delayPeriod:"BlockNumber",deposit:"Balance",friends:"Vec<AccountId>",threshold:"u16"}}};

	var definitions$y = {rpc:{},types:{Period:"(BlockNumber, u32)",Priority:"u8",SchedulePeriod:"Period",SchedulePriority:"Priority",Scheduled:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>",origin:"PalletsOrigin"},ScheduledTo254:{maybeId:"Option<Bytes>",priority:"SchedulePriority",call:"Call",maybePeriodic:"Option<SchedulePeriod>"},TaskAddress:"(BlockNumber, u32)"}};

	const runtime$c={SessionKeys:[{methods:{decode_session_keys:{description:"Decode the given public session keys.",params:[{name:"encoded",type:"Bytes"}],type:"Option<Vec<(Bytes, KeyTypeId)>>"},generate_session_keys:{description:"Generate a set of session keys with optionally using the given seed.",params:[{name:"seed",type:"Option<Bytes>"}],type:"Bytes"}},version:1}]};

	const keyTypes={BeefyKey:"[u8; 33]",Keys:"SessionKeys4",SessionKeys1:"(AccountId)",SessionKeys2:"(AccountId, AccountId)",SessionKeys3:"(AccountId, AccountId, AccountId)",SessionKeys4:"(AccountId, AccountId, AccountId, AccountId)",SessionKeys5:"(AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys6B:"(AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys7:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys7B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys8:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys8B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys9:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys9B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)",SessionKeys10:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId)",SessionKeys10B:"(AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, AccountId, BeefyKey)"};var definitions$x = {rpc:{},runtime:runtime$c,types:objectSpread({},keyTypes,{FullIdentification:"Exposure",IdentificationTuple:"(ValidatorId, FullIdentification)",MembershipProof:{session:"SessionIndex",trieNodes:"Vec<Bytes>",validatorCount:"ValidatorCount"},SessionIndex:"u32",ValidatorCount:"u32"})};

	var definitions$w = {rpc:{},types:{Bid:{who:"AccountId",kind:"BidKind",value:"Balance"},BidKind:{_enum:{Deposit:"Balance",Vouch:"(AccountId, Balance)"}},SocietyJudgement:{_enum:["Rebid","Reject","Approve"]},SocietyVote:{_enum:["Skeptic","Reject","Approve"]},StrikeCount:"u32",VouchingStatus:{_enum:["Vouching","Banned"]}}};

	const runtime$b={StakingApi:[{methods:{nominations_quota:{description:"Returns the nominations quota for a nominator with a given balance.",params:[{name:"balance",type:"Balance"}],type:"u32"}},version:1}]};

	const deprecated={Points:"u32",EraPoints:{total:"Points",individual:"Vec<Points>"}},phragmen={CompactAssignments:"CompactAssignmentsWith16",CompactAssignmentsWith16:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>"},CompactAssignmentsWith24:{votes1:"Vec<(NominatorIndexCompact, ValidatorIndexCompact)>",votes2:"Vec<(NominatorIndexCompact, CompactScoreCompact, ValidatorIndexCompact)>",votes3:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 2], ValidatorIndexCompact)>",votes4:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 3], ValidatorIndexCompact)>",votes5:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 4], ValidatorIndexCompact)>",votes6:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 5], ValidatorIndexCompact)>",votes7:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 6], ValidatorIndexCompact)>",votes8:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 7], ValidatorIndexCompact)>",votes9:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 8], ValidatorIndexCompact)>",votes10:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 9], ValidatorIndexCompact)>",votes11:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 10], ValidatorIndexCompact)>",votes12:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 11], ValidatorIndexCompact)>",votes13:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 12], ValidatorIndexCompact)>",votes14:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 13], ValidatorIndexCompact)>",votes15:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 14], ValidatorIndexCompact)>",votes16:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 15], ValidatorIndexCompact)>",votes17:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 16], ValidatorIndexCompact)>",votes18:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 17], ValidatorIndexCompact)>",votes19:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 18], ValidatorIndexCompact)>",votes20:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 19], ValidatorIndexCompact)>",votes21:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 20], ValidatorIndexCompact)>",votes22:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 21], ValidatorIndexCompact)>",votes23:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 22], ValidatorIndexCompact)>",votes24:"Vec<(NominatorIndexCompact, [CompactScoreCompact; 23], ValidatorIndexCompact)>"},CompactAssignmentsTo265:"CompactAssignmentsWith16",CompactAssignmentsTo257:{votes1:"Vec<(NominatorIndex, [CompactScore; 0], ValidatorIndex)>",votes2:"Vec<(NominatorIndex, [CompactScore; 1], ValidatorIndex)>",votes3:"Vec<(NominatorIndex, [CompactScore; 2], ValidatorIndex)>",votes4:"Vec<(NominatorIndex, [CompactScore; 3], ValidatorIndex)>",votes5:"Vec<(NominatorIndex, [CompactScore; 4], ValidatorIndex)>",votes6:"Vec<(NominatorIndex, [CompactScore; 5], ValidatorIndex)>",votes7:"Vec<(NominatorIndex, [CompactScore; 6], ValidatorIndex)>",votes8:"Vec<(NominatorIndex, [CompactScore; 7], ValidatorIndex)>",votes9:"Vec<(NominatorIndex, [CompactScore; 8], ValidatorIndex)>",votes10:"Vec<(NominatorIndex, [CompactScore; 9], ValidatorIndex)>",votes11:"Vec<(NominatorIndex, [CompactScore; 10], ValidatorIndex)>",votes12:"Vec<(NominatorIndex, [CompactScore; 11], ValidatorIndex)>",votes13:"Vec<(NominatorIndex, [CompactScore; 12], ValidatorIndex)>",votes14:"Vec<(NominatorIndex, [CompactScore; 13], ValidatorIndex)>",votes15:"Vec<(NominatorIndex, [CompactScore; 14], ValidatorIndex)>",votes16:"Vec<(NominatorIndex, [CompactScore; 15], ValidatorIndex)>"},CompactScore:"(ValidatorIndex, OffchainAccuracy)",CompactScoreCompact:"(ValidatorIndexCompact, OffchainAccuracyCompact)",ElectionCompute:{_enum:["OnChain","Signed","Unsigned"]},ElectionPhase:{_enum:{Off:null,Signed:null,Unsigned:"(bool, BlockNumber)",Emergency:null}},ElectionResult:{compute:"ElectionCompute",slotStake:"Balance",electedStashes:"Vec<AccountId>",exposures:"Vec<(AccountId, Exposure)>"},ElectionScore:"[u128; 3]",ElectionSize:{validators:"Compact<ValidatorIndex>",nominators:"Compact<NominatorIndex>"},ElectionStatus:{_enum:{Close:"Null",Open:"BlockNumber"}},ExtendedBalance:"u128",RawSolution:"RawSolutionWith16",RawSolutionWith16:{compact:"CompactAssignmentsWith16",score:"ElectionScore",round:"u32"},RawSolutionWith24:{compact:"CompactAssignmentsWith24",score:"ElectionScore",round:"u32"},RawSolutionTo265:"RawSolutionWith16",ReadySolution:{supports:"SolutionSupports",score:"ElectionScore",compute:"ElectionCompute"},RoundSnapshot:{voters:"Vec<(AccountId, VoteWeight, Vec<AccountId>)>",targets:"Vec<AccountId>"},SeatHolder:{who:"AccountId",stake:"Balance",deposit:"Balance"},SignedSubmission:{_fallback:"SignedSubmissionTo276",who:"AccountId",deposit:"Balance",solution:"RawSolution",reward:"Balance"},SignedSubmissionTo276:{who:"AccountId",deposit:"Balance",solution:"RawSolution"},SignedSubmissionOf:"SignedSubmission",SolutionOrSnapshotSize:{voters:"Compact<u32>",targets:"Compact<u32>"},SolutionSupport:{total:"ExtendedBalance",voters:"Vec<(AccountId, ExtendedBalance)>"},SolutionSupports:"Vec<(AccountId, SolutionSupport)>",Supports:"SolutionSupports",SubmissionIndicesOf:"BTreeMap<ElectionScore, u32>",Voter:{votes:"Vec<AccountId>",stake:"Balance",deposit:"Balance"},VoteWeight:"u64"};var definitions$v = {rpc:{},runtime:runtime$b,types:objectSpread({},deprecated,phragmen,{ActiveEraInfo:{index:"EraIndex",start:"Option<Moment>"},EraIndex:"u32",EraRewardPoints:{total:"RewardPoint",individual:"BTreeMap<AccountId, RewardPoint>"},EraRewards:{total:"u32",rewards:"Vec<u32>"},Exposure:{total:"Compact<Balance>",own:"Compact<Balance>",others:"Vec<IndividualExposure>"},Forcing:{_enum:["NotForcing","ForceNew","ForceNone","ForceAlways"]},IndividualExposure:{who:"AccountId",value:"Compact<Balance>"},KeyType:"AccountId",MomentOf:"Moment",Nominations:{targets:"Vec<AccountId>",submittedIn:"EraIndex",suppressed:"bool"},NominatorIndex:"u32",NominatorIndexCompact:"Compact<NominatorIndex>",OffchainAccuracy:"PerU16",OffchainAccuracyCompact:"Compact<OffchainAccuracy>",PhragmenScore:"[u128; 3]",Points:"u32",RewardDestination:{_enum:{Staked:"Null",Stash:"Null",Controller:"Null",Account:"AccountId",None:"Null"}},RewardPoint:"u32",SlashJournalEntry:{who:"AccountId",amount:"Balance",ownSlash:"Balance"},SlashingSpansTo204:{spanIndex:"SpanIndex",lastStart:"EraIndex",prior:"Vec<EraIndex>"},SlashingSpans:{spanIndex:"SpanIndex",lastStart:"EraIndex",lastNonzeroSlash:"EraIndex",prior:"Vec<EraIndex>"},SpanIndex:"u32",SpanRecord:{slashed:"Balance",paidOut:"Balance"},StakingLedgerTo223:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>"},StakingLedgerTo240:{_fallback:"StakingLedgerTo223",stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",lastReward:"Option<EraIndex>"},StakingLedger:{stash:"AccountId",total:"Compact<Balance>",active:"Compact<Balance>",unlocking:"Vec<UnlockChunk>",claimedRewards:"Vec<EraIndex>"},UnappliedSlashOther:"(AccountId, Balance)",UnappliedSlash:{validator:"AccountId",own:"Balance",others:"Vec<UnappliedSlashOther>",reporters:"Vec<AccountId>",payout:"Balance"},UnlockChunk:{value:"Compact<Balance>",era:"Compact<BlockNumber>"},ValidatorIndex:"u16",ValidatorIndexCompact:"Compact<ValidatorIndex>",ValidatorPrefs:"ValidatorPrefsWithBlocked",ValidatorPrefsWithCommission:{commission:"Compact<Perbill>"},ValidatorPrefsWithBlocked:{commission:"Compact<Perbill>",blocked:"bool"},ValidatorPrefsTo196:{validatorPayment:"Compact<Balance>"},ValidatorPrefsTo145:{unstakeThreshold:"Compact<u32>",validatorPayment:"Compact<Balance>"}})};

	var definitions$u = {rpc:{},types:{WeightToFeeCoefficient:{coeffInteger:"Balance",coeffFrac:"Perbill",negative:"bool",degree:"u8"}}};

	const rpc$9={genSyncSpec:{description:"Returns the json-serialized chainspec running the node, with a sync state.",endpoint:"sync_state_genSyncSpec",params:[{name:"raw",type:"bool"}],type:"Json"}};

	var definitions$t = {rpc:rpc$9,types:{}};

	const rpc$8={accountNextIndex:{alias:["account_nextIndex"],description:"Retrieves the next accountIndex as available on the node",params:[{name:"accountId",type:"AccountId"}],type:"Index"},addLogFilter:{description:"Adds the supplied directives to the current log filter",isUnsafe:!0,params:[{name:"directives",type:"Text"}],type:"Null"},addReservedPeer:{description:"Adds a reserved peer",isUnsafe:!0,params:[{name:"peer",type:"Text"}],type:"Text"},chain:{description:"Retrieves the chain",params:[],type:"Text"},chainType:{description:"Retrieves the chain type",params:[],type:"ChainType"},dryRun:{alias:["system_dryRunAt"],description:"Dry run an extrinsic at a given block",isUnsafe:!0,params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ApplyExtrinsicResult"},health:{description:"Return health status of the node",noErrorLog:!0,params:[],type:"Health"},localListenAddresses:{description:"The addresses include a trailing /p2p/ with the local PeerId, and are thus suitable to be passed to addReservedPeer or as a bootnode address for example",params:[],type:"Vec<Text>"},localPeerId:{description:"Returns the base58-encoded PeerId of the node",params:[],type:"Text"},name:{description:"Retrieves the node name",params:[],type:"Text"},networkState:{alias:["system_unstable_networkState"],description:"Returns current state of the network",isUnsafe:!0,params:[],type:"NetworkState"},nodeRoles:{description:"Returns the roles the node is running as",params:[],type:"Vec<NodeRole>"},peers:{description:"Returns the currently connected peers",isUnsafe:!0,params:[],type:"Vec<PeerInfo>"},properties:{description:"Get a custom set of properties as a JSON object, defined in the chain spec",params:[],type:"ChainProperties"},removeReservedPeer:{description:"Remove a reserved peer",isUnsafe:!0,params:[{name:"peerId",type:"Text"}],type:"Text"},reservedPeers:{description:"Returns the list of reserved peers",params:[],type:"Vec<Text>"},resetLogFilter:{description:"Resets the log filter to Substrate defaults",isUnsafe:!0,params:[],type:"Null"},syncState:{description:"Returns the state of the syncing of the node",params:[],type:"SyncState"},version:{description:"Retrieves the version of the node",params:[],type:"Text"}};

	const runtime$a={AccountNonceApi:[{methods:{account_nonce:{description:"The API to query account nonce (aka transaction index)",params:[{name:"accountId",type:"AccountId"}],type:"Index"}},version:1}]};

	var definitions$s = {rpc:rpc$8,runtime:runtime$a,types:{AccountInfo:"AccountInfoWithTripleRefCount",AccountInfoWithRefCountU8:{nonce:"Index",refcount:"u8",data:"AccountData"},AccountInfoWithRefCount:{_fallback:"AccountInfoWithRefCountU8",nonce:"Index",refcount:"RefCount",data:"AccountData"},AccountInfoWithDualRefCount:{_fallback:"AccountInfoWithRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",data:"AccountData"},AccountInfoWithProviders:"AccountInfoWithDualRefCount",AccountInfoWithTripleRefCount:{_fallback:"AccountInfoWithDualRefCount",nonce:"Index",consumers:"RefCount",providers:"RefCount",sufficients:"RefCount",data:"AccountData"},ApplyExtrinsicResult:"Result<DispatchOutcome, TransactionValidityError>",ApplyExtrinsicResultPre6:"Result<DispatchOutcomePre6, TransactionValidityError>",ArithmeticError:{_enum:["Underflow","Overflow","DivisionByZero"]},BlockLength:{max:"PerDispatchClassU32"},BlockWeights:{baseBlock:"Weight",maxBlock:"Weight",perClass:"PerDispatchClassWeightsPerClass"},ChainProperties:"GenericChainProperties",ChainType:{_enum:{Development:"Null",Local:"Null",Live:"Null",Custom:"Text"}},ConsumedWeight:"PerDispatchClassWeight",DigestOf:"Digest",DispatchClass:{_enum:["Normal","Operational","Mandatory"]},DispatchError:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModule",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError",Exhausted:"Null",Corruption:"Null",Unavailable:"Null"}},DispatchErrorPre6:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",TooManyConsumers:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorPre6First:{_enum:{Other:"Null",CannotLookup:"Null",BadOrigin:"Null",Module:"DispatchErrorModulePre6",ConsumerRemaining:"Null",NoProviders:"Null",Token:"TokenError",Arithmetic:"ArithmeticError",Transactional:"TransactionalError"}},DispatchErrorModuleU8:{index:"u8",error:"u8"},DispatchErrorModuleU8a:{index:"u8",error:"[u8; 4]"},DispatchErrorModule:"DispatchErrorModuleU8a",DispatchErrorModulePre6:"DispatchErrorModuleU8",DispatchErrorTo198:{module:"Option<u8>",error:"u8"},DispatchInfo:{weight:"Weight",class:"DispatchClass",paysFee:"Pays"},DispatchInfoTo190:{weight:"Weight",class:"DispatchClass"},DispatchInfoTo244:{weight:"Weight",class:"DispatchClass",paysFee:"bool"},DispatchOutcome:"Result<(), DispatchError>",DispatchOutcomePre6:"Result<(), DispatchErrorPre6>",DispatchResult:"Result<(), DispatchError>",DispatchResultOf:"DispatchResult",DispatchResultTo198:"Result<(), Text>",Event:"GenericEvent",EventId:"[u8; 2]",EventIndex:"u32",EventRecord:{phase:"Phase",event:"Event",topics:"Vec<Hash>"},Health:{peers:"u64",isSyncing:"bool",shouldHavePeers:"bool"},InvalidTransaction:{_enum:{Call:"Null",Payment:"Null",Future:"Null",Stale:"Null",BadProof:"Null",AncientBirthBlock:"Null",ExhaustsResources:"Null",Custom:"u8",BadMandatory:"Null",MandatoryDispatch:"Null",BadSigner:"Null"}},Key:"Bytes",LastRuntimeUpgradeInfo:{specVersion:"Compact<u32>",specName:"Text"},NetworkState:{peerId:"Text",listenedAddresses:"Vec<Text>",externalAddresses:"Vec<Text>",connectedPeers:"HashMap<Text, Peer>",notConnectedPeers:"HashMap<Text, NotConnectedPeer>",averageDownloadPerSec:"u64",averageUploadPerSec:"u64",peerset:"NetworkStatePeerset"},NetworkStatePeerset:{messageQueue:"u64",nodes:"HashMap<Text, NetworkStatePeersetInfo>"},NetworkStatePeersetInfo:{connected:"bool",reputation:"i32"},NodeRole:{_enum:{Full:"Null",LightClient:"Null",Authority:"Null",UnknownRole:"u8"}},NotConnectedPeer:{knownAddresses:"Vec<Text>",latestPingTime:"Option<PeerPing>",versionString:"Option<Text>"},Peer:{enabled:"bool",endpoint:"PeerEndpoint",knownAddresses:"Vec<Text>",latestPingTime:"PeerPing",open:"bool",versionString:"Text"},PeerEndpoint:{listening:"PeerEndpointAddr"},PeerEndpointAddr:{_alias:{localAddr:"local_addr",sendBackAddr:"send_back_addr"},localAddr:"Text",sendBackAddr:"Text"},PeerPing:{nanos:"u64",secs:"u64"},PeerInfo:{peerId:"Text",roles:"Text",protocolVersion:"u32",bestHash:"Hash",bestNumber:"BlockNumber"},PerDispatchClassU32:{normal:"u32",operational:"u32",mandatory:"u32"},PerDispatchClassWeight:{normal:"Weight",operational:"Weight",mandatory:"Weight"},PerDispatchClassWeightsPerClass:{normal:"WeightPerClass",operational:"WeightPerClass",mandatory:"WeightPerClass"},Phase:{_enum:{ApplyExtrinsic:"u32",Finalization:"Null",Initialization:"Null"}},RawOrigin:{_enum:{Root:"Null",Signed:"AccountId",None:"Null"}},RefCount:"u32",RefCountTo259:"u8",SyncState:{startingBlock:"BlockNumber",currentBlock:"BlockNumber",highestBlock:"Option<BlockNumber>"},SystemOrigin:"RawOrigin",TokenError:{_enum:["NoFunds","WouldDie","BelowMinimum","CannotCreate","UnknownAsset","Frozen","Unsupported","Underflow","Overflow"]},TransactionValidityError:{_enum:{Invalid:"InvalidTransaction",Unknown:"UnknownTransaction"}},TransactionalError:{_enum:["LimitReached","NoLayer"]},UnknownTransaction:{_enum:{CannotLookup:"Null",NoUnsignedValidator:"Null",Custom:"u8"}},WeightPerClass:{baseExtrinsic:"Weight",maxExtrinsic:"Option<Weight>",maxTotal:"Option<Weight>",reserved:"Option<Weight>"}}};

	var definitions$r = {rpc:{},types:{Bounty:{proposer:"AccountId",value:"Balance",fee:"Balance",curatorDeposit:"Balance",bond:"Balance",status:"BountyStatus"},BountyIndex:"u32",BountyStatus:{_enum:{Proposed:"Null",Approved:"Null",Funded:"Null",CuratorProposed:"BountyStatusCuratorProposed",Active:"BountyStatusActive",PendingPayout:"BountyStatusPendingPayout"}},BountyStatusActive:{curator:"AccountId",updateDue:"BlockNumber"},BountyStatusCuratorProposed:{curator:"AccountId"},BountyStatusPendingPayout:{curator:"AccountId",beneficiary:"AccountId",unlockAt:"BlockNumber"},OpenTip:{reason:"Hash",who:"AccountId",finder:"AccountId",deposit:"Balance",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>",findersFee:"bool"},OpenTipTo225:{reason:"Hash",who:"AccountId",finder:"Option<OpenTipFinderTo225>",closes:"Option<BlockNumber>",tips:"Vec<OpenTipTip>"},OpenTipFinderTo225:"(AccountId, Balance)",OpenTipTip:"(AccountId, Balance)",TreasuryProposal:{proposer:"AccountId",value:"Balance",beneficiary:"AccountId",bond:"Balance"}}};

	var definitions$q = {rpc:{},types:{Multiplier:"Fixed128"}};

	const runtime$9={TaggedTransactionQueue:[{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"},{name:"blockHash",type:"BlockHash"}],type:"TransactionValidity"}},version:3},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"source",type:"TransactionSource"},{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:2},{methods:{validate_transaction:{description:"Validate the transaction.",params:[{name:"tx",type:"Extrinsic"}],type:"TransactionValidity"}},version:1}]};

	var definitions$p = {rpc:{},runtime:runtime$9,types:{TransactionSource:{_enum:["InBlock","Local","External"]},TransactionValidity:"Result<ValidTransaction, TransactionValidityError>",ValidTransaction:{priority:"TransactionPriority",requires:"Vec<TransactionTag>",provides:"Vec<TransactionTag>",longevity:"TransactionLongevity",propagate:"bool"}}};

	var definitions$o = {rpc:{},types:{ClassId:"u32",InstanceId:"u32",DepositBalance:"Balance",DepositBalanceOf:"Balance",ClassDetails:{owner:"AccountId",issuer:"AccountId",admin:"AccountId",freezer:"AccountId",totalDeposit:"DepositBalance",freeHolding:"bool",instances:"u32",instanceMetadatas:"u32",attributes:"u32",isFrozen:"bool"},DestroyWitness:{instances:"Compact<u32>",instanceMetadatas:"Compact<u32>",attributes:"Compact<u32>"},InstanceDetails:{owner:"AccountId",approved:"Option<AccountId>",isFrozen:"bool",deposit:"DepositBalance"},ClassMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"},InstanceMetadata:{deposit:"DepositBalance",data:"Vec<u8>",isFrozen:"bool"}}};

	var definitions$n = {rpc:{},types:{Multisig:{when:"Timepoint",deposit:"Balance",depositor:"AccountId",approvals:"Vec<AccountId>"},Timepoint:{height:"BlockNumber",index:"u32"}}};

	var definitions$m = {rpc:{},types:{VestingInfo:{locked:"Balance",perBlock:"Balance",startingBlock:"BlockNumber"}}};

	var definitions$l = {rpc:{},types:{BlockAttestations:{receipt:"CandidateReceipt",valid:"Vec<AccountId>",invalid:"Vec<AccountId>"},IncludedBlocks:{actualNumber:"BlockNumber",session:"SessionIndex",randomSeed:"H256",activeParachains:"Vec<ParaId>",paraBlocks:"Vec<Hash>"},MoreAttestations:{}}};

	var definitions$k = {rpc:{},types:{BridgedBlockHash:"H256",BridgedBlockNumber:"BlockNumber",BridgedHeader:"Header",BridgeMessageId:"(LaneId, MessageNonce)",CallOrigin:{_enum:{SourceRoot:"Null",TargetAccount:"(AccountId, MultiSigner, MultiSignature)",SourceAccount:"AccountId"}},ChainId:"[u8; 4]",DeliveredMessages:{begin:"MessageNonce",end:"MessageNonce",dispatchResults:"BitVec"},DispatchFeePayment:{_enum:["AtSourceChain","AtTargetChain"]},InboundLaneData:{relayers:"Vec<UnrewardedRelayer>",lastConfirmedNonce:"MessageNonce"},InboundRelayer:"AccountId",InitializationData:{header:"Header",authorityList:"AuthorityList",setId:"SetId",isHalted:"bool"},LaneId:"[u8; 4]",MessageData:{payload:"Bytes",fee:"Balance"},MessagesDeliveryProofOf:{bridgedHeaderHash:"BlockHash",storageProof:"Vec<Bytes>",lane:"LaneId"},MessageKey:{laneId:"LaneId",nonce:"MessageNonce"},MessageNonce:"u64",MessagesProofOf:{bridgedHeaderHash:"BridgedBlockHash",storageProof:"Vec<Bytes>",lane:"LaneId",noncesStart:"MessageNonce",noncesEnd:"MessageNonce"},OperatingMode:{_enum:["Normal","RejectingOutboundMessages","Halted"]},OutboundLaneData:{oldestUnprunedNonce:"MessageNonce",latestReceivedNonce:"MessageNonce",latestGeneratedNonce:"MessageNonce"},OutboundMessageFee:"Balance",OutboundPayload:{specVersion:"u32",weight:"Weight",origin:"CallOrigin",dispatchFeePayment:"DispatchFeePayment",call:"Bytes"},Parameter:"Null",RelayerId:"AccountId",UnrewardedRelayer:{relayer:"RelayerId",messages:"DeliveredMessages"},UnrewardedRelayersState:{unrewardedRelayer_Entries:"MessageNonce",messagesInOldestEntry:"MessageNonce",totalMessages:"MessageNonce"}}};

	var definitions$j = {rpc:{},types:{StatementKind:{_enum:["Regular","Saft"]}}};

	var definitions$i = {rpc:{},types:{FundIndex:"u32",LastContribution:{_enum:{Never:"Null",PreEnding:"u32",Ending:"BlockNumber"}},FundInfo:{depositor:"AccountId",verifier:"Option<MultiSigner>",deposit:"Balance",raised:"Balance",end:"BlockNumber",cap:"Balance",lastContribution:"LastContribution",firstPeriod:"LeasePeriod",lastPeriod:"LeasePeriod",trieIndex:"TrieIndex"},TrieIndex:"u32"}};

	const runtime$8={CollectCollationInfo:[{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[{name:"header",type:"Header"}],type:"CollationInfo"}},version:2},{methods:{collect_collation_info:{description:"Collect information about a collation.",params:[],type:"CollationInfoV1"}},version:1}]};

	const dmpQueue={CollationInfo:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber",headData:"HeadData"},CollationInfoV1:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",processedDownwardMessages:"u32",hrmpWatermark:"RelayBlockNumber"},ConfigData:{maxIndividual:"Weight"},MessageId:"[u8; 32]",OverweightIndex:"u64",PageCounter:"u32",PageIndexData:{beginUsed:"PageCounter",endUsed:"PageCounter",overweightCount:"OverweightIndex"}};var definitions$h = {rpc:{},runtime:runtime$8,types:dmpQueue};

	const finalityV1={methods:{best_finalized:{description:"Returns number and hash of the best finalized header known to the bridge module.",params:[],type:"(BlockNumber, Hash)"}},version:1};const runtime$7={KusamaFinalityApi:[finalityV1],PolkadotFinalityApi:[finalityV1],RococoFinalityApi:[finalityV1],WestendFinalityApi:[finalityV1]};

	var definitions$g = {rpc:{},runtime:runtime$7,types:{}};

	var hrmpTypes = {HrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>",senderDeposit:"Balance",recipientDeposit:"Balance"},HrmpChannelId:{sender:"u32",receiver:"u32"},HrmpOpenChannelRequest:{confirmed:"bool",age:"SessionIndex",senderDeposit:"Balance",maxMessageSize:"u32",maxCapacity:"u32",maxTotalSize:"u32"}};

	const PH_V1_TO_V2={assumed_validation_data:{description:"Returns the persisted validation data for the given `ParaId` along with the corresponding validation code hash.",params:[{name:"paraId",type:"ParaId"},{name:"hash",type:"Hash"}],type:"Option<(PersistedValidationData, ValidationCodeHash)>"},availability_cores:{description:"Yields information on all availability cores as relevant to the child block.",params:[],type:"Vec<CoreState>"},candidate_events:{description:"Get a vector of events concerning candidates that occurred within a block.",params:[],type:"Vec<CandidateEvent>"},candidate_pending_availability:{description:"Get the receipt of a candidate pending availability.",params:[{name:"paraId",type:"ParaId"}],type:"Option<CommittedCandidateReceipt>"},check_validation_outputs:{description:"Checks if the given validation outputs pass the acceptance criteria.",params:[{name:"paraId",type:"ParaId"},{name:"outputs",type:"CandidateCommitments"}],type:"bool"},dmq_contents:{description:"Get all the pending inbound messages in the downward message queue for a para.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundDownwardMessage>"},inbound_hrmp_channels_contents:{description:"Get the contents of all channels addressed to the given recipient.",params:[{name:"paraId",type:"ParaId"}],type:"Vec<InboundHrmpMessage>"},on_chain_votes:{description:"Scrape dispute relevant from on-chain, backing votes and resolved disputes.",params:[],type:"Option<ScrapedOnChainVotes>"},persisted_validation_data:{description:"Yields the persisted validation data for the given `ParaId` along with an assumption that should be used if the para currently occupies a core.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<PersistedValidationData>"},session_index_for_child:{description:"Returns the session index expected at a child of the block.",params:[],type:"SessionIndex"},validation_code:{description:"Fetch the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"ValidationCode"},validation_code_by_hash:{description:"Get the validation code from its hash.",params:[{name:"hash",type:"ValidationCodeHash"}],type:"Option<ValidationCode>"},validator_groups:{description:"Returns the validator groups and rotation info localized based on the hypothetical child of a block whose state  this is invoked on",params:[],type:"(Vec<Vec<ParaValidatorIndex>>, GroupRotationInfo)"},validators:{description:"Get the current validators.",params:[],type:"Vec<ValidatorId>"}},PH_V2_TO_V3={pvfs_require_precheck:{description:"Returns code hashes of PVFs that require pre-checking by validators in the active set.",params:[],type:"Vec<ValidationCodeHash>"},session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<SessionInfo>"},submit_pvf_check_statement:{description:"Submits a PVF pre-checking statement into the transaction pool.",params:[{name:"stmt",type:"PvfCheckStatement"},{name:"signature",type:"ValidatorSignature"}],type:"Null"},validation_code_hash:{description:"Fetch the hash of the validation code used by a para, making the given `OccupiedCoreAssumption`.",params:[{name:"paraId",type:"ParaId"},{name:"assumption",type:"OccupiedCoreAssumption"}],type:"Option<ValidationCodeHash>"}};const runtime$6={ParachainHost:[{methods:objectSpread({disputes:{description:"Returns all onchain disputes.",params:[],type:"Vec<(SessionIndex, CandidateHash, DisputeState)>"}},PH_V1_TO_V2,PH_V2_TO_V3),version:3},{methods:objectSpread({},PH_V1_TO_V2,PH_V2_TO_V3),version:2},{methods:objectSpread({session_info:{description:"Get the session info for the given session, if stored.",params:[{name:"index",type:"SessionIndex"}],type:"Option<OldV1SessionInfo>"}},PH_V1_TO_V2),version:1}]};

	const SlotRange10={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","OneOne","OneTwo","OneThree","TwoTwo","TwoThree","ThreeThree"]},SlotRange={_enum:["ZeroZero","ZeroOne","ZeroTwo","ZeroThree","ZeroFour","ZeroFive","ZeroSix","ZeroSeven","OneOne","OneTwo","OneThree","OneFour","OneFive","OneSix","OneSeven","TwoTwo","TwoThree","TwoFour","TwoFive","TwoSix","TwoSeven","ThreeThree","ThreeFour","ThreeFive","ThreeSix","ThreeSeven","FourFour","FourFive","FourSix","FourSeven","FiveFive","FiveSix","FiveSeven","SixSix","SixSeven","SevenSeven"]},oldTypes={Bidder:{_enum:{New:"NewBidder",Existing:"ParaId"}},IncomingParachain:{_enum:{Unset:"NewBidder",Fixed:"IncomingParachainFixed",Deploy:"IncomingParachainDeploy"}},IncomingParachainDeploy:{code:"ValidationCode",initialHeadData:"HeadData"},IncomingParachainFixed:{codeHash:"Hash",codeSize:"u32",initialHeadData:"HeadData"},NewBidder:{who:"AccountId",sub:"SubId"},SubId:"u32"};var slotTypes = objectSpread({},oldTypes,{AuctionIndex:"u32",LeasePeriod:"BlockNumber",LeasePeriodOf:"BlockNumber",SlotRange10:SlotRange10,SlotRange:SlotRange,WinningData10:`[WinningDataEntry; ${SlotRange10._enum.length}]`,WinningData:`[WinningDataEntry; ${SlotRange._enum.length}]`,WinningDataEntry:"Option<(AccountId, ParaId, BalanceOf)>",WinnersData10:"Vec<WinnersDataTuple10>",WinnersData:"Vec<WinnersDataTuple>",WinnersDataTuple10:"(AccountId, ParaId, BalanceOf, SlotRange10)",WinnersDataTuple:"(AccountId, ParaId, BalanceOf, SlotRange)"});

	const proposeTypes={ParachainProposal:{proposer:"AccountId",genesisHead:"HeadData",validators:"Vec<ValidatorId>",name:"Bytes",balance:"Balance"},RegisteredParachainInfo:{validators:"Vec<ValidatorId>",proposer:"AccountId"}},cumulusTypes={ServiceQuality:{_enum:["Ordered","Fast"]}},disputeTypes={DisputeLocation:{_enum:["Local","Remote"]},DisputeResult:{_enum:["Valid","Invalid"]},DisputeState:{validatorsFor:"BitVec",validatorsAgainst:"BitVec",start:"BlockNumber",concludedAt:"Option<BlockNumber>"},DisputeStatement:{_enum:{Valid:"ValidDisputeStatementKind",Invalid:"InvalidDisputeStatementKind"}},DisputeStatementSet:{candidateHash:"CandidateHash",session:"SessionIndex",statements:"Vec<(DisputeStatement, ParaValidatorIndex, ValidatorSignature)>"},ExplicitDisputeStatement:{valid:"bool",candidateHash:"CandidateHash",session:"SessionIndex"},InvalidDisputeStatementKind:{_enum:["Explicit"]},MultiDisputeStatementSet:"Vec<DisputeStatementSet>",ValidDisputeStatementKind:{_enum:{Explicit:"Null",BackingSeconded:"Hash",BackingValid:"Hash",ApprovalChecking:"Null"}}};var definitions$f = {rpc:{},runtime:runtime$6,types:objectSpread({},cumulusTypes,disputeTypes,hrmpTypes,proposeTypes,slotTypes,{AbridgedCandidateReceipt:{parachainIndex:"ParaId",relayParent:"Hash",headData:"HeadData",collator:"CollatorId",signature:"CollatorSignature",povBlockHash:"Hash",commitments:"CandidateCommitments"},AbridgedHostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber"},AbridgedHrmpChannel:{maxCapacity:"u32",maxTotalSize:"u32",maxMessageSize:"u32",msgCount:"u32",totalSize:"u32",mqcHead:"Option<Hash>"},AssignmentId:"AccountId",AssignmentKind:{_enum:{Parachain:"Null",Parathread:"(CollatorId, u32)"}},AttestedCandidate:{candidate:"AbridgedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},AuthorityDiscoveryId:"AccountId",AvailabilityBitfield:"BitVec",AvailabilityBitfieldRecord:{bitfield:"AvailabilityBitfield",submittedTt:"BlockNumber"},BackedCandidate:{candidate:"CommittedCandidateReceipt",validityVotes:"Vec<ValidityAttestation>",validatorIndices:"BitVec"},BufferedSessionChange:{applyAt:"BlockNumber",validators:"Vec<ValidatorId>",queued:"Vec<ValidatorId>",sessionIndex:"SessionIndex"},CandidateCommitments:{upwardMessages:"Vec<UpwardMessage>",horizontalMessages:"Vec<OutboundHrmpMessage>",newValidationCode:"Option<ValidationCode>",headData:"HeadData",processedDownwardMessages:"u32",hrmpWatermark:"BlockNumber"},CandidateDescriptor:{paraId:"ParaId",relayParent:"RelayChainHash",collatorId:"CollatorId",persistedValidationDataHash:"Hash",povHash:"Hash",erasureRoot:"Hash",signature:"CollatorSignature",paraHead:"Hash",validationCodeHash:"ValidationCodeHash"},CandidateEvent:{_enum:{CandidateBacked:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateIncluded:"(CandidateReceipt, HeadData, CoreIndex, GroupIndex)",CandidateTimedOut:"(CandidateReceipt, HeadData, CoreIndex)"}},CandidateHash:"Hash",CandidateInfo:{who:"AccountId",deposit:"Balance"},CandidatePendingAvailability:{core:"CoreIndex",hash:"CandidateHash",descriptor:"CandidateDescriptor",availabilityVotes:"BitVec",backers:"BitVec",relayParentNumber:"BlockNumber",backedInNumber:"BlockNumber",backingGroup:"GroupIndex"},CandidateReceipt:{descriptor:"CandidateDescriptor",commitmentsHash:"Hash"},GlobalValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},CollatorId:"H256",CollatorSignature:"Signature",CommittedCandidateReceipt:{descriptor:"CandidateDescriptor",commitments:"CandidateCommitments"},CoreAssignment:{core:"CoreIndex",paraId:"ParaId",kind:"AssignmentKind",groupIdx:"GroupIndex"},CoreIndex:"u32",CoreOccupied:{_enum:{Parathread:"ParathreadEntry",Parachain:"Null"}},CoreState:{_enum:{Occupied:"OccupiedCore",Scheduled:"ScheduledCore",Free:"Null"}},DoubleVoteReport:{identity:"ValidatorId",first:"(Statement, ValidatorSignature)",second:"(Statement, ValidatorSignature)",proof:"MembershipProof",signingContext:"SigningContext"},DownwardMessage:"Bytes",GroupIndex:"u32",GroupRotationInfo:{sessionStartBlock:"BlockNumber",groupRotationFrequency:"BlockNumber",now:"BlockNumber"},GlobalValidationSchedule:{maxCodeSize:"u32",maxHeadDataSize:"u32",blockNumber:"BlockNumber"},HeadData:"Bytes",HostConfiguration:{maxCodeSize:"u32",maxHeadDataSize:"u32",maxUpwardQueueCount:"u32",maxUpwardQueueSize:"u32",maxUpwardMessageSize:"u32",maxUpwardMessageNumPerCandidate:"u32",hrmpMaxMessageNumPerCandidate:"u32",validationUpgradeFrequency:"BlockNumber",validationUpgradeDelay:"BlockNumber",maxPovSize:"u32",maxDownwardMessageSize:"u32",preferredDispatchableUpwardMessagesStepWeight:"Weight",hrmpMaxParachainOutboundChannels:"u32",hrmpMaxParathreadOutboundChannels:"u32",hrmpOpenRequestTtl:"u32",hrmpSenderDeposit:"Balance",hrmpRecipientDeposit:"Balance",hrmpChannelMaxCapacity:"u32",hrmpChannelMaxTotalSize:"u32",hrmpMaxParachainInboundChannels:"u32",hrmpMaxParathreadInboundChannels:"u32",hrmpChannelMaxMessageSize:"u32",codeRetentionPeriod:"BlockNumber",parathreadCores:"u32",parathreadRetries:"u32",groupRotationFrequency:"BlockNumber",chainAvailabilityPeriod:"BlockNumber",threadAvailabilityPeriod:"BlockNumber",schedulingLookahead:"u32",maxValidatorsPerCore:"Option<u32>",maxValidators:"Option<u32>",disputePeriod:"SessionIndex",disputePostConclusionAcceptancePeriod:"BlockNumber",disputeMaxSpamSlots:"u32",disputeConclusionByTimeOutPeriod:"BlockNumber",noShowSlots:"u32",nDelayTranches:"u32",zerothDelayTrancheWidth:"u32",neededApprovals:"u32",relayVrfModuloSamples:"u32"},InboundDownwardMessage:{pubSentAt:"BlockNumber",pubMsg:"DownwardMessage"},InboundHrmpMessage:{sentAt:"BlockNumber",data:"Bytes"},InboundHrmpMessages:"Vec<InboundHrmpMessage>",LocalValidationData:{parentHead:"HeadData",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>"},MessageIngestionType:{downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, InboundHrmpMessages>"},MessageQueueChain:"RelayChainHash",OccupiedCore:{nextUpOnAvailable:"Option<ScheduledCore>",occupiedSince:"BlockNumber",timeOutAt:"BlockNumber",nextUpOnTimeOut:"Option<ScheduledCore>",availability:"BitVec",groupResponsible:"GroupIndex",candidateHash:"CandidateHash",candidateDescriptor:"CandidateDescriptor"},OccupiedCoreAssumption:{_enum:["Included,","TimedOut","Free"]},OutboundHrmpMessage:{recipient:"u32",data:"Bytes"},ParachainDispatchOrigin:{_enum:["Signed","Parachain","Root"]},ParachainInherentData:{validationData:"PersistedValidationData",relayChainState:"StorageProof",downwardMessages:"Vec<InboundDownwardMessage>",horizontalMessages:"BTreeMap<ParaId, VecInboundHrmpMessage>"},ParachainsInherentData:{bitfields:"SignedAvailabilityBitfields",backedCandidates:"Vec<BackedCandidate>",disputes:"MultiDisputeStatementSet",parentHeader:"Header"},ParaGenesisArgs:{genesisHead:"Bytes",validationCode:"Bytes",parachain:"bool"},ParaId:"u32",ParaInfo:{manager:"AccountId",deposit:"Balance",locked:"bool"},ParaLifecycle:{_enum:["Onboarding","Parathread","Parachain","UpgradingToParachain","DowngradingToParathread","OutgoingParathread","OutgoingParachain"]},ParaPastCodeMeta:{upgradeTimes:"Vec<ReplacementTimes>",lastPruned:"Option<BlockNumber>"},ParaScheduling:{_enum:["Always","Dynamic"]},ParathreadClaim:"(ParaId, CollatorId)",ParathreadClaimQueue:{queue:"Vec<QueuedParathread>",nextCoreOffset:"u32"},ParathreadEntry:{claim:"ParathreadClaim",retries:"u32"},ParaValidatorIndex:"u32",PersistedValidationData:{parentHead:"HeadData",relayParentNumber:"RelayChainBlockNumber",relayParentStorageRoot:"Hash",maxPovSize:"u32"},PvfCheckStatement:{accept:"bool",subject:"ValidationCodeHash",sessionIndex:"SessionIndex",validatorIndex:"ParaValidatorIndex"},QueuedParathread:{claim:"ParathreadEntry",coreOffset:"u32"},RelayBlockNumber:"u32",RelayChainBlockNumber:"RelayBlockNumber",RelayHash:"Hash",RelayChainHash:"RelayHash",Remark:"[u8; 32]",ReplacementTimes:{expectedAt:"BlockNumber",activatedAt:"BlockNumber"},Retriable:{_enum:{Never:"Null",WithRetries:"u32"}},ScheduledCore:{paraId:"ParaId",collator:"Option<CollatorId>"},Scheduling:{_enum:["Always","Dynamic"]},ScrapedOnChainVotes:{session:"SessionIndex",backingValidatorsPerCandidate:"Vec<(CandidateReceipt, Vec<(ParaValidatorIndex, ValidityAttestation)>)>",disputes:"MultiDisputeStatementSet"},SessionInfo:{activeValidatorIndices:"Vec<ParaValidatorIndex>",randomSeed:"[u8; 32]",disputePeriod:"SessionIndex",validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},OldV1SessionInfo:{validators:"Vec<ValidatorId>",discoveryKeys:"Vec<AuthorityDiscoveryId>",assignmentKeys:"Vec<AssignmentId>",validatorGroups:"Vec<Vec<ParaValidatorIndex>>",nCores:"u32",zerothDelayTrancheWidth:"u32",relayVrfModuloSamples:"u32",nDelayTranches:"u32",noShowSlots:"u32",neededApprovals:"u32"},SessionInfoValidatorGroup:"Vec<ParaValidatorIndex>",SignedAvailabilityBitfield:{payload:"BitVec",validatorIndex:"ParaValidatorIndex",signature:"ValidatorSignature"},SignedAvailabilityBitfields:"Vec<SignedAvailabilityBitfield>",SigningContext:{sessionIndex:"SessionIndex",parentHash:"Hash"},Statement:{_enum:{Never:"Null",Candidate:"Hash",Valid:"Hash",Invalid:"Hash"}},TransientValidationData:{maxCodeSize:"u32",maxHeadDataSize:"u32",balance:"Balance",codeUpgradeAllowed:"Option<BlockNumber>",dmqLength:"u32"},UpgradeGoAhead:{_enum:["Abort","GoAhead"]},UpgradeRestriction:{_enum:["Present"]},UpwardMessage:"Bytes",ValidationFunctionParams:{maxCodeSize:"u32",relayChainHeight:"RelayChainBlockNumber",codeUpgradeAllowed:"Option<RelayChainBlockNumber>"},ValidationCode:"Bytes",ValidationCodeHash:"Hash",ValidationData:{persisted:"PersistedValidationData",transient:"TransientValidationData"},ValidationDataType:{validationData:"ValidationData",relayChainState:"Vec<Bytes>"},ValidatorSignature:"Signature",ValidityAttestation:{_enum:{Never:"Null",Implicit:"ValidatorSignature",Explicit:"ValidatorSignature"}},MessagingStateSnapshot:{relayDispatchQueueSize:"(u32, u32)",egressChannels:"Vec<MessagingStateSnapshotEgressEntry>"},MessagingStateSnapshotEgressEntry:"(ParaId, AbridgedHrmpChannel)",SystemInherentData:"ParachainInherentData",VecInboundHrmpMessage:"Vec<InboundHrmpMessage>"})};

	var definitions$e = {rpc:{},types:{Approvals:"[bool; 4]"}};

	var definitions$d = {rpc:{},types:{AccountStatus:{validity:"AccountValidity",freeBalance:"Balance",lockedBalance:"Balance",signature:"Vec<u8>",vat:"Permill"},AccountValidity:{_enum:["Invalid","Initiated","Pending","ValidLow","ValidHigh","Completed"]}}};

	var TypeDefInfo;!function(e){e[e.BTreeMap=0]="BTreeMap",e[e.BTreeSet=1]="BTreeSet",e[e.Compact=2]="Compact",e[e.DoNotConstruct=3]="DoNotConstruct",e[e.Enum=4]="Enum",e[e.HashMap=5]="HashMap",e[e.Int=6]="Int",e[e.Linkage=7]="Linkage",e[e.Null=8]="Null",e[e.Option=9]="Option",e[e.Plain=10]="Plain",e[e.Range=11]="Range",e[e.RangeInclusive=12]="RangeInclusive",e[e.Result=13]="Result",e[e.Set=14]="Set",e[e.Si=15]="Si",e[e.Struct=16]="Struct",e[e.Tuple=17]="Tuple",e[e.UInt=18]="UInt",e[e.Vec=19]="Vec",e[e.VecFixed=20]="VecFixed",e[e.WrapperKeepOpaque=21]="WrapperKeepOpaque",e[e.WrapperOpaque=22]="WrapperOpaque";}(TypeDefInfo||(TypeDefInfo={}));

	function hasEq(o){return isFunction$1(o.eq)}

	function compareArray(r,i){return !!Array.isArray(i)&&(r.length===i.length&&isUndefined(r.find(((r,e)=>hasEq(r)?!r.eq(i[e]):r!==i[e]))))}

	class AbstractArray extends Array{static get[Symbol.species](){return Array}constructor(t,r){super(r),this.registry=t;}get encodedLength(){let t=compactToU8a(this.length).length;for(let r=0;r<this.length;r++)t+=this[r].encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.length}get length(){return super.length}eq(t){return compareArray(this,t)}inspect(){return {inner:this.inspectInner(),outer:[compactToU8a(this.length)]}}inspectInner(){const t=new Array(this.length);for(let r=0;r<this.length;r++)t[r]=this[r].inspect();return t}toArray(){return Array.from(this)}toHex(){return u8aToHex(this.toU8a())}toHuman(t){const r=new Array(this.length);for(let e=0;e<this.length;e++)r[e]=this[e]&&this[e].toHuman(t);return r}toJSON(){const t=new Array(this.length);for(let r=0;r<this.length;r++)t[r]=this[r]&&this[r].toJSON();return t}toPrimitive(){const t=new Array(this.length);for(let r=0;r<this.length;r++)t[r]=this[r]&&this[r].toPrimitive();return t}toString(){const t=new Array(this.length);for(let r=0;r<this.length;r++)t[r]=this[r].toString();return `[${t.join(", ")}]`}toU8a(t){const r=this.toU8aInner();return u8aConcatStrict(t?r:[compactToU8a(this.length),...r])}toU8aInner(t){const r=new Array(this.length);for(let e=0;e<this.length;e++)r[e]=this[e].toU8a(t);return r}}

	var _AbstractBase_raw;class AbstractBase{constructor(t,e,a){_AbstractBase_raw.set(this,void 0),this.initialU8aLength=a,__classPrivateFieldSet(this,_AbstractBase_raw,e,"f"),this.registry=t;}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get inner(){return __classPrivateFieldGet(this,_AbstractBase_raw,"f")}get isEmpty(){return __classPrivateFieldGet(this,_AbstractBase_raw,"f").isEmpty}eq(t){return __classPrivateFieldGet(this,_AbstractBase_raw,"f").eq(t)}inspect(){return __classPrivateFieldGet(this,_AbstractBase_raw,"f").inspect()}toHex(t){return __classPrivateFieldGet(this,_AbstractBase_raw,"f").toHex(t)}toHuman(t){return __classPrivateFieldGet(this,_AbstractBase_raw,"f").toHuman(t)}toJSON(){return __classPrivateFieldGet(this,_AbstractBase_raw,"f").toJSON()}toPrimitive(){return __classPrivateFieldGet(this,_AbstractBase_raw,"f").toPrimitive()}toString(){return __classPrivateFieldGet(this,_AbstractBase_raw,"f").toString()}toU8a(t){return __classPrivateFieldGet(this,_AbstractBase_raw,"f").toU8a(t)}unwrap(){return __classPrivateFieldGet(this,_AbstractBase_raw,"f")}valueOf(){return __classPrivateFieldGet(this,_AbstractBase_raw,"f")}}_AbstractBase_raw=new WeakMap;

	var _AbstractInt_bitLength;const MUL_P=new BN(1e4),FORMATTERS=[["Perquintill",BN_QUINTILL],["Perbill",BN_BILLION],["Permill",BN_MILLION],["Percent",BN_HUNDRED]];function isToBn(t){return isFunction$1(t.toBn)}function toPercentage(t,e){return `${(t.mul(MUL_P).div(e).toNumber()/100).toFixed(2)}%`}function decodeAbstractInt(t,e){if(isNumber(t)){if(!Number.isInteger(t)||t>Number.MAX_SAFE_INTEGER||t<Number.MIN_SAFE_INTEGER)throw new Error("Number needs to be an integer <= Number.MAX_SAFE_INTEGER, i.e. 2 ^ 53 - 1");return t}if(isString(t)){if(isHex(t,-1,!0))return hexToBn(t,{isLe:!1,isNegative:e}).toString();if(t.includes(".")||t.includes(",")||t.includes("e"))throw new Error("String should not contain decimal points or scientific notation");return t}if(isBn(t)||isBigInt(t))return t.toString();if(isObject(t)){if(isToBn(t))return t.toBn().toString();const i=Object.keys(t);if(1!==i.length)throw new Error("Unable to construct number from multi-key object");return decodeAbstractInt(t[i[0]],e)}if(!t)return 0;throw new Error("Unable to create BN from unknown type "+typeof t)}class AbstractInt extends BN{constructor(t,e=0,i=64,n=!1){super(isU8a(e)?i<=48?u8aToNumber(e.subarray(0,i/8),{isNegative:n}):u8aToBn(e.subarray(0,i/8),{isLe:!0,isNegative:n}).toString():decodeAbstractInt(e,n)),_AbstractInt_bitLength.set(this,void 0),this.registry=t,__classPrivateFieldSet(this,_AbstractInt_bitLength,i,"f"),this.encodedLength=__classPrivateFieldGet(this,_AbstractInt_bitLength,"f")/8,this.initialU8aLength=__classPrivateFieldGet(this,_AbstractInt_bitLength,"f")/8,this.isUnsigned=!n;const r=this.isNeg(),s=i-(n&&!r?1:0);if(r&&!n)throw new Error(`${this.toRawType()}: Negative number passed to unsigned type`);if(super.bitLength()>s)throw new Error(`${this.toRawType()}: Input too large. Found input with ${super.bitLength()} bits, expected ${s}`)}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isZero()}bitLength(){return __classPrivateFieldGet(this,_AbstractInt_bitLength,"f")}eq(t){return super.eq(isHex(t)?hexToBn(t.toString(),{isLe:!1,isNegative:!this.isUnsigned}):bnToBn(t))}inspect(){return {outer:[this.toU8a()]}}isMax(){return this.toU8a().filter((t=>255===t)).length===__classPrivateFieldGet(this,_AbstractInt_bitLength,"f")/8}toBigInt(){return BigInt(this.toString())}toBn(){return this}toHex(t=!1){return bnToHex(this,{bitLength:this.bitLength(),isLe:t,isNegative:!this.isUnsigned})}toHuman(t){const e=this.toRawType();if("Balance"===e)return this.isMax()?"everything":formatBalance(this,{decimals:this.registry.chainDecimals[0],withSi:!0,withUnit:this.registry.chainTokens[0]});const[,i]=FORMATTERS.find((([t])=>t===e))||[];return i?toPercentage(this,i):formatNumber(this)}toJSON(t=!1){return t||super.bitLength()>52?this.toHex():this.toNumber()}toPrimitive(){return super.bitLength()>52?this.toString():this.toNumber()}toRawType(){return this instanceof this.registry.createClassUnsafe("Balance")?"Balance":`${this.isUnsigned?"u":"i"}${this.bitLength()}`}toString(t){return super.toString(t)}toU8a(t){return bnToU8a(this,{bitLength:this.bitLength(),isLe:!0,isNegative:!this.isUnsigned})}}_AbstractInt_bitLength=new WeakMap;

	function hasMismatch(r,t){return isUndefined(r)||(hasEq(r)?!r.eq(t):r!==t)}function notEntry(r){return !Array.isArray(r)||2!==r.length}function compareMapArray(r,t){return r.size===t.length&&!t.some((t=>notEntry(t)||hasMismatch(r.get(t[0]),t[1])))}function compareMap(r,t){return Array.isArray(t)?compareMapArray(r,t):t instanceof Map?compareMapArray(r,[...t.entries()]):!!isObject(t)&&compareMapArray(r,Object.entries(t))}

	function compareSetArray(r,e){return r.size===e.length&&!e.some((e=>!r.has(e)))}function compareSet(r,e){return Array.isArray(e)?compareSetArray(r,e):e instanceof Set?compareSetArray(r,[...e.values()]):!!isObject(e)&&compareSetArray(r,Object.values(e))}

	function formatFailure(e,t,r,{message:a},o,n,c,u,d){let i="";try{i=`: ${new u(e).toRawType()}`;}catch{}return `${t}: failed at ${u8aToHex(o.subarray(0,16))}…${d?` on ${d}`:""} (index ${n+1}/${c})${i}:: ${a}`}function decodeU8a$6(e,t,r,[a,o]){const n=t.length;let c=0,u=0;try{for(;u<n;){const o=new a[u](e,r.subarray(c));c+=o.initialU8aLength||o.encodedLength,t[u]=o,u++;}}catch(d){throw new Error(formatFailure(e,"decodeU8a",t,d,r.subarray(c),u,n,a[u],o[u]))}return [t,c]}function decodeU8aStruct(e,t,r,[a,o]){const n=t.length;let c=0,u=0;try{for(;u<n;){const n=new a[u](e,r.subarray(c));c+=n.initialU8aLength||n.encodedLength,t[u]=[o[u],n],u++;}}catch(d){throw new Error(formatFailure(e,"decodeU8aStruct",t,d,r.subarray(c),u,n,a[u],o[u]))}return [t,c]}function decodeU8aVec(e,t,r,a,o){const n=t.length;let c=a,u=0;try{for(;u<n;){const a=new o(e,r.subarray(c));c+=a.initialU8aLength||a.encodedLength,t[u]=a,u++;}}catch(a){throw new Error(formatFailure(e,"decodeU8aVec",t,a,r.subarray(c),u,n,o))}return [c,c-a]}

	function typeToConstructor(t,r){return isString(r)?t.createClassUnsafe(r):r}

	function mapToTypeMap(t,r){const o=Object.entries(r),e=o.length,n=[new Array(e),new Array(e)];for(let r=0;r<e;r++)n[1][r]=o[r][0],n[0][r]=typeToConstructor(t,o[r][1]);return n}

	const BOUNDED=["BTreeMap","BTreeSet","HashMap","Vec"],ALLOWED_BOXES=BOUNDED.concat(["Compact","DoNotConstruct","Int","Linkage","Range","RangeInclusive","Result","Opaque","Option","UInt","WrapperKeepOpaque","WrapperOpaque"]),BOX_PRECEDING=["<","(","[",'"',","," "],mappings=[alias("<T::InherentOfflineReport as InherentOfflineReport>::Inherent","InherentOfflineReport",!1),alias("VecDeque<","Vec<",!1),cleanupCompact(),removeExtensions("Bounded",!0),removeExtensions("Weak",!1),removeTraits(),removePairOf(),removeWrap("Box<"),removeGenerics(),alias("String","Text"),alias("Vec<u8>","Bytes"),alias("&\\[u8\\]","Bytes"),alias("&'static\\[u8\\]","Bytes"),alias("RawAddress","Address"),alias("Lookup::Source","LookupSource"),alias("Lookup::Target","LookupTarget"),alias("exec::StorageKey","ContractStorageKey"),flattenSingleTuple(),removeColons(),trim()];function trim(){return e=>e.trim()}function findClosing(e,t){let n=0;for(let r=t;r<e.length;r++)if(">"===e[r]){if(!n)return r;n--;}else "<"===e[r]&&n++;throw new Error(`Unable to find closing matching <> on '${e}' (start ${t})`)}function alias(e,t,n=!0){const r=new RegExp(`(^${e}|${BOX_PRECEDING.map((t=>`\\${t}${e}`)).join("|")})`,"g"),o=e=>(r.lastIndex=0,n&&BOX_PRECEDING.includes(e[0])?`${e[0]}${t}`:t);return e=>e.replace(r,o)}function cleanupCompact(){return e=>{if(e.includes(" as HasCompact"))for(let t=0;t<e.length;t++)if("<"===e[t]){const n=findClosing(e,t+1)-14;" as HasCompact"===e.substring(n,n+14)&&(e=`Compact<${e.substring(t+1,n)}>`);}return e}}function flattenSingleTuple(){const e=/,\)/g,t=/\(([^,]+)\)/;return n=>(e.lastIndex=0,n.replace(e,")").replace(t,"$1"))}function replaceTagWith(e,t,n){let r=-1;for(;;){if(r=e.indexOf(t,r+1),-1===r)return e;const o=r+t.length,a=findClosing(e,o);e=`${e.substring(0,r)}${n(e.substring(o,a))}${e.substring(a+1)}`;}}function removeExtensions(e,t){return n=>{for(let r=0;r<BOUNDED.length;r++){const o=BOUNDED[r];n=replaceTagWith(n,`${e}${o}<`,(e=>{const n=e.split(",").map((e=>e.trim())).filter((e=>e));return t&&n.pop(),`${o}<${n.join(",")}>`}));}return n}}function removeColons(){return e=>{let t=0;for(;-1!==t;)if(t=e.indexOf("::"),0===t)e=e.substring(2);else if(-1!==t){let n=t;for(;-1!==n&&!BOX_PRECEDING.includes(e[n]);)n--;e=`${e.substring(0,n+1)}${e.substring(t+2)}`;}return e}}function removeGenerics(){return e=>{for(let t=0;t<e.length;t++)if("<"===e[t]){if(!ALLOWED_BOXES.find((n=>{const r=t-n.length;return r>=0&&e.substring(r,t)===n&&(0===r||BOX_PRECEDING.includes(e[r-1]))}))){const n=findClosing(e,t+1);e=`${e.substring(0,t)}${e.substring(n+1)}`;}}return e}}function removePairOf(){const e=e=>`(${e},${e})`;return t=>replaceTagWith(t,"PairOf<",e)}function removeTraits(){const e=/\s/g,t=/(T|Self)::/g,n=/<(T|Self)asTrait>::/g,r=/<Tas[a-z]+::Trait>::/g,o=/<LookupasStaticLookup>/g,a=/::Type/g;return i=>(e.lastIndex=0,t.lastIndex=0,n.lastIndex=0,r.lastIndex=0,o.lastIndex=0,a.lastIndex=0,i.replace(e,"").replace(t,"").replace(n,"").replace(r,"").replace(o,"Lookup").replace(a,""))}function removeWrap(e){const t=e=>e;return n=>replaceTagWith(n,e,t)}const sanitizeMap=new Map;function sanitize(e){const t=e.toString(),n=sanitizeMap.get(t);if(n)return n;let r=t;for(let e=0;e<mappings.length;e++)r=mappings[e](r);return sanitizeMap.set(t,r),r}

	function isArrayLike(r){return r instanceof Uint8Array||Array.isArray(r)}function isCodec(r){return isFunction$1(r&&r.toU8a)}function isEnum(r){return isCodec(r)&&isNumber(r.index)&&isCodec(r.value)}function isNumberLike(r){return isNumber(r)||isBn(r)||isBigInt(r)}function sortArray(r,t){let n=0;const i=Math.min(r.length,t.length);for(let e=0;e<i;++e)if(n=sortAsc(r[e],t[e]),0!==n)return n;return r.length-t.length}function sortAsc(r,t){if(isNumberLike(r)&&isNumberLike(t))return bnToBn(r).cmp(bnToBn(t));if(r instanceof Map&&t instanceof Map)return sortAsc(Array.from(r.values()),Array.from(t.values()));if(isEnum(r)&&isEnum(t))return sortAsc(r.index,t.index)||sortAsc(r.value,t.value);if(isArrayLike(r)&&isArrayLike(t))return sortArray(r,t);if(isCodec(r)&&isCodec(t))return sortAsc(r.toU8a(!0),t.toU8a(!0));throw new Error(`Attempting to sort unrecognized values: ${stringify(r)} (typeof ${typeof r}) <-> ${stringify(t)} (typeof ${typeof t})`)}function sortSet(r){return new Set(Array.from(r).sort(sortAsc))}function sortMap(r){return new Map(Array.from(r.entries()).sort((([r],[t])=>sortAsc(r,t))))}

	function typesToMap(e,[t,n]){const o={};for(let a=0;a<n.length;a++)o[n[a]]=e.getClassName(t[a])||new t[a](e).toRawType();return o}

	var _Compact_Type,_Compact_raw;function noopSetDefinition$6(t){return t}function decodeCompact(t,e,a){if(isU8a(a)){const[i,r]=(3&a[0])<3?compactFromU8aLim(a):compactFromU8a(a);return [new e(t,r),i]}if(a instanceof Compact){const i=a.unwrap();return i instanceof e?[i,0]:[new e(t,i),0]}return a instanceof e?[a,0]:[new e(t,a),0]}class Compact{constructor(t,e,a=0,{definition:i,setDefinition:r=noopSetDefinition$6}={}){_Compact_Type.set(this,void 0),_Compact_raw.set(this,void 0),this.registry=t,__classPrivateFieldSet(this,_Compact_Type,i||r(typeToConstructor(t,e)),"f");const[o,s]=decodeCompact(t,__classPrivateFieldGet(this,_Compact_Type,"f"),a);this.initialU8aLength=s,__classPrivateFieldSet(this,_Compact_raw,o,"f");}static with(t){let e;const a=t=>e=t;return class extends Compact{constructor(i,r){super(i,t,r,{definition:e,setDefinition:a});}}}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return __classPrivateFieldGet(this,_Compact_raw,"f").isEmpty}bitLength(){return __classPrivateFieldGet(this,_Compact_raw,"f").bitLength()}eq(t){return __classPrivateFieldGet(this,_Compact_raw,"f").eq(t instanceof Compact?__classPrivateFieldGet(t,_Compact_raw,"f"):t)}inspect(){return {outer:[this.toU8a()]}}toBigInt(){return __classPrivateFieldGet(this,_Compact_raw,"f").toBigInt()}toBn(){return __classPrivateFieldGet(this,_Compact_raw,"f").toBn()}toHex(t){return __classPrivateFieldGet(this,_Compact_raw,"f").toHex(t)}toHuman(t){return __classPrivateFieldGet(this,_Compact_raw,"f").toHuman(t)}toJSON(){return __classPrivateFieldGet(this,_Compact_raw,"f").toJSON()}toNumber(){return __classPrivateFieldGet(this,_Compact_raw,"f").toNumber()}toPrimitive(){return __classPrivateFieldGet(this,_Compact_raw,"f").toPrimitive()}toRawType(){return `Compact<${this.registry.getClassName(__classPrivateFieldGet(this,_Compact_Type,"f"))||__classPrivateFieldGet(this,_Compact_raw,"f").toRawType()}>`}toString(){return __classPrivateFieldGet(this,_Compact_raw,"f").toString()}toU8a(t){return compactToU8a(__classPrivateFieldGet(this,_Compact_raw,"f").toBn())}unwrap(){return __classPrivateFieldGet(this,_Compact_raw,"f")}}_Compact_Type=new WeakMap,_Compact_raw=new WeakMap;

	var _DoNotConstruct_neverError;class DoNotConstruct{constructor(t,r="DoNotConstruct"){throw _DoNotConstruct_neverError.set(this,void 0),this.registry=t,__classPrivateFieldSet(this,_DoNotConstruct_neverError,new Error(`DoNotConstruct: Cannot construct unknown type ${r}`),"f"),__classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}static with(t){return class extends DoNotConstruct{constructor(r){super(r,t);}}}get encodedLength(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}get hash(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}get isEmpty(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}eq(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}inspect(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}toHex(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}toHuman(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}toJSON(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}toPrimitive(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}toRawType(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}toString(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}toU8a(){throw __classPrivateFieldGet(this,_DoNotConstruct_neverError,"f")}}_DoNotConstruct_neverError=new WeakMap;

	class Null{constructor(t){this.encodedLength=0,this.isEmpty=!0,this.initialU8aLength=0,this.registry=t;}get hash(){throw new Error(".hash is not implemented on Null")}eq(t){return t instanceof Null||isNull(t)}inspect(){return {}}toHex(){return "0x"}toHuman(){return this.toJSON()}toJSON(){return null}toPrimitive(){return null}toRawType(){return "Null"}toString(){return ""}toU8a(t){return new Uint8Array}}

	var _Enum_def,_Enum_entryIndex,_Enum_indexes,_Enum_isBasic,_Enum_isIndexed,_Enum_raw;function noopSetDefinition$5(e){return e}function isRustEnum$1(e){const t=Object.values(e);if(t.some((e=>isNumber(e)))){if(!t.every((e=>isNumber(e)&&e>=0&&e<=255)))throw new Error("Invalid number-indexed enum definition");return !1}return !0}function extractDef(e,t){const i={};let s,n;if(Array.isArray(t)){for(let e=0;e<t.length;e++)i[t[e]]={Type:Null,index:e};s=!0,n=!1;}else if(isRustEnum$1(t)){const[r,a]=mapToTypeMap(e,t);for(let e=0;e<a.length;e++)i[a[e]]={Type:r[e],index:e};s=!Object.values(i).some((({Type:e})=>e!==Null)),n=!1;}else {const e=Object.entries(t);for(let t=0;t<e.length;t++){const[s,n]=e[t];i[s]={Type:Null,index:n};}s=!0,n=!0;}return {def:i,isBasic:s,isIndexed:n}}function getEntryType(e,t){const i=Object.values(e);for(let e=0;e<i.length;e++){const{Type:s,index:n}=i[e];if(n===t)return s}throw new Error(`Unable to create Enum via index ${t}, in ${Object.keys(e).join(", ")}`)}function createFromU8a(e,t,i,s){return {index:i,value:new(getEntryType(t,i))(e,s)}}function createFromValue(e,t,i=0,s){const n=getEntryType(t,i);return {index:i,value:s instanceof n?s:new n(e,s)}}function decodeFromJSON(e,t,i,s){const n=Object.keys(t).map((e=>e.toLowerCase())),r=i.toLowerCase(),a=n.indexOf(r);if(-1===a)throw new Error(`Cannot map Enum JSON, unable to find '${i}' in ${n.join(", ")}`);try{return createFromValue(e,t,Object.values(t)[a].index,s)}catch(e){throw new Error(`Enum(${i}):: ${e.message}`)}}function decodeEnum(e,t,i,s){if(isNumber(s))return createFromValue(e,t,s,i);if(isU8a(i)||isHex(i)){const s=u8aToU8a(i);if(s.length)return createFromU8a(e,t,s[0],s.subarray(1))}else {if(i instanceof Enum)return createFromValue(e,t,i.index,i.value);if(isNumber(i))return createFromValue(e,t,i);if(isString(i))return decodeFromJSON(e,t,i.toString());if(isObject(i)){const s=Object.keys(i)[0];return decodeFromJSON(e,t,s,i[s])}}return createFromValue(e,t,Object.values(t)[0].index)}class Enum{constructor(e,t,i,s,{definition:n,setDefinition:r=noopSetDefinition$5}={}){_Enum_def.set(this,void 0),_Enum_entryIndex.set(this,void 0),_Enum_indexes.set(this,void 0),_Enum_isBasic.set(this,void 0),_Enum_isIndexed.set(this,void 0),_Enum_raw.set(this,void 0);const{def:a,isBasic:_,isIndexed:u}=n||r(extractDef(e,t)),o=isU8a(i)&&i.length&&!isNumber(s)?createFromU8a(e,a,i[0],i.subarray(1)):decodeEnum(e,a,i,s);this.registry=e,__classPrivateFieldSet(this,_Enum_def,a,"f"),__classPrivateFieldSet(this,_Enum_isBasic,_,"f"),__classPrivateFieldSet(this,_Enum_isIndexed,u,"f"),__classPrivateFieldSet(this,_Enum_indexes,Object.values(a).map((({index:e})=>e)),"f"),__classPrivateFieldSet(this,_Enum_entryIndex,__classPrivateFieldGet(this,_Enum_indexes,"f").indexOf(o.index),"f"),__classPrivateFieldSet(this,_Enum_raw,o.value,"f"),__classPrivateFieldGet(this,_Enum_raw,"f").initialU8aLength&&(this.initialU8aLength=1+__classPrivateFieldGet(this,_Enum_raw,"f").initialU8aLength);}static with(e){var t;let i;const s=e=>i=e;return t=class extends Enum{constructor(t,n,r){super(t,e,n,r,{definition:i,setDefinition:s});}},(()=>{const i=Array.isArray(e)?e:Object.keys(e),s=new Array(i.length),n=new Array(i.length);for(let e=0;e<i.length;e++){const t=stringPascalCase(i[e]);s[e]=`as${t}`,n[e]=`is${t}`;}objectProperties(t.prototype,n,((e,t,s)=>s.type===i[t])),objectProperties(t.prototype,s,((e,t,s)=>{if(s.type!==i[t])throw new Error(`Cannot convert '${s.type}' via ${e}`);return s.value}));})(),t}get encodedLength(){return 1+__classPrivateFieldGet(this,_Enum_raw,"f").encodedLength}get hash(){return this.registry.hash(this.toU8a())}get index(){return __classPrivateFieldGet(this,_Enum_indexes,"f")[__classPrivateFieldGet(this,_Enum_entryIndex,"f")]}get inner(){return __classPrivateFieldGet(this,_Enum_raw,"f")}get isBasic(){return __classPrivateFieldGet(this,_Enum_isBasic,"f")}get isEmpty(){return __classPrivateFieldGet(this,_Enum_raw,"f").isEmpty}get isNone(){return __classPrivateFieldGet(this,_Enum_raw,"f")instanceof Null}get defIndexes(){return __classPrivateFieldGet(this,_Enum_indexes,"f")}get defKeys(){return Object.keys(__classPrivateFieldGet(this,_Enum_def,"f"))}get type(){return this.defKeys[__classPrivateFieldGet(this,_Enum_entryIndex,"f")]}get value(){return __classPrivateFieldGet(this,_Enum_raw,"f")}eq(e){return isU8a(e)?!this.toU8a().some(((t,i)=>t!==e[i])):isNumber(e)?this.toNumber()===e:__classPrivateFieldGet(this,_Enum_isBasic,"f")&&isString(e)?this.type===e:isHex(e)?this.toHex()===e:e instanceof Enum?this.index===e.index&&this.value.eq(e.value):isObject(e)?this.value.eq(e[this.type]):this.value.eq(e)}inspect(){if(__classPrivateFieldGet(this,_Enum_isBasic,"f"))return {outer:[new Uint8Array([this.index])]};const{inner:e,outer:t=[]}=__classPrivateFieldGet(this,_Enum_raw,"f").inspect();return {inner:e,outer:[new Uint8Array([this.index]),...t]}}toHex(){return u8aToHex(this.toU8a())}toHuman(e){return __classPrivateFieldGet(this,_Enum_isBasic,"f")||this.isNone?this.type:{[this.type]:__classPrivateFieldGet(this,_Enum_raw,"f").toHuman(e)}}toJSON(){return __classPrivateFieldGet(this,_Enum_isBasic,"f")?this.type:{[stringCamelCase(this.type)]:__classPrivateFieldGet(this,_Enum_raw,"f").toJSON()}}toNumber(){return this.index}toPrimitive(){return __classPrivateFieldGet(this,_Enum_isBasic,"f")?this.type:{[stringCamelCase(this.type)]:__classPrivateFieldGet(this,_Enum_raw,"f").toPrimitive()}}_toRawStruct(){if(__classPrivateFieldGet(this,_Enum_isBasic,"f"))return __classPrivateFieldGet(this,_Enum_isIndexed,"f")?this.defKeys.reduce(((e,t,i)=>(e[t]=__classPrivateFieldGet(this,_Enum_indexes,"f")[i],e)),{}):this.defKeys;const e=Object.entries(__classPrivateFieldGet(this,_Enum_def,"f"));return typesToMap(this.registry,e.reduce(((e,[t,{Type:i}],s)=>(e[0][s]=i,e[1][s]=t,e)),[new Array(e.length),new Array(e.length)]))}toRawType(){return stringify({_enum:this._toRawStruct()})}toString(){return this.isNone?this.type:stringify(this.toJSON())}toU8a(e){return e?__classPrivateFieldGet(this,_Enum_raw,"f").toU8a(e):u8aConcatStrict([new Uint8Array([this.index]),__classPrivateFieldGet(this,_Enum_raw,"f").toU8a(e)])}}_Enum_def=new WeakMap,_Enum_entryIndex=new WeakMap,_Enum_indexes=new WeakMap,_Enum_isBasic=new WeakMap,_Enum_isIndexed=new WeakMap,_Enum_raw=new WeakMap;

	class Int extends AbstractInt{constructor(t,r=0,s){super(t,r,s,!0);}static with(t,r){return class extends Int{constructor(r,s){super(r,s,t);}toRawType(){return r||super.toRawType()}}}}

	var _Option_Type,_Option_raw;function noopSetDefinition$4(t){return t}class None extends Null{toRawType(){return "None"}}function decodeOption(t,e,i){return i instanceof e?i:i instanceof Option?i.value instanceof e?i.value:i.isNone?new None(t):new e(t,i.value):isNull(i)||isUndefined(i)||"0x"===i||i instanceof None?new None(t):isU8a(i)?i.length&&0!==i[0]?new e(t,i.subarray(1)):new None(t):new e(t,i)}class Option{constructor(t,e,i,{definition:n,setDefinition:s=noopSetDefinition$4}={}){_Option_Type.set(this,void 0),_Option_raw.set(this,void 0);const r=n||s(typeToConstructor(t,e)),o=isU8a(i)&&i.length&&!isCodec$1(i)?0===i[0]?new None(t):new r(t,i.subarray(1)):decodeOption(t,r,i);this.registry=t,__classPrivateFieldSet(this,_Option_Type,r,"f"),__classPrivateFieldSet(this,_Option_raw,o,"f"),o?.initialU8aLength&&(this.initialU8aLength=1+o.initialU8aLength);}static with(t){let e;const i=t=>(e=t,t);return class extends Option{constructor(n,s){super(n,t,s,{definition:e,setDefinition:i});}}}get encodedLength(){return 1+__classPrivateFieldGet(this,_Option_raw,"f").encodedLength}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isNone}get isNone(){return __classPrivateFieldGet(this,_Option_raw,"f")instanceof None}get isSome(){return !this.isNone}get value(){return __classPrivateFieldGet(this,_Option_raw,"f")}eq(t){return t instanceof Option?this.isSome===t.isSome&&this.value.eq(t.value):this.value.eq(t)}inspect(){if(this.isNone)return {outer:[new Uint8Array([0])]};const{inner:t,outer:e=[]}=__classPrivateFieldGet(this,_Option_raw,"f").inspect();return {inner:t,outer:[new Uint8Array([1]),...e]}}toHex(){return this.isNone?"0x":u8aToHex(this.toU8a().subarray(1))}toHuman(t){return __classPrivateFieldGet(this,_Option_raw,"f").toHuman(t)}toJSON(){return this.isNone?null:__classPrivateFieldGet(this,_Option_raw,"f").toJSON()}toPrimitive(){return this.isNone?null:__classPrivateFieldGet(this,_Option_raw,"f").toPrimitive()}toRawType(t){const e=this.registry.getClassName(__classPrivateFieldGet(this,_Option_Type,"f"))||new(__classPrivateFieldGet(this,_Option_Type,"f"))(this.registry).toRawType();return t?e:`Option<${e}>`}toString(){return __classPrivateFieldGet(this,_Option_raw,"f").toString()}toU8a(t){if(t)return __classPrivateFieldGet(this,_Option_raw,"f").toU8a(!0);const e=new Uint8Array(this.encodedLength);return this.isSome&&(e.set([1]),e.set(__classPrivateFieldGet(this,_Option_raw,"f").toU8a(),1)),e}unwrap(){if(this.isNone)throw new Error("Option: unwrapping a None value");return __classPrivateFieldGet(this,_Option_raw,"f")}unwrapOr(t){return this.isSome?this.unwrap():t}unwrapOrDefault(){return this.isSome?this.unwrap():new(__classPrivateFieldGet(this,_Option_Type,"f"))(this.registry)}}_Option_Type=new WeakMap,_Option_raw=new WeakMap;

	class Result extends Enum{constructor(r,t,s,e){super(r,{Ok:t,Err:s},e);}static with(r){return class extends Result{constructor(t,s){super(t,r.Ok,r.Err,s);}}}get asErr(){if(!this.isErr)throw new Error("Cannot extract Err value from Ok result, check isErr first");return this.value}get asOk(){if(!this.isOk)throw new Error("Cannot extract Ok value from Err result, check isOk first");return this.value}get isEmpty(){return this.isOk&&this.value.isEmpty}get isErr(){return !this.isOk}get isOk(){return 0===this.index}toRawType(){const r=this._toRawStruct();return `Result<${r.Ok},${r.Err}>`}}

	var _Tuple_Types;function noopSetDefinition$3(t){return t}function decodeTuple(t,e,i,r){if(Array.isArray(i)){const s=r[0];for(let r=0;r<s.length;r++)try{const n=i?.[r];e[r]=n instanceof s[r]?n:new s[r](t,n);}catch(t){throw new Error(`Tuple: failed on ${r}:: ${t.message}`)}return [e,0]}if(isHex(i))return decodeU8a$6(t,e,u8aToU8a(i),r);if(!i||!e.length){const i=r[0];for(let r=0;r<i.length;r++)e[r]=new i[r](t);return [e,0]}throw new Error(`Expected array input to Tuple decoding, found ${typeof i}: ${stringify(i)}`)}class Tuple extends AbstractArray{constructor(t,e,i,{definition:r,setDefinition:s=noopSetDefinition$3}={}){const n=r||s(Array.isArray(e)?[e.map((e=>typeToConstructor(t,e))),[]]:isFunction$1(e)||isString(e)?[[typeToConstructor(t,e)],[]]:mapToTypeMap(t,e));super(t,n[0].length),_Tuple_Types.set(this,void 0),this.initialU8aLength=(isU8a(i)?decodeU8a$6(t,this,i,n):decodeTuple(t,this,i,n))[1],__classPrivateFieldSet(this,_Tuple_Types,n,"f");}static with(t){let e;const i=t=>e=t;return class extends Tuple{constructor(r,s){super(r,t,s,{definition:e,setDefinition:i});}}}get encodedLength(){let t=0;for(let e=0;e<this.length;e++)t+=this[e].encodedLength;return t}get Types(){return __classPrivateFieldGet(this,_Tuple_Types,"f")[1].length?__classPrivateFieldGet(this,_Tuple_Types,"f")[1]:__classPrivateFieldGet(this,_Tuple_Types,"f")[0].map((t=>new t(this.registry).toRawType()))}inspect(){return {inner:this.inspectInner()}}toRawType(){return `(${__classPrivateFieldGet(this,_Tuple_Types,"f")[0].map((t=>this.registry.getClassName(t)||new t(this.registry).toRawType())).join(",")})`}toString(){return stringify(this.toJSON())}toU8a(t){return u8aConcatStrict(this.toU8aInner(t))}}_Tuple_Types=new WeakMap;

	class UInt extends AbstractInt{static with(t,r){return class extends UInt{constructor(r,s){super(r,s,t);}toRawType(){return r||super.toRawType()}}}}

	var _Vec_Type;const l$a=logger("Vec");function noopSetDefinition$2(e){return e}function decodeVecLength(e){if(Array.isArray(e))return [e,e.length,0];if(isU8a(e)||isHex(e)){const t=u8aToU8a(e),[i,r]=compactFromU8aLim(t);if(r>65536)throw new Error(`Vec length ${r.toString()} exceeds 65536`);return [t,r,i]}if(!e)return [null,0,0];throw new Error(`Expected array/hex input to Vec<*> decoding, found ${typeof e}: ${stringify(e)}`)}function decodeVec(e,t,i,r,s){if(Array.isArray(i)){const r=t.length;for(let o=0;o<r;o++){const r=i[o];try{t[o]=r instanceof s?r:new s(e,r);}catch(e){throw l$a.error(`Unable to decode on index ${o}`,e.message),e}}return [0,0]}return i?decodeU8aVec(e,t,u8aToU8a(i),r,s):[0,0]}class Vec extends AbstractArray{constructor(e,t,i=[],{definition:r,setDefinition:s=noopSetDefinition$2}={}){const[o,c,n]=decodeVecLength(i);super(e,c),_Vec_Type.set(this,void 0),__classPrivateFieldSet(this,_Vec_Type,r||s(typeToConstructor(e,t)),"f"),this.initialU8aLength=(isU8a(o)?decodeU8aVec(e,this,o,n,__classPrivateFieldGet(this,_Vec_Type,"f")):decodeVec(e,this,o,n,__classPrivateFieldGet(this,_Vec_Type,"f")))[0];}static with(e){let t;const i=e=>t=e;return class extends Vec{constructor(r,s){super(r,e,s,{definition:t,setDefinition:i});}}}get Type(){return __classPrivateFieldGet(this,_Vec_Type,"f").name}indexOf(e){const t=e instanceof __classPrivateFieldGet(this,_Vec_Type,"f")?e:new(__classPrivateFieldGet(this,_Vec_Type,"f"))(this.registry,e);for(let e=0;e<this.length;e++)if(t.eq(this[e]))return e;return -1}toRawType(){return `Vec<${this.registry.getClassName(__classPrivateFieldGet(this,_Vec_Type,"f"))||new(__classPrivateFieldGet(this,_Vec_Type,"f"))(this.registry).toRawType()}>`}}_Vec_Type=new WeakMap;

	var _VecFixed_Type;function noopSetDefinition$1(e){return e}class VecFixed extends AbstractArray{constructor(e,t,i,r=[],{definition:s,setDefinition:n=noopSetDefinition$1}={}){super(e,i),_VecFixed_Type.set(this,void 0),__classPrivateFieldSet(this,_VecFixed_Type,s||n(typeToConstructor(e,t)),"f"),this.initialU8aLength=(isU8a(r)?decodeU8aVec(e,this,r,0,__classPrivateFieldGet(this,_VecFixed_Type,"f")):decodeVec(e,this,r,0,__classPrivateFieldGet(this,_VecFixed_Type,"f")))[1];}static with(e,t){let i;const r=e=>i=e;return class extends VecFixed{constructor(s,n){super(s,e,t,n,{definition:i,setDefinition:r});}}}get Type(){return new(__classPrivateFieldGet(this,_VecFixed_Type,"f"))(this.registry).toRawType()}get encodedLength(){let e=0;for(let t=0;t<this.length;t++)e+=this[t].encodedLength;return e}inspect(){return {inner:this.inspectInner()}}toU8a(){const e=this.toU8aInner();return e.length?u8aConcatStrict(e):new Uint8Array([])}toRawType(){return `[${this.Type};${this.length}]`}}_VecFixed_Type=new WeakMap;

	class Raw extends Uint8Array{static get[Symbol.species](){return Uint8Array}constructor(t,i,r){super(u8aToU8a(i)),this.registry=t,this.initialU8aLength=r;}get encodedLength(){return this.length}get hash(){return this.registry.hash(this.toU8a())}get isAscii(){return isAscii(this)}get isEmpty(){return !this.length||isUndefined(this.find((t=>!!t)))}get isUtf8(){return isUtf8(this)}bitLength(){return 8*this.length}eq(t){return t instanceof Uint8Array?this.length===t.length&&!this.some(((i,r)=>i!==t[r])):this.eq(u8aToU8a(t))}inspect(){return {outer:[this.toU8a()]}}toHex(){return u8aToHex(this)}toHuman(){return this.toPrimitive()}toJSON(){return this.toHex()}toPrimitive(){if(this.isAscii){const t=this.toUtf8();if(isAscii(t))return t}return this.toJSON()}toRawType(){return "Raw"}toString(){return this.toHex()}toU8a(t){return Uint8Array.from(this)}toUtf8(){if(!this.isUtf8)throw new Error("The character sequence is not a valid Utf8 string");return u8aToString(this)}}

	var _BitVec_decodedLength,_BitVec_isMsb;function decodeBitVecU8a(e){if(!e||!e.length)return [0,new Uint8Array];const[t,i]=compactFromU8aLim(e),c=t+Math.ceil(i/8);if(c>e.length)throw new Error(`BitVec: required length less than remainder, expected at least ${c}, found ${e.length}`);return [i,e.subarray(t,c)]}function decodeBitVec(e){if(Array.isArray(e)||isString(e)){const t=u8aToU8a(e);return [t.length/8,t]}return decodeBitVecU8a(e)}class BitVec extends Raw{constructor(e,t,i=!1){const[c,a]=decodeBitVec(t);super(e,a),_BitVec_decodedLength.set(this,void 0),_BitVec_isMsb.set(this,void 0),__classPrivateFieldSet(this,_BitVec_decodedLength,c,"f"),__classPrivateFieldSet(this,_BitVec_isMsb,i,"f");}get encodedLength(){return this.length+compactToU8a(__classPrivateFieldGet(this,_BitVec_decodedLength,"f")).length}inspect(){return {outer:[compactToU8a(__classPrivateFieldGet(this,_BitVec_decodedLength,"f")),super.toU8a()]}}toHuman(){return `0b${[...this.toU8a(!0)].map((e=>`00000000${e.toString(2)}`.slice(-8))).map((e=>__classPrivateFieldGet(this,_BitVec_isMsb,"f")?e:e.split("").reverse().join(""))).join("_")}`}toRawType(){return "BitVec"}toU8a(e){const t=super.toU8a();return e?t:u8aConcatStrict([compactToU8a(__classPrivateFieldGet(this,_BitVec_decodedLength,"f")),t])}}_BitVec_decodedLength=new WeakMap,_BitVec_isMsb=new WeakMap;

	var _Struct_jsonMap,_Struct_Types;function noopSetDefinition(t){return t}function decodeStructFromObject(t,[e,r],s,i){let n;const o=Array.isArray(s),a=s instanceof Map;if(!(o||a||isObject(s)))throw new Error(`Struct: Cannot decode value ${stringify(s)} (typeof ${typeof s}), expected an input object, map or array`);if(o&&s.length!==r.length)throw new Error(`Struct: Unable to map ${stringify(s)} array to object with known keys ${r.join(", ")}`);const c=new Array(r.length);for(let u=0;u<r.length;u++){const p=r[u],f=i.get(p)||p,l=e[u];let h;try{if(o)h=s[u];else if(a)h=f&&s.get(f);else if(h=f&&s[f],isUndefined(h)){if(isUndefined(n)){const t=Object.entries(s);n={};for(let e=0;e<t.length;e++)n[stringCamelCase(t[e][0])]=t[e][1];}h=f&&n[f];}c[u]=[p,h instanceof l?h:new l(t,h)];}catch(e){let r=l.name;try{r=new l(t).toRawType();}catch(t){}throw new Error(`Struct: failed on ${f}: ${r}:: ${e.message}`)}}return [c,0]}class Struct extends Map{constructor(t,e,r,s=new Map,{definition:i,setDefinition:n=noopSetDefinition}={}){const o=i||n(mapToTypeMap(t,e)),[a,c]=isU8a(r)||isHex(r)?decodeU8aStruct(t,new Array(o[0].length),u8aToU8a(r),o):r instanceof Struct?[r,0]:decodeStructFromObject(t,o,r||{},s);super(a),_Struct_jsonMap.set(this,void 0),_Struct_Types.set(this,void 0),this.initialU8aLength=c,this.registry=t,__classPrivateFieldSet(this,_Struct_jsonMap,s,"f"),__classPrivateFieldSet(this,_Struct_Types,o,"f");}static with(t,e){var r;let s;const i=t=>s=t;return r=class extends Struct{constructor(r,n){super(r,t,n,e,{definition:s,setDefinition:i});}},(()=>{const e=Object.keys(t);objectProperties(r.prototype,e,((t,e,r)=>r.get(t)));})(),r}get defKeys(){return __classPrivateFieldGet(this,_Struct_Types,"f")[1]}get isEmpty(){for(const t of this.values())if(!t.isEmpty)return !1;return !0}get encodedLength(){let t=0;for(const e of this.values())t+=e.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get Type(){const t={},[e,r]=__classPrivateFieldGet(this,_Struct_Types,"f");for(let s=0;s<r.length;s++)t[r[s]]=new e[s](this.registry).toRawType();return t}eq(t){return compareMap(this,t)}get(t){return super.get(t)}getAtIndex(t){return this.toArray()[t]}getT(t){return super.get(t)}inspect(t){const e=new Array;for(const[r,s]of this.entries())e.push({...s.inspect(!t||isBoolean(t)?t:t[r]),name:stringCamelCase(r)});return {inner:e}}toArray(){return [...this.values()]}toHex(){return u8aToHex(this.toU8a())}toHuman(t){const e={};for(const[r,s]of this.entries())e[r]=s.toHuman(t);return e}toJSON(){const t={};for(const[e,r]of this.entries())t[__classPrivateFieldGet(this,_Struct_jsonMap,"f").get(e)||e]=r.toJSON();return t}toPrimitive(){const t={};for(const[e,r]of this.entries())t[e]=r.toPrimitive();return t}toRawType(){return stringify(typesToMap(this.registry,__classPrivateFieldGet(this,_Struct_Types,"f")))}toString(){return stringify(this.toJSON())}toU8a(t){const e=[];for(const[r,s]of this.entries())e.push(s.toU8a(!t||isBoolean(t)?t:t[r]));return u8aConcatStrict(e)}}_Struct_jsonMap=new WeakMap,_Struct_Types=new WeakMap;

	var _CodecMap_KeyClass,_CodecMap_ValClass,_CodecMap_type;const l$9=logger("Map");function decodeMapFromU8a(t,e,s,o){const a=new Map,[r,i]=compactFromU8aLim(o),n=[];for(let t=0;t<i;t++)n.push(e,s);const[c,p]=decodeU8a$6(t,new Array(n.length),o.subarray(r),[n,[]]);for(let t=0;t<c.length;t+=2)a.set(c[t],c[t+1]);return [e,s,a,r+p]}function decodeMapFromMap(t,e,s,o){const a=new Map;for(const[r,i]of o.entries()){const o=e.prototype instanceof AbstractArray||e.prototype instanceof Struct||e.prototype instanceof Enum;try{a.set(r instanceof e?r:new e(t,o&&"string"==typeof r?JSON.parse(r):r),i instanceof s?i:new s(t,i));}catch(t){throw l$9.error("Failed to decode key or value:",t.message),t}}return [e,s,a,0]}function decodeMap(t,e,s,o){const a=typeToConstructor(t,e),r=typeToConstructor(t,s);if(!o)return [a,r,new Map,0];if(isU8a(o)||isHex(o))return decodeMapFromU8a(t,a,r,u8aToU8a(o));if(o instanceof Map)return decodeMapFromMap(t,a,r,o);if(isObject(o))return decodeMapFromMap(t,a,r,new Map(Object.entries(o)));throw new Error("Map: cannot decode type")}class CodecMap extends Map{constructor(t,e,s,o,a="HashMap"){const[r,i,n,c]=decodeMap(t,e,s,o);super("BTreeMap"===a?sortMap(n):n),_CodecMap_KeyClass.set(this,void 0),_CodecMap_ValClass.set(this,void 0),_CodecMap_type.set(this,void 0),this.registry=t,this.initialU8aLength=c,__classPrivateFieldSet(this,_CodecMap_KeyClass,r,"f"),__classPrivateFieldSet(this,_CodecMap_ValClass,i,"f"),__classPrivateFieldSet(this,_CodecMap_type,a,"f");}get encodedLength(){let t=compactToU8a(this.size).length;for(const[e,s]of this.entries())t+=e.encodedLength+s.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.size}eq(t){return compareMap(this,t)}inspect(){const t=new Array;for(const[e,s]of this.entries())t.push(e.inspect()),t.push(s.inspect());return {inner:t,outer:[compactToU8a(this.size)]}}toHex(){return u8aToHex(this.toU8a())}toHuman(t){const e={};for(const[s,o]of this.entries())e[s instanceof Raw&&s.isAscii?s.toUtf8():s.toString()]=o.toHuman(t);return e}toJSON(){const t={};for(const[e,s]of this.entries())t[e.toString()]=s.toJSON();return t}toPrimitive(){const t={};for(const[e,s]of this.entries())t[e instanceof Raw&&e.isAscii?e.toUtf8():e.toString()]=s.toPrimitive();return t}toRawType(){return `${__classPrivateFieldGet(this,_CodecMap_type,"f")}<${this.registry.getClassName(__classPrivateFieldGet(this,_CodecMap_KeyClass,"f"))||new(__classPrivateFieldGet(this,_CodecMap_KeyClass,"f"))(this.registry).toRawType()},${this.registry.getClassName(__classPrivateFieldGet(this,_CodecMap_ValClass,"f"))||new(__classPrivateFieldGet(this,_CodecMap_ValClass,"f"))(this.registry).toRawType()}>`}toString(){return stringify(this.toJSON())}toU8a(t){const e=new Array;t||e.push(compactToU8a(this.size));for(const[s,o]of this.entries())e.push(s.toU8a(t),o.toU8a(t));return u8aConcatStrict(e)}}_CodecMap_KeyClass=new WeakMap,_CodecMap_ValClass=new WeakMap,_CodecMap_type=new WeakMap;

	class BTreeMap extends CodecMap{static with(e,r){return class extends BTreeMap{constructor(s,t){super(s,e,r,t,"BTreeMap");}}}}

	var _BTreeSet_ValClass;const l$8=logger("BTreeSet");function decodeSetFromU8a(t,e,r){const s=new Set,[o,a]=compactFromU8aLim(r),i=new Array(a),[n]=decodeU8aVec(t,i,r,o,e);for(let t=0;t<a;t++)s.add(i[t]);return [e,s,n]}function decodeSetFromSet(t,e,r){const s=new Set;return r.forEach((r=>{try{s.add(r instanceof e?r:new e(t,r));}catch(t){throw l$8.error("Failed to decode key or value:",t.message),t}})),[e,s,0]}function decodeSet$1(t,e,r){const s=typeToConstructor(t,e);if(!r)return [s,new Set,0];if(isU8a(r)||isHex(r))return decodeSetFromU8a(t,s,u8aToU8a(r));if(Array.isArray(r)||r instanceof Set)return decodeSetFromSet(t,s,r);throw new Error("BTreeSet: cannot decode type")}class BTreeSet extends Set{constructor(t,e,r){const[s,o,a]=decodeSet$1(t,e,r);super(sortSet(o)),_BTreeSet_ValClass.set(this,void 0),this.registry=t,this.initialU8aLength=a,__classPrivateFieldSet(this,_BTreeSet_ValClass,s,"f");}static with(t){return class extends BTreeSet{constructor(e,r){super(e,t,r);}}}get encodedLength(){let t=compactToU8a(this.size).length;for(const e of this.values())t+=e.encodedLength;return t}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.size}get strings(){return [...super.values()].map((t=>t.toString()))}eq(t){return compareSet(this,t)}inspect(){const t=new Array;for(const e of this.values())t.push(e.inspect());return {inner:t,outer:[compactToU8a(this.size)]}}toHex(){return u8aToHex(this.toU8a())}toHuman(t){const e=[];for(const r of this.values())e.push(r.toHuman(t));return e}toJSON(){const t=[];for(const e of this.values())t.push(e.toJSON());return t}toRawType(){return `BTreeSet<${this.registry.getClassName(__classPrivateFieldGet(this,_BTreeSet_ValClass,"f"))||new(__classPrivateFieldGet(this,_BTreeSet_ValClass,"f"))(this.registry).toRawType()}>`}toPrimitive(){const t=[];for(const e of this.values())t.push(e.toPrimitive());return t}toString(){return stringify(this.toJSON())}toU8a(t){const e=new Array;t||e.push(compactToU8a(this.size));for(const r of this.values())e.push(r.toU8a(t));return u8aConcatStrict(e)}}_BTreeSet_ValClass=new WeakMap;

	function decodeBytesU8a(t){if(!t.length)return [new Uint8Array,0];const[e,r]=compactFromU8aLim(t),o=e+r;if(r>10485760)throw new Error(`Bytes length ${r.toString()} exceeds 10485760`);if(o>t.length)throw new Error(`Bytes: required length less than remainder, expected at least ${o}, found ${t.length}`);return [t.subarray(e,o),o]}class Bytes extends Raw{constructor(t,e){const[r,o]=!isU8a(e)||e instanceof Raw?Array.isArray(e)||isString(e)?[u8aToU8a(e),0]:[e,0]:decodeBytesU8a(e);super(t,r,o);}get encodedLength(){return this.length+compactToU8a(this.length).length}inspect(t){const e=compactToU8a(this.length);return {outer:t?[super.toU8a()]:this.length?[e,super.toU8a()]:[e]}}toRawType(){return "Bytes"}toU8a(t){return t?super.toU8a(t):compactAddLength(this)}}

	class HashMap extends CodecMap{static with(s,a){return class extends HashMap{constructor(t,e){super(t,s,a,e);}}}}

	class bool extends Boolean{constructor(t,e=!1){super(isU8a(e)?1===e[0]:e instanceof Boolean?e.valueOf():!!e),this.initialU8aLength=1,this.registry=t;}get encodedLength(){return 1}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return this.isFalse}get isFalse(){return !this.isTrue}get isTrue(){return this.valueOf()}eq(t){return this.valueOf()===(t instanceof Boolean?t.valueOf():t)}inspect(){return {outer:[this.toU8a()]}}toHex(){return u8aToHex(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.valueOf()}toPrimitive(){return this.toJSON()}toRawType(){return "bool"}toString(){return this.toJSON().toString()}toU8a(t){return new Uint8Array([this.valueOf()?1:0])}}

	function decodeU8a$5(o,t){return 0===t[0]?null:new bool(o,1===t[0])}class OptionBool extends Option{constructor(o,t){super(o,bool,isU8a(t)||isHex(t)?decodeU8a$5(o,u8aToU8a(t)):t),this.initialU8aLength=1;}get encodedLength(){return 1}get isFalse(){return !!this.isSome&&!this.value.valueOf()}get isTrue(){return !!this.isSome&&this.value.valueOf()}inspect(){return {outer:[this.toU8a()]}}toRawType(o){return o?"bool":"Option<bool>"}toU8a(o){return o?super.toU8a(!0):this.isSome?new Uint8Array([this.isTrue?1:2]):new Uint8Array([0])}}

	var _Range_rangeName;class Range extends Tuple{constructor(e,t,a,{rangeName:r="Range"}={}){super(e,[t,t],a),_Range_rangeName.set(this,void 0),__classPrivateFieldSet(this,_Range_rangeName,r,"f");}static with(e){return class extends Range{constructor(t,a){super(t,e,a);}}}get start(){return this[0]}get end(){return this[1]}toRawType(){return `${__classPrivateFieldGet(this,_Range_rangeName,"f")}<${this.start.toRawType()}>`}}_Range_rangeName=new WeakMap;

	class RangeInclusive extends Range{constructor(e,n,s){super(e,n,s,{rangeName:"RangeInclusive"});}static with(e){return class extends RangeInclusive{constructor(n,s){super(n,e,s);}}}}

	var _Text_override;function decodeText(t){if(isU8a(t)){if(!t.length)return ["",0];if(t instanceof Raw)return [u8aToString(t),0];const[e,r]=compactFromU8aLim(t),i=e+r;if(r>131072)throw new Error(`Text: length ${r.toString()} exceeds 131072`);if(i>t.length)throw new Error(`Text: required length less than remainder, expected at least ${i}, found ${t.length}`);return [u8aToString(t.subarray(e,i)),i]}return isHex(t)?[u8aToString(hexToU8a(t)),0]:[t?t.toString():"",0]}class Text extends String{constructor(t,e){const[r,i]=decodeText(e);super(r),_Text_override.set(this,null),this.registry=t,this.initialU8aLength=i;}get encodedLength(){return this.toU8a().length}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.length}get length(){return super.length}eq(t){return !!isString(t)&&this.toString()===t.toString()}inspect(){const t=stringToU8a(super.toString());return {outer:t.length?[compactToU8a(t.length),t]:[compactToU8a(t.length)]}}setOverride(t){__classPrivateFieldSet(this,_Text_override,t,"f");}toHex(){return u8aToHex(this.toU8a(!0))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toRawType(){return "Text"}toString(){return __classPrivateFieldGet(this,_Text_override,"f")||super.toString()}toU8a(t){const e=stringToU8a(super.toString());return t?e:compactAddLength(e)}}_Text_override=new WeakMap;

	class Type extends Text{constructor(t,e=""){super(t,e),this.setOverride(sanitize(this.toString()));}toRawType(){return "Type"}}

	function decodeU8aFixed(t,e){const r=u8aToU8a(t),n=e/8;if(!r.length)return [new Uint8Array(n),0];if(isU8a(t)?r.length<n:r.length!==n)throw new Error(`Expected input with ${n} bytes (${e} bits), found ${r.length} bytes`);return [r.subarray(0,n),n]}class U8aFixed extends Raw{constructor(t,e=new Uint8Array,r=256){const[n,a]=decodeU8aFixed(e,r);super(t,n,a);}static with(t,e){return class extends U8aFixed{constructor(e,r){super(e,r,t);}toRawType(){return e||super.toRawType()}}}toRawType(){return `[u8;${this.length}]`}}

	var _WrapperKeepOpaque_Type,_WrapperKeepOpaque_decoded,_WrapperKeepOpaque_opaqueName;function decodeRaw(e,p,a){const t=typeToConstructor(e,p);if(isU8a(a)||isHex(a))try{const[,p]=isHex(a)?[0,u8aToU8a(a)]:a instanceof Raw?[0,a.subarray()]:compactStripLength(a);return [t,new t(e,p),a]}catch{return [t,null,a]}const r=new t(e,a);return [t,r,compactAddLength(r.toU8a())]}class WrapperKeepOpaque extends Bytes{constructor(e,p,a,{opaqueName:t="WrapperKeepOpaque"}={}){const[r,i,s]=decodeRaw(e,p,a);super(e,s),_WrapperKeepOpaque_Type.set(this,void 0),_WrapperKeepOpaque_decoded.set(this,void 0),_WrapperKeepOpaque_opaqueName.set(this,void 0),__classPrivateFieldSet(this,_WrapperKeepOpaque_Type,r,"f"),__classPrivateFieldSet(this,_WrapperKeepOpaque_decoded,i,"f"),__classPrivateFieldSet(this,_WrapperKeepOpaque_opaqueName,t,"f");}static with(e){return class extends WrapperKeepOpaque{constructor(p,a){super(p,e,a);}}}get isDecoded(){return !!__classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f")}inspect(){return __classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f")?{inner:[__classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f").inspect()],outer:[compactToU8a(this.length)]}:{outer:[compactToU8a(this.length),this.toU8a(!0)]}}toHuman(e){return __classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f")?__classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f").toHuman(e):super.toHuman()}toPrimitive(){return __classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f")?__classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f").toPrimitive():super.toPrimitive()}toRawType(){return `${__classPrivateFieldGet(this,_WrapperKeepOpaque_opaqueName,"f")}<${this.registry.getClassName(__classPrivateFieldGet(this,_WrapperKeepOpaque_Type,"f"))||(__classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f")?__classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f").toRawType():new(__classPrivateFieldGet(this,_WrapperKeepOpaque_Type,"f"))(this.registry).toRawType())}>`}toString(){return __classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f")?__classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f").toString():super.toString()}unwrap(){if(!__classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f"))throw new Error(`${__classPrivateFieldGet(this,_WrapperKeepOpaque_opaqueName,"f")}: unwrapping an undecodable value`);return __classPrivateFieldGet(this,_WrapperKeepOpaque_decoded,"f")}}_WrapperKeepOpaque_Type=new WeakMap,_WrapperKeepOpaque_decoded=new WeakMap,_WrapperKeepOpaque_opaqueName=new WeakMap;

	class WrapperOpaque extends WrapperKeepOpaque{constructor(e,p,r){super(e,p,r,{opaqueName:"WrapperOpaque"});}static with(e){return class extends WrapperOpaque{constructor(p,r){super(p,e,r);}}}get inner(){return this.unwrap()}}

	var _Float_bitLength;class Float extends Number{constructor(t,e,{bitLength:i=32}={}){super(isU8a(e)||isHex(e)?0===e.length?0:u8aToFloat(u8aToU8a(e),{bitLength:i}):e||0),_Float_bitLength.set(this,void 0),__classPrivateFieldSet(this,_Float_bitLength,i,"f"),this.encodedLength=i/8,this.initialU8aLength=this.encodedLength,this.registry=t;}static with(t){return class extends Float{constructor(e,i){super(e,i,{bitLength:t});}}}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.valueOf()}eq(t){return this.valueOf()===Number(t)}inspect(){return {outer:[this.toU8a()]}}toHex(){return u8aToHex(this.toU8a())}toHuman(){return this.toString()}toJSON(){return this.toHex()}toNumber(){return this.valueOf()}toPrimitive(){return this.toNumber()}toRawType(){return `f${__classPrivateFieldGet(this,_Float_bitLength,"f")}`}toU8a(){return floatToU8a(this,{bitLength:__classPrivateFieldGet(this,_Float_bitLength,"f")})}}_Float_bitLength=new WeakMap;

	function decodeJson(t){return Object.entries(t||{})}class Json extends Map{constructor(t,e){const r=decodeJson(e);super(r),this.registry=t,objectProperties(this,r.map((([t])=>t)),(t=>this.get(t)));}get encodedLength(){return 0}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===[...this.keys()].length}eq(t){return compareMap(this,t)}getT(t){return this.get(t)}inspect(){throw new Error("Unimplemented")}toHex(){throw new Error("Unimplemented")}toHuman(){return [...this.entries()].reduce(((t,[e,r])=>(t[e]=isFunction$1(r.toHuman)?r.toHuman():r,t)),{})}toJSON(){return [...this.entries()].reduce(((t,[e,r])=>(t[e]=r,t)),{})}toPrimitive(){return [...this.entries()].reduce(((t,[e,r])=>(t[e]=isFunction$1(r.toPrimitive)?r.toPrimitive():r,t)),{})}toRawType(){return "Json"}toString(){return stringify(this.toJSON())}toU8a(t){throw new Error("Unimplemented")}}

	var _CodecSet_allowed,_CodecSet_byteLength;function encodeSet(e,t){const r=new BN(0);for(let s=0;s<t.length;s++)r.ior(bnToBn(e[t[s]]||0));return r}function decodeSetArray(e,t){const r=new Array(t.length);for(let s=0;s<t.length;s++){const o=t[s];if(isUndefined(e[o]))throw new Error(`Set: Invalid key '${o}' passed to Set, allowed ${Object.keys(e).join(", ")}`);r[s]=o;}return r}function decodeSetNumber(e,t){const r=bnToBn(t),s=Object.keys(e),o=[];for(let t=0;t<s.length;t++){const n=s[t];r.and(bnToBn(e[n])).eq(bnToBn(e[n]))&&o.push(n);}const n=encodeSet(e,o);if(!r.eq(n))throw new Error(`Set: Mismatch decoding '${r.toString()}', computed as '${n.toString()}' with ${o.join(", ")}`);return o}function decodeSet(e,t=0,r){if(r%8!=0)throw new Error(`Expected valid bitLength, power of 8, found ${r}`);const s=r/8;if(isU8a(t))return 0===t.length?[]:decodeSetNumber(e,u8aToBn(t.subarray(0,s),{isLe:!0}));if(isString(t))return decodeSet(e,u8aToU8a(t),s);if(t instanceof Set||Array.isArray(t)){return decodeSetArray(e,Array.isArray(t)?t:[...t.values()])}return decodeSetNumber(e,t)}class CodecSet extends Set{constructor(e,t,r,s=8){super(decodeSet(t,r,s)),_CodecSet_allowed.set(this,void 0),_CodecSet_byteLength.set(this,void 0),this.add=e=>{if(__classPrivateFieldGet(this,_CodecSet_allowed,"f")&&isUndefined(__classPrivateFieldGet(this,_CodecSet_allowed,"f")[e]))throw new Error(`Set: Invalid key '${e}' on add`);return super.add(e),this},this.registry=e,__classPrivateFieldSet(this,_CodecSet_allowed,t,"f"),__classPrivateFieldSet(this,_CodecSet_byteLength,s/8,"f");}static with(e,t){var r;return r=class extends CodecSet{constructor(r,s){super(r,e,s,t);}},(()=>{const t=Object.keys(e),s=new Array(t.length);for(let e=0;e<t.length;e++)s[e]=`is${stringPascalCase(t[e])}`;objectProperties(r.prototype,s,((e,r,s)=>s.strings.includes(t[r])));})(),r}get encodedLength(){return __classPrivateFieldGet(this,_CodecSet_byteLength,"f")}get hash(){return this.registry.hash(this.toU8a())}get isEmpty(){return 0===this.size}get strings(){return [...super.values()]}get valueEncoded(){return encodeSet(__classPrivateFieldGet(this,_CodecSet_allowed,"f"),this.strings)}eq(e){return Array.isArray(e)?compareArray(this.strings.sort(),e.sort()):e instanceof Set?this.eq([...e.values()]):!(!isNumber(e)&&!isBn(e))&&this.valueEncoded.eq(bnToBn(e))}inspect(){return {outer:[this.toU8a()]}}toHex(){return u8aToHex(this.toU8a())}toHuman(){return this.toJSON()}toJSON(){return this.strings}toNumber(){return this.valueEncoded.toNumber()}toPrimitive(){return this.toJSON()}toRawType(){return stringify({_set:__classPrivateFieldGet(this,_CodecSet_allowed,"f")})}toString(){return `[${this.strings.join(", ")}]`}toU8a(e){return bnToU8a(this.valueEncoded,{bitLength:8*__classPrivateFieldGet(this,_CodecSet_byteLength,"f"),isLe:!0})}}_CodecSet_allowed=new WeakMap,_CodecSet_byteLength=new WeakMap;

	class f32 extends(Float.with(32)){constructor(){super(...arguments),this.__FloatType="f32";}}

	class f64 extends(Float.with(64)){constructor(){super(...arguments),this.__FloatType="f64";}}

	class i8 extends(Int.with(8)){constructor(){super(...arguments),this.__IntType="i8";}}

	class i16 extends(Int.with(16)){constructor(){super(...arguments),this.__IntType="i16";}}

	class i32 extends(Int.with(32)){constructor(){super(...arguments),this.__IntType="i32";}}

	class i64 extends(Int.with(64)){constructor(){super(...arguments),this.__IntType="i64";}}

	class i128 extends(Int.with(128)){constructor(){super(...arguments),this.__IntType="i128";}}

	class i256 extends(Int.with(256)){constructor(){super(...arguments),this.__IntType="i256";}}

	class u8 extends(UInt.with(8)){constructor(){super(...arguments),this.__UIntType="u8";}}

	class u16 extends(UInt.with(16)){constructor(){super(...arguments),this.__UIntType="u16";}}

	class u32 extends(UInt.with(32)){constructor(){super(...arguments),this.__UIntType="u32";}}

	class u64 extends(UInt.with(64)){constructor(){super(...arguments),this.__UIntType="u64";}}

	class u128 extends(UInt.with(128)){constructor(){super(...arguments),this.__UIntType="u128";}}

	class u256 extends(UInt.with(256)){constructor(){super(...arguments),this.__UIntType="u256";}}

	class usize extends u32{constructor(e,t){throw super(e,t),new Error("The `usize` type should not be used. Since it is platform-specific, it creates incompatibilities between native (generally u64) and WASM (always u32) code. Use one of the `u32` or `u64` types explicitly.")}}

	function typeSplit(e){const r=[];let s=0,a=0,t=0,i=0,n=0;for(let c=0;c<e.length;c++)switch(e[c]){case",":s||a||t||i||(r.push(e.substring(n,c).trim()),n=c+1);break;case"<":s++;break;case">":s--;break;case"[":a++;break;case"]":a--;break;case"{":t++;break;case"}":t--;break;case"(":i++;break;case")":i--;}if(s||a||t||i)throw new Error(`Invalid definition (missing terminators) found in ${e}`);return r.push(e.substring(n,e.length).trim()),r}

	const KNOWN_INTERNALS=["_alias","_fallback"];function getTypeString(e){return isString(e)?e.toString():JSON.stringify(e)}function isRustEnum(e){const n=Object.values(e);if(n.some((e=>isNumber(e)))){if(!n.every((e=>isNumber(e)&&e>=0&&e<=255)))throw new Error("Invalid number-indexed enum definition");return !1}return !0}function _decodeEnum(e,n,t,o){return e.info=TypeDefInfo.Enum,e.fallbackType=o,Array.isArray(n)?e.sub=n.map(((e,n)=>({index:n,info:TypeDefInfo.Plain,name:e,type:"Null"}))):isRustEnum(n)?e.sub=Object.entries(n).map((([e,n],o)=>objectSpread({},getTypeDef(getTypeString(n||"Null"),{name:e},t),{index:o}))):e.sub=Object.entries(n).map((([e,n])=>({index:n,info:TypeDefInfo.Plain,name:e,type:"Null"}))),e}function _decodeSet(e,n,t){return e.info=TypeDefInfo.Set,e.fallbackType=t,e.length=n._bitLength,e.sub=Object.entries(n).filter((([e])=>!e.startsWith("_"))).map((([e,n])=>({index:n,info:TypeDefInfo.Plain,name:e,type:"Null"}))),e}function _decodeStruct(e,n,t,o){const r=JSON.parse(n),p=Object.keys(r);return p.includes("_enum")?_decodeEnum(e,r._enum,o,r._fallback):p.includes("_set")?_decodeSet(e,r._set,r._fallback):(e.alias=r._alias?new Map(Object.entries(r._alias)):void 0,e.fallbackType=r._fallback,e.sub=p.filter((e=>!KNOWN_INTERNALS.includes(e))).map((e=>getTypeDef(getTypeString(r[e]),{name:e},o))),e)}function _decodeFixedVec(e,n,t,o){const r=n.length-1;let p=-1,i=0;for(let e=1;e<r&&-1===p;e++)switch(n[e]){case";":0===i&&(p=e);break;case"[":case"(":case"<":i++;break;case"]":case")":case">":i--;}if(-1===p)throw new Error(`${n}: Unable to extract location of ';'`);const a=n.substring(1,p),[f,s]=n.substring(p+1,r).split(";"),c=parseInt(f.trim(),10);if(c>2048)throw new Error(`${n}: Only support for [Type; <length>], where length <= 2048`);return e.displayName=s,e.length=c,e.sub=getTypeDef(a,{},o),e}function _decodeTuple(e,n,t,o){return e.sub=0===t.length?[]:typeSplit(t).map((e=>getTypeDef(e,{},o))),e}function _decodeAnyInt(e,n,t,o){const[r,p]=n.substring(o.length+1,n.length-1).split(","),i=parseInt(r.trim(),10);if(i>8192||i%8)throw new Error(`${n}: Only support for ${o}<bitLength>, where length <= 8192 and a power of 8, found ${i}`);return e.displayName=p,e.length=i,e}function _decodeInt(e,n,t){return _decodeAnyInt(e,n,t,"Int")}function _decodeUInt(e,n,t){return _decodeAnyInt(e,n,t,"UInt")}function _decodeDoNotConstruct(e,n,t){const o="DoNotConstruct".length;return e.displayName=n.substring(o+1,n.length-1),e}function hasWrapper(e,[n,t]){return e.substring(0,n.length)===n&&e.slice(-1*t.length)===t}const nestedExtraction=[["[","]",TypeDefInfo.VecFixed,_decodeFixedVec],["{","}",TypeDefInfo.Struct,_decodeStruct],["(",")",TypeDefInfo.Tuple,_decodeTuple],["BTreeMap<",">",TypeDefInfo.BTreeMap,_decodeTuple],["HashMap<",">",TypeDefInfo.HashMap,_decodeTuple],["Int<",">",TypeDefInfo.Int,_decodeInt],["Result<",">",TypeDefInfo.Result,_decodeTuple],["UInt<",">",TypeDefInfo.UInt,_decodeUInt],["DoNotConstruct<",">",TypeDefInfo.DoNotConstruct,_decodeDoNotConstruct]],wrappedExtraction=[["BTreeSet<",">",TypeDefInfo.BTreeSet],["Compact<",">",TypeDefInfo.Compact],["Linkage<",">",TypeDefInfo.Linkage],["Opaque<",">",TypeDefInfo.WrapperOpaque],["Option<",">",TypeDefInfo.Option],["Range<",">",TypeDefInfo.Range],["RangeInclusive<",">",TypeDefInfo.RangeInclusive],["Vec<",">",TypeDefInfo.Vec],["WrapperKeepOpaque<",">",TypeDefInfo.WrapperKeepOpaque],["WrapperOpaque<",">",TypeDefInfo.WrapperOpaque]];function extractSubType(e,[n,t]){return e.substring(n.length,e.length-t.length)}function getTypeDef(e,{displayName:n,name:t}={},o=0){const r=sanitize(e),p={displayName:n,info:TypeDefInfo.Plain,name:t,type:r};if(++o>64)throw new Error("getTypeDef: Maximum nested limit reached");const i=nestedExtraction.find((e=>hasWrapper(r,e)));if(i)return p.info=i[2],i[3](p,r,extractSubType(r,i),o);const a=wrappedExtraction.find((e=>hasWrapper(r,e)));return a&&(p.info=a[2],p.sub=getTypeDef(extractSubType(r,a),{},o)),p}

	function getTypeDefType({lookupName:e,type:t}){return e||t}function getSubDefArray(e){if(!Array.isArray(e.sub))throw new Error(`Expected subtype as TypeDef[] in ${stringify(e)}`);return e.sub}function getSubDef(e){if(!e.sub||Array.isArray(e.sub))throw new Error(`Expected subtype as TypeDef in ${stringify(e)}`);return e.sub}function getSubType(e){return getTypeDefType(getSubDef(e))}function getTypeClassMap(e){const t=getSubDefArray(e),r={};for(let e=0;e<t.length;e++)r[t[e].name]=getTypeDefType(t[e]);return r}function getTypeClassArray(e){return getSubDefArray(e).map(getTypeDefType)}function createInt(e,{displayName:t,length:r}){if(!isNumber(r))throw new Error(`Expected bitLength information for ${t||e.constructor.name}<bitLength>`);return e.with(r,t)}function createHashMap(e,t){const[r,n]=getTypeClassArray(t);return e.with(r,n)}function createWithSub(e,t){return e.with(getSubType(t))}const infoMapping={[TypeDefInfo.BTreeMap]:(e,t)=>createHashMap(BTreeMap,t),[TypeDefInfo.BTreeSet]:(e,t)=>createWithSub(BTreeSet,t),[TypeDefInfo.Compact]:(e,t)=>createWithSub(Compact,t),[TypeDefInfo.DoNotConstruct]:(e,t)=>DoNotConstruct.with(t.displayName||t.type),[TypeDefInfo.Enum]:(e,t)=>{const r=getSubDefArray(t);return Enum.with(r.every((({type:e})=>"Null"===e))?r.reduce(((e,{index:t,name:r},n)=>(e[r]=t||n,e)),{}):getTypeClassMap(t))},[TypeDefInfo.HashMap]:(e,t)=>createHashMap(HashMap,t),[TypeDefInfo.Int]:(e,t)=>createInt(Int,t),[TypeDefInfo.Linkage]:(e,t)=>{const r=`Option<${getSubType(t)}>`,n=Struct.with({previous:r,next:r});return n.prototype.toRawType=function(){return `Linkage<${this.next.toRawType(!0)}>`},n},[TypeDefInfo.Null]:(e,t)=>Null,[TypeDefInfo.Option]:(e,t)=>{if(!t.sub||Array.isArray(t.sub))throw new Error("Expected type information for Option");return createWithSub(Option,t)},[TypeDefInfo.Plain]:(e,t)=>e.getOrUnknown(t.type),[TypeDefInfo.Range]:(e,t)=>createWithSub(Range,t),[TypeDefInfo.RangeInclusive]:(e,t)=>createWithSub(RangeInclusive,t),[TypeDefInfo.Result]:(e,t)=>{const[r,n]=getTypeClassArray(t);return Result.with({Err:n,Ok:r})},[TypeDefInfo.Set]:(e,t)=>CodecSet.with(getSubDefArray(t).reduce(((e,{index:t,name:r})=>(e[r]=t,e)),{}),t.length),[TypeDefInfo.Si]:(e,t)=>getTypeClass(e,e.lookup.getTypeDef(t.type)),[TypeDefInfo.Struct]:(e,t)=>Struct.with(getTypeClassMap(t),t.alias),[TypeDefInfo.Tuple]:(e,t)=>Tuple.with(getTypeClassArray(t)),[TypeDefInfo.UInt]:(e,t)=>createInt(UInt,t),[TypeDefInfo.Vec]:(e,{sub:t})=>{if(!t||Array.isArray(t))throw new Error("Expected type information for vector");return "u8"===t.type?Bytes:Vec.with(getTypeDefType(t))},[TypeDefInfo.VecFixed]:(e,{displayName:t,length:r,sub:n})=>{if(!isNumber(r)||!n||Array.isArray(n))throw new Error("Expected length & type information for fixed vector");return "u8"===n.type?U8aFixed.with(8*r,t):VecFixed.with(getTypeDefType(n),r)},[TypeDefInfo.WrapperKeepOpaque]:(e,t)=>createWithSub(WrapperKeepOpaque,t),[TypeDefInfo.WrapperOpaque]:(e,t)=>createWithSub(WrapperOpaque,t)};function constructTypeClass(e,t){try{const r=infoMapping[t.info](e,t);if(!r)throw new Error("No class created");return !r.__fallbackType&&t.fallbackType&&(r.__fallbackType=t.fallbackType),r}catch(e){throw new Error(`Unable to construct class from ${stringify(t)}: ${e.message}`)}}function getTypeClass(e,t){return e.getUnsafe(t.type,!1,t)}function createClassUnsafe(e,t){return e.getUnsafe(t)||getTypeClass(e,e.isLookupType(t)?e.lookup.getTypeDef(t):getTypeDef(t))}

	function checkInstance(e,t){const a=e.toU8a(),c=e.toRawType();if(!(u8aEq(a,t)||["Bytes","Text","Type"].includes(c)&&t.length===e.length||e.isEmpty&&t.every((e=>!e))))throw new Error(`${c}:: Decoded input doesn't match input, received ${u8aToHex(t,512)} (${t.length} bytes), created ${u8aToHex(a,512)} (${a.length} bytes)`)}function checkPedantic(e,[t]){isU8a(t)?checkInstance(e,t):isHex(t)&&checkInstance(e,u8aToU8a(t));}function initType(e,t,a=[],{blockHash:c,isFallback:n,isOptional:s,isPedantic:o}={}){const i=new(s?Option.with(t):t)(e,...a);return o&&checkPedantic(i,a),c&&(i.createdAtHash=createTypeUnsafe(e,"BlockHash",[c])),n&&(i.isStorageFallback=!0),i}function createTypeUnsafe(e,t,a=[],c={}){let n=null,s=null;try{return n=createClassUnsafe(e,t),initType(e,n,a,c)}catch(e){s=new Error(`createType(${t}):: ${e.message}`);}if(n&&n.__fallbackType)try{return n=createClassUnsafe(e,n.__fallbackType),initType(e,n,a,c)}catch{}throw s}

	const stringIdentity=e=>e.toString(),INFO_WRAP=["BTreeMap","BTreeSet","Compact","HashMap","Option","Result","Vec"];function paramsNotation(e,n,o=stringIdentity){return `${e}${n?`<${(Array.isArray(n)?n:[n]).map(o).join(", ")}>`:""}`}function encodeWithParams(e,n,o){const{info:r,sub:t}=n;switch(r){case TypeDefInfo.BTreeMap:case TypeDefInfo.BTreeSet:case TypeDefInfo.Compact:case TypeDefInfo.HashMap:case TypeDefInfo.Linkage:case TypeDefInfo.Option:case TypeDefInfo.Range:case TypeDefInfo.RangeInclusive:case TypeDefInfo.Result:case TypeDefInfo.Vec:case TypeDefInfo.WrapperKeepOpaque:case TypeDefInfo.WrapperOpaque:return paramsNotation(o,t,(n=>encodeTypeDef(e,n)))}throw new Error(`Unable to encode ${stringify(n)} with params`)}function encodeSubTypes(e,n,o,r){const t=n.map((({name:e})=>e));if(!t.every((e=>!!e)))throw new Error(`Subtypes does not have consistent names, ${t.join(", ")}`);const a=objectSpread({},r);for(let o=0;o<n.length;o++){const r=n[o];a[r.name]=encodeTypeDef(e,r);}return stringify(o?{_enum:a}:a)}const encoders={[TypeDefInfo.BTreeMap]:(e,n)=>encodeWithParams(e,n,"BTreeMap"),[TypeDefInfo.BTreeSet]:(e,n)=>encodeWithParams(e,n,"BTreeSet"),[TypeDefInfo.Compact]:(e,n)=>encodeWithParams(e,n,"Compact"),[TypeDefInfo.DoNotConstruct]:(e,{displayName:n,lookupIndex:o,lookupName:r})=>`DoNotConstruct<${r||n||(isUndefined(o)?"Unknown":e.createLookupType(o))}>`,[TypeDefInfo.Enum]:(e,{sub:n})=>{if(!Array.isArray(n))throw new Error("Unable to encode Enum type");return n.every((({type:e})=>"Null"===e))?stringify({_enum:n.map((({name:e},n)=>`${e||`Empty${n}`}`))}):encodeSubTypes(e,n,!0)},[TypeDefInfo.HashMap]:(e,n)=>encodeWithParams(e,n,"HashMap"),[TypeDefInfo.Int]:(e,{length:n=32})=>`Int<${n}>`,[TypeDefInfo.Linkage]:(e,n)=>encodeWithParams(e,n,"Linkage"),[TypeDefInfo.Null]:(e,n)=>"Null",[TypeDefInfo.Option]:(e,n)=>encodeWithParams(e,n,"Option"),[TypeDefInfo.Plain]:(e,{displayName:n,type:o})=>n||o,[TypeDefInfo.Range]:(e,n)=>encodeWithParams(e,n,"Range"),[TypeDefInfo.RangeInclusive]:(e,n)=>encodeWithParams(e,n,"RangeInclusive"),[TypeDefInfo.Result]:(e,n)=>encodeWithParams(e,n,"Result"),[TypeDefInfo.Set]:(e,{length:n=8,sub:o})=>{if(!Array.isArray(o))throw new Error("Unable to encode Set type");return stringify({_set:o.reduce(((e,{index:n,name:o},r)=>objectSpread(e,{[`${o||`Unknown${n||r}`}`]:n||r})),{_bitLength:n||8})})},[TypeDefInfo.Si]:(e,{lookupName:n,type:o})=>n||o,[TypeDefInfo.Struct]:(e,{alias:n,sub:o})=>{if(!Array.isArray(o))throw new Error("Unable to encode Struct type");return encodeSubTypes(e,o,!1,n?{_alias:[...n.entries()].reduce(((e,[n,o])=>objectSpread(e,{[n]:o})),{})}:{})},[TypeDefInfo.Tuple]:(e,{sub:n})=>{if(!Array.isArray(n))throw new Error("Unable to encode Tuple type");return `(${n.map((n=>encodeTypeDef(e,n))).join(",")})`},[TypeDefInfo.UInt]:(e,{length:n=32})=>`UInt<${n}>`,[TypeDefInfo.Vec]:(e,n)=>encodeWithParams(e,n,"Vec"),[TypeDefInfo.VecFixed]:(e,{length:n,sub:o})=>{if(!isNumber(n)||!o||Array.isArray(o))throw new Error("Unable to encode VecFixed type");return `[${o.type};${n}]`},[TypeDefInfo.WrapperKeepOpaque]:(e,n)=>encodeWithParams(e,n,"WrapperKeepOpaque"),[TypeDefInfo.WrapperOpaque]:(e,n)=>encodeWithParams(e,n,"WrapperOpaque")};function encodeType(e,n,o=!0){return o&&n.lookupName?n.lookupName:encoders[n.info](e,n)}function encodeTypeDef(e,n){return n.displayName&&!INFO_WRAP.some((e=>n.displayName===e))?n.displayName:encodeType(e,n)}function withTypeString(e,n){return objectSpread({},n,{type:encodeType(e,n,!1)})}

	const XCM_MAPPINGS=["AssetInstance","Fungibility","Junction","Junctions","MultiAsset","MultiAssetFilter","MultiLocation","Response","WildFungibility","WildMultiAsset","Xcm","XcmError","XcmOrder"];function mapXcmTypes(t){return XCM_MAPPINGS.reduce(((e,i)=>objectSpread(e,{[i]:`${i}${t}`})),{})}

	const v0={FungibilityV0:"FungibilityV1",WildFungibilityV0:"WildFungibilityV1",AssetInstanceV0:{_enum:{Undefined:"Null",Index8:"u8",Index16:"Compact<u16>",Index32:"Compact<u32>",Index64:"Compact<u64>",Index128:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Vec<u8>"}},JunctionV0:{_enum:{Parent:"Null",Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},MultiAssetV0:{_enum:{None:"Null",All:"Null",AllFungible:"Null",AllNonFungible:"Null",AllAbstractFungible:"Vec<u8>",AllAbstractNonFungible:"Vec<u8>",AllConcreteFungible:"MultiLocationV0",AllConcreteNonFungible:"MultiLocationV0",AbstractFungible:{id:"Vec<u8>",instance:"Compact<u128>"},AbstractNonFungible:{class:"Vec<u8>",instance:"AssetInstanceV0"},ConcreteFungible:{id:"MultiLocationV0",amount:"Compact<u128>"},ConcreteNonFungible:{class:"MultiLocationV0",instance:"AssetInstanceV0"}}},MultiLocationV0:{_enum:{Here:"Null",X1:"JunctionV0",X2:"(JunctionV0, JunctionV0)",X3:"(JunctionV0, JunctionV0, JunctionV0)",X4:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X5:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X6:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X7:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)",X8:"(JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0, JunctionV0)"}},OriginKindV0:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},ResponseV0:{_enum:{Assets:"Vec<MultiAssetV0>"}},XcmV0:{_enum:{WithdrawAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReserveAssetDeposit:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},ReceiveTeleportedAsset:{assets:"Vec<MultiAssetV0>",effects:"Vec<XcmOrderV0>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV0"},TransferAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},TransferReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV0",message:"XcmV0"}}},XcmErrorV0:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocation, Xcm)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",RecursionLimitReached:"Null"}},XcmOrderV0:{_enum:{Null:"Null",DepositAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0"},DepositReserveAsset:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},ExchangeAsset:{give:"Vec<MultiAssetV0>",receive:"Vec<MultiAssetV0>"},InitiateReserveWithdraw:{assets:"Vec<MultiAssetV0>",reserve:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},InitiateTeleport:{assets:"Vec<MultiAssetV0>",dest:"MultiLocationV0",effects:"Vec<XcmOrderV0>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV0",assets:"Vec<MultiAssetV0>"},BuyExecution:{fees:"MultiAssetV0",weight:"u64",debt:"u64",haltOnError:"bool",xcm:"Vec<XcmV0>"}}}};

	const v1={AssetInstanceV1:{_enum:{Undefined:"Null",Index:"Compact<u128>",Array4:"[u8; 4]",Array8:"[u8; 8]",Array16:"[u8; 16]",Array32:"[u8; 32]",Blob:"Bytes"}},FungibilityV1:{_enum:{Fungible:"Compact<u128>",NonFungible:"AssetInstanceV1"}},JunctionV1:{_enum:{Parachain:"Compact<u32>",AccountId32:{network:"NetworkId",id:"AccountId"},AccountIndex64:{network:"NetworkId",index:"Compact<u64>"},AccountKey20:{network:"NetworkId",key:"[u8; 20]"},PalletInstance:"u8",GeneralIndex:"Compact<u128>",GeneralKey:"Vec<u8>",OnlyChild:"Null",Plurality:{id:"BodyId",part:"BodyPart"}}},JunctionsV1:{_enum:{Here:"Null",X1:"JunctionV1",X2:"(JunctionV1, JunctionV1)",X3:"(JunctionV1, JunctionV1, JunctionV1)",X4:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X5:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X6:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X7:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)",X8:"(JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1, JunctionV1)"}},MultiAssetsV1:"Vec<MultiAssetV1>",MultiAssetV1:{id:"XcmAssetId",fungibility:"FungibilityV1"},MultiAssetFilterV1:{_enum:{Definite:"MultiAssetsV1",Wild:"WildMultiAssetV1"}},MultiLocationV1:{parents:"u8",interior:"JunctionsV1"},OriginKindV1:"OriginKindV0",ResponseV1:{_enum:{Assets:"MultiAssetsV1"}},WildFungibilityV1:{_enum:["Fungible","NonFungible"]},WildMultiAssetV1:{_enum:{All:"Null",AllOf:{id:"XcmAssetId",fungibility:"WildFungibilityV1"}}},XcmV1:{_enum:{WithdrawAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReserveAssetDeposit:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},ReceiveTeleportedAsset:{assets:"MultiAssetsV1",effects:"Vec<XcmOrderV1>"},QueryResponse:{queryId:"Compact<u64>",response:"ResponseV1"},TransferAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1"},TransferReserveAsset:{assets:"MultiAssetsV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},Transact:{originType:"XcmOriginKind",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},RelayedFrom:{who:"MultiLocationV1",message:"XcmV1"}}},XcmErrorV1:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",SendFailed:"Null",CannotReachDestination:"(MultiLocationV1, XcmV1)",MultiLocationFull:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null"}},XcmOrderV1:{_enum:{Noop:"Null",DepositAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",beneficiary:"MultiLocationV1"},DepositReserveAsset:{assets:"MultiAssetFilterV1",maxAssets:"u32",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},ExchangeAsset:{give:"MultiAssetFilterV1",receive:"MultiAssetsV1"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV1",reserve:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},InitiateTeleport:{assets:"MultiAssetFilterV1",dest:"MultiLocationV1",effects:"Vec<XcmOrderV1>"},QueryHolding:{queryId:"Compact<u64>",dest:"MultiLocationV1",assets:"MultiAssetFilterV1"},BuyExecution:{fees:"MultiAssetV1",weight:"u64",debt:"u64",haltOnError:"bool",instructions:"Vec<XcmV1>"}}}};

	const v2={AssetInstanceV2:"AssetInstanceV1",FungibilityV2:"FungibilityV1",JunctionV2:"JunctionV1",JunctionsV2:"JunctionsV1",MultiAssetsV2:"MultiAssetsV1",MultiAssetV2:"MultiAssetV1",MultiAssetFilterV2:"MultiAssetFilterV1",MultiLocationV2:"MultiLocationV1",OriginKindV2:"OriginKindV1",WildFungibilityV2:"WildFungibilityV1",ResponseV2:{_enum:{Null:"Null",Assets:"MultiAssetsV2",ExecutionResult:"ResponseV2Result"}},ResponseV2Error:"(u32, XcmErrorV2)",ResponseV2Result:"Result<Null, ResponseV2Error>",WeightLimitV2:{_enum:{Unlimited:"Null",Limited:"Compact<u64>"}},InstructionV2:{_enum:{WithdrawAsset:"MultiAssetsV2",ReserveAssetDeposited:"MultiAssetsV2",ReceiveTeleportedAsset:"MultiAssetsV2",QueryResponse:{queryId:"Compact<u64>",response:"ResponseV2",maxWeight:"Compact<u64>"},TransferAsset:{assets:"MultiAssetsV2",beneficiary:"MultiLocationV2"},TransferReserveAsset:{assets:"MultiAssetsV2",dest:"MultiLocationV2",xcm:"XcmV2"},Transact:{originType:"OriginKindV2",requireWeightAtMost:"u64",call:"DoubleEncodedCall"},HrmpNewChannelOpenRequest:{sender:"Compact<u32>",maxMessageSize:"Compact<u32>",maxCapacity:"Compact<u32>"},HrmpChannelAccepted:{recipient:"Compact<u32>"},HrmpChannelClosing:{initiator:"Compact<u32>",sender:"Compact<u32>",recipient:"Compact<u32>"},ClearOrigin:"Null",DescendOrigin:"InteriorMultiLocation",ReportError:{queryId:"Compact<u64>",dest:"MultiLocationV2",maxResponseWeight:"Compact<u64>"},DepositAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",beneficiary:"MultiLocationV2"},DepositReserveAsset:{assets:"MultiAssetFilterV2",maxAssets:"u32",dest:"MultiLocationV2",xcm:"XcmV2"},ExchangeAsset:{give:"MultiAssetFilterV2",receive:"MultiAssetsV2"},InitiateReserveWithdraw:{assets:"MultiAssetFilterV2",reserve:"MultiLocationV2",xcm:"XcmV2"},InitiateTeleport:{assets:"MultiAssetFilterV2",dest:"MultiLocationV2",xcm:"XcmV2"},QueryHolding:{query_id:"Compact<u64>",dest:"MultiLocationV2",assets:"MultiAssetFilterV2",maxResponse_Weight:"Compact<u64>"},BuyExecution:{fees:"MultiAssetV2",weightLimit:"WeightLimitV2"},RefundSurplus:"Null",SetErrorHandler:"XcmV2",SetAppendix:"XcmV2",ClearError:"Null",ClaimAsset:{assets:"MultiAssetsV2",ticket:"MultiLocationV2"},Trap:"u64"}},WildMultiAssetV2:"WildMultiAssetV1",XcmV2:"Vec<InstructionV2>",XcmErrorV2:{_enum:{Undefined:"Null",Overflow:"Null",Unimplemented:"Null",UnhandledXcmVersion:"Null",UnhandledXcmMessage:"Null",UnhandledEffect:"Null",EscalationOfPrivilege:"Null",UntrustedReserveLocation:"Null",UntrustedTeleportLocation:"Null",DestinationBufferOverflow:"Null",MultiLocationFull:"Null",MultiLocationNotInvertible:"Null",FailedToDecode:"Null",BadOrigin:"Null",ExceedsMaxMessageSize:"Null",FailedToTransactAsset:"Null",WeightLimitReached:"Weight",Wildcard:"Null",TooMuchWeightRequired:"Null",NotHoldingFees:"Null",WeightNotComputable:"Null",Barrier:"Null",NotWithdrawable:"Null",LocationCannotHold:"Null",TooExpensive:"Null",AssetNotFound:"Null",DestinationUnsupported:"Null",RecursionLimitReached:"Null",Transport:"Null",Unroutable:"Null",UnknownWeightRequired:"Null",Trap:"u64",UnknownClaim:"Null",InvalidLocation:"Null"}},XcmOrderV2:"XcmOrderV1"};

	const xcm={XcmOrigin:{_enum:{Xcm:"MultiLocation"}},XcmpMessageFormat:{_enum:["ConcatenatedVersionedXcm","ConcatenatedEncodedBlob","Signals"]},XcmAssetId:{_enum:{Concrete:"MultiLocation",Abstract:"Bytes"}},InboundStatus:{_enum:["Ok","Suspended"]},OutboundStatus:{_enum:["Ok","Suspended"]},MultiAssets:"Vec<MultiAsset>"},location={BodyId:{_enum:{Unit:"Null",Named:"Vec<u8>",Index:"Compact<u32>",Executive:"Null",Technical:"Null",Legislative:"Null",Judicial:"Null"}},BodyPart:{_enum:{Voice:"Null",Members:"Compact<u32>",Fraction:{nom:"Compact<u32>",denom:"Compact<u32>"},AtLeastProportion:{nom:"Compact<u32>",denom:"Compact<u32>"},MoreThanProportion:{nom:"Compact<u32>",denom:"Compact<u32>"}}},InteriorMultiLocation:"Junctions",NetworkId:{_enum:{Any:"Null",Named:"Vec<u8>",Polkadot:"Null",Kusama:"Null"}}};var definitions$c = {rpc:{},types:objectSpread({},location,xcm,v0,v1,v2,mapXcmTypes("V2"),{DoubleEncodedCall:{encoded:"Vec<u8>"},XcmOriginKind:{_enum:["Native","SovereignAccount","Superuser","Xcm"]},Outcome:{_enum:{Complete:"Weight",Incomplete:"(Weight, XcmErrorV0)",Error:"XcmErrorV0"}},QueryId:"u64",QueryStatus:{_enum:{Pending:{responder:"VersionedMultiLocation",maybeNotify:"Option<(u8, u8)>",timeout:"BlockNumber"},Ready:{response:"VersionedResponse",at:"BlockNumber"}}},QueueConfigData:{suspendThreshold:"u32",dropThreshold:"u32",resumeThreshold:"u32",thresholdWeight:"Weight",weightRestrictDecay:"Weight"},VersionMigrationStage:{_enum:{MigrateSupportedVersion:"Null",MigrateVersionNotifiers:"Null",NotifyCurrentTargets:"Option<Bytes>",MigrateAndNotifyOldTargets:"Null"}},VersionedMultiAsset:{_enum:{V0:"MultiAssetV0",V1:"MultiAssetV1",V2:"MultiAssetV2"}},VersionedMultiAssets:{_enum:{V0:"Vec<MultiAssetV0>",V1:"MultiAssetsV1",V2:"MultiAssetsV2"}},VersionedMultiLocation:{_enum:{V0:"MultiLocationV0",V1:"MultiLocationV1",V2:"MultiLocationV2"}},VersionedResponse:{V0:"ResponseV0",V1:"ResponseV1",V2:"ResponseV2"},VersionedXcm:{_enum:{V0:"XcmV0",V1:"XcmV1",V2:"XcmV2"}},XcmVersion:"u32"})};

	const layout={ContractCryptoHasher:{_enum:["Blake2x256","Sha2x256","Keccak256"]},ContractDiscriminant:"u32",ContractLayoutArray:{offset:"ContractLayoutKey",len:"u32",cellsPerElem:"u64",layout:"ContractStorageLayout"},ContractLayoutCell:{key:"ContractLayoutKey",ty:"SiLookupTypeId"},ContractLayoutEnum:{dispatchKey:"ContractLayoutKey",variants:"BTreeMap<ContractDiscriminant, ContractLayoutStruct>"},ContractLayoutHash:{offset:"ContractLayoutKey",strategy:"ContractLayoutHashingStrategy",layout:"ContractStorageLayout"},ContractLayoutHashingStrategy:{hasher:"ContractCryptoHasher",postfix:"Vec<u8>",prefix:"Vec<u8>"},ContractLayoutKey:"[u8; 32]",ContractLayoutStruct:{fields:"Vec<ContractLayoutStructField>"},ContractLayoutStructField:{layout:"ContractStorageLayout",name:"Text"},ContractStorageLayout:{_enum:{Cell:"ContractLayoutCell",Hash:"ContractLayoutHash",Array:"ContractLayoutArray",Struct:"ContractLayoutStruct",Enum:"ContractLayoutEnum"}}},spec={ContractConstructorSpecV0:{name:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV1:{name:"Vec<Text>",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV0>",docs:"Vec<Text>"},ContractConstructorSpecV2:{label:"Text",selector:"ContractSelector",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractConstructorSpecV3:{label:"Text",selector:"ContractSelector",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",docs:"Vec<Text>"},ContractContractSpecV0:{constructors:"Vec<ContractConstructorSpecV0>",messages:"Vec<ContractMessageSpecV0>",events:"Vec<ContractEventSpecV0>",docs:"Vec<Text>"},ContractContractSpecV1:{constructors:"Vec<ContractConstructorSpecV1>",messages:"Vec<ContractMessageSpecV1>",events:"Vec<ContractEventSpecV1>",docs:"Vec<Text>"},ContractContractSpecV2:{constructors:"Vec<ContractConstructorSpecV2>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV3:{constructors:"Vec<ContractConstructorSpecV3>",messages:"Vec<ContractMessageSpecV2>",events:"Vec<ContractEventSpecV2>",docs:"Vec<Text>"},ContractContractSpecV4:"ContractContractSpecV3",ContractDisplayName:"SiPath",ContractEventParamSpecV0:{name:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventParamSpecV2:{label:"Text",indexed:"bool",type:"ContractTypeSpec",docs:"Vec<Text>"},ContractEventSpecV0:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV1:{name:"Text",args:"Vec<ContractEventParamSpecV0>",docs:"Vec<Text>"},ContractEventSpecV2:{label:"Text",args:"Vec<ContractEventParamSpecV2>",docs:"Vec<Text>"},ContractMessageParamSpecV0:{name:"Text",type:"ContractTypeSpec"},ContractMessageParamSpecV2:{label:"Text",type:"ContractTypeSpec"},ContractMessageSpecV0:{name:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV1:{name:"Vec<Text>",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV0>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractMessageSpecV2:{label:"Text",selector:"ContractSelector",mutates:"bool",payable:"bool",args:"Vec<ContractMessageParamSpecV2>",returnType:"Option<ContractTypeSpec>",docs:"Vec<Text>"},ContractSelector:"[u8; 4]",ContractTypeSpec:{type:"SiLookupTypeId",displayName:"ContractDisplayName"}},ContractMetadataV0={metadataVersion:"Text",types:"Vec<Si0Type>",spec:"ContractContractSpecV0"},ContractMetadataV1={types:"Vec<PortableType>",spec:"ContractContractSpecV1"},ContractMetadataV2={types:"Vec<PortableType>",spec:"ContractContractSpecV2"},ContractMetadataV3={types:"Vec<PortableType>",spec:"ContractContractSpecV3"},ContractMetadataV4=ContractMetadataV3,ContractProjectInfo={source:"ContractProjectSource",contract:"ContractProjectContract"},latest={ContractConstructorSpecLatest:"ContractConstructorSpecV3",ContractEventSpecLatest:"ContractEventSpecV2",ContractEventParamSpecLatest:"ContractEventParamSpecV2",ContractMessageParamSpecLatest:"ContractMessageParamSpecV2",ContractMessageSpecLatest:"ContractMessageSpecV2",ContractMetadataLatest:"ContractMetadataV4"};var definitions$b = {rpc:{},types:objectSpread({},layout,spec,latest,{ContractProjectInfo:ContractProjectInfo,ContractMetadataV0:ContractMetadataV0,ContractMetadataV1:ContractMetadataV1,ContractMetadataV2:ContractMetadataV2,ContractMetadataV3:ContractMetadataV3,ContractMetadataV4:ContractMetadataV4,ContractMetadata:{_enum:{V0:"ContractMetadataV0",V1:"ContractMetadataV1",V2:"ContractMetadataV2",V3:"ContractMetadataV3",V4:"ContractMetadataV4"}},ContractProjectV0:objectSpread({metadataVersion:"Text"},ContractProjectInfo,ContractMetadataV0),ContractProject:"(ContractProjectInfo, ContractMetadata)",ContractProjectContract:{_alias:{docs:"documentation"},name:"Text",version:"Text",authors:"Vec<Text>",description:"Option<Text>",docs:"Option<Text>",repository:"Option<Text>",homepage:"Option<Text>",license:"Option<Text>"},ContractProjectSource:{_alias:{wasmHash:"hash"},wasmHash:"[u8; 32]",language:"Text",compiler:"Text",wasm:"Raw"}})};

	const netRpc={listening:{aliasSection:"net",description:"Returns true if client is actively listening for network connections. Otherwise false.",params:[],type:"bool"},peerCount:{aliasSection:"net",description:"Returns number of peers connected to node.",params:[],type:"Text"},version:{aliasSection:"net",description:"Returns protocol version.",params:[],type:"Text"}},web3Rpc={clientVersion:{aliasSection:"web3",description:"Returns current client version.",params:[],type:"Text"},sha3:{aliasSection:"web3",description:"Returns sha3 of the given data",params:[{name:"data",type:"Bytes"}],type:"H256"}};const rpc$7=objectSpread({},netRpc,web3Rpc,{accounts:{description:"Returns accounts list.",params:[],type:"Vec<H160>"},blockNumber:{description:"Returns the blockNumber",params:[],type:"U256"},call:{description:"Call contract, returning the output data.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},chainId:{description:"Returns the chain ID used for transaction signing at the current best block. None is returned if not available.",params:[],type:"U64"},coinbase:{description:"Returns block author.",params:[],type:"H160"},estimateGas:{description:"Estimate gas needed for execution of given contract.",params:[{name:"request",type:"EthCallRequest"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},feeHistory:{description:"Returns fee history for given block count & reward percentiles",params:[{name:"blockCount",type:"U256"},{name:"newestBlock",type:"BlockNumber"},{name:"rewardPercentiles",type:"Option<Vec<f64>>"}],type:"EthFeeHistory"},gasPrice:{description:"Returns current gas price.",params:[],type:"U256"},getBalance:{description:"Returns balance of the given account.",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getBlockByHash:{description:"Returns block with given hash.",params:[{name:"hash",type:"H256"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockByNumber:{description:"Returns block with given number.",params:[{name:"block",type:"BlockNumber"},{name:"full",type:"bool"}],type:"Option<EthRichBlock>"},getBlockTransactionCountByHash:{description:"Returns the number of transactions in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getBlockTransactionCountByNumber:{description:"Returns the number of transactions in a block with given block number.",params:[{name:"block",type:"BlockNumber"}],type:"U256"},getCode:{description:"Returns the code at given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"Bytes"},getFilterChanges:{description:"Returns filter changes since last poll.",params:[{name:"index",type:"U256"}],type:"EthFilterChanges"},getFilterLogs:{description:"Returns all logs matching given filter (in a range 'from' - 'to').",params:[{name:"index",type:"U256"}],type:"Vec<EthLog>"},getLogs:{description:"Returns logs matching given filter object.",params:[{name:"filter",type:"EthFilter"}],type:"Vec<EthLog>"},getProof:{description:"Returns proof for account and storage.",params:[{name:"address",type:"H160"},{name:"storageKeys",type:"Vec<H256>"},{name:"number",type:"BlockNumber"}],type:"EthAccount"},getStorageAt:{description:"Returns content of the storage at given address.",params:[{name:"address",type:"H160"},{name:"index",type:"U256"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"H256"},getTransactionByBlockHashAndIndex:{description:"Returns transaction at given block hash and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByBlockNumberAndIndex:{description:"Returns transaction by given block number and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthTransaction"},getTransactionByHash:{description:"Get transaction by its hash.",params:[{name:"hash",type:"H256"}],type:"EthTransaction"},getTransactionCount:{description:"Returns the number of transactions sent from given address at given time (block number).",params:[{name:"address",type:"H160"},{isHistoric:!0,isOptional:!0,name:"number",type:"BlockNumber"}],type:"U256"},getTransactionReceipt:{description:"Returns transaction receipt by transaction hash.",params:[{name:"hash",type:"H256"}],type:"EthReceipt"},getUncleByBlockHashAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"hash",type:"H256"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleByBlockNumberAndIndex:{description:"Returns an uncles at given block and index.",params:[{name:"number",type:"BlockNumber"},{name:"index",type:"U256"}],type:"EthRichBlock"},getUncleCountByBlockHash:{description:"Returns the number of uncles in a block with given hash.",params:[{name:"hash",type:"H256"}],type:"U256"},getUncleCountByBlockNumber:{description:"Returns the number of uncles in a block with given block number.",params:[{name:"number",type:"BlockNumber"}],type:"U256"},getWork:{description:"Returns the hash of the current block, the seedHash, and the boundary condition to be met.",params:[],type:"EthWork"},hashrate:{description:"Returns the number of hashes per second that the node is mining with.",params:[],type:"U256"},maxPriorityFeePerGas:{description:"Returns max priority fee per gas",params:[],type:"U256"},mining:{description:"Returns true if client is actively mining new blocks.",params:[],type:"bool"},newBlockFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},newFilter:{description:"Returns id of new filter.",params:[{name:"filter",type:"EthFilter"}],type:"U256"},newPendingTransactionFilter:{description:"Returns id of new block filter.",params:[],type:"U256"},protocolVersion:{description:"Returns protocol version encoded as a string (quotes are necessary).",params:[],type:"u64"},sendRawTransaction:{description:"Sends signed transaction, returning its hash.",params:[{name:"bytes",type:"Bytes"}],type:"H256"},sendTransaction:{description:"Sends transaction; will block waiting for signer to return the transaction hash",params:[{name:"tx",type:"EthTransactionRequest"}],type:"H256"},submitHashrate:{description:"Used for submitting mining hashrate.",params:[{name:"index",type:"U256"},{name:"hash",type:"H256"}],type:"bool"},submitWork:{description:"Used for submitting a proof-of-work solution.",params:[{name:"nonce",type:"H64"},{name:"headerHash",type:"H256"},{name:"mixDigest",type:"H256"}],type:"bool"},subscribe:{description:"Subscribe to Eth subscription.",params:[{name:"kind",type:"EthSubKind"},{isOptional:!0,name:"params",type:"EthSubParams"}],pubsub:["subscription","subscribe","unsubscribe"],type:"Null"},syncing:{description:"Returns an object with data about the sync status or false.",params:[],type:"EthSyncStatus"},uninstallFilter:{description:"Uninstalls filter.",params:[{name:"index",type:"U256"}],type:"bool"}});

	const runtime$5={ConvertTransactionRuntimeApi:[{methods:{convert_transaction:{description:"Converts an Ethereum-style transaction to Extrinsic",params:[{name:"transaction",type:"TransactionV2"}],type:"Extrinsic"}},version:2}],DebugRuntimeApi:[{methods:{trace_block:{description:"Trace all block extrinsics",params:[{name:"extrinsics",type:"Vec<Extrinsic>"},{name:"knownTransactions",type:"Vec<H256>"}],type:"Result<(), DispatchError>"},trace_transaction:{description:"Trace transaction extrinsics",params:[{name:"extrinsics",type:"Vec<Extrinsic>"},{name:"transaction",type:"EthTransaction"}],type:"Result<(), DispatchError>"}},version:4}],EthereumRuntimeRPCApi:[{methods:{account_basic:{description:"Returns pallet_evm::Accounts by address.",params:[{name:"address",type:"H160"}],type:"EvmAccount"},account_code_at:{description:"For a given account address, returns pallet_evm::AccountCodes.",params:[{name:"address",type:"H160"}],type:"Bytes"},author:{description:"Returns the converted FindAuthor::find_author authority id.",params:[],type:"H160"},call:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"to",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCallInfo, DispatchError>"},chain_id:{description:"Returns runtime defined pallet_evm::ChainId.",params:[],type:"u64"},create:{description:"Returns a frame_ethereum::call response. If `estimate` is true,",params:[{name:"from",type:"H160"},{name:"data",type:"Vec<u8>"},{name:"value",type:"U256"},{name:"gasLimit",type:"U256"},{name:"maxFeePerGas",type:"Option<U256>"},{name:"maxPriorityFeePerGas",type:"Option<U256>"},{name:"nonce",type:"Option<U256>"},{name:"estimate",type:"bool"},{name:"accessList",type:"Option<Vec<(H160, Vec<H256>)>>"}],type:"Result<EvmCreateInfo, DispatchError>"},current_all:{description:"Return all the current data for a block in a single runtime call.",params:[],type:"(Option<BlockV2>, Option<Vec<EthReceiptV3>>, Option<Vec<EthTransactionStatus>>)"},current_block:{description:"Return the current block.",params:[],type:"BlockV2"},current_receipts:{description:"Return the current receipt.",params:[],type:"Option<Vec<EthReceiptV3>>"},current_transaction_statuses:{description:"Return the current transaction status.",params:[],type:"Option<Vec<EthTransactionStatus>>"},elasticity:{description:"Return the elasticity multiplier.",params:[],type:"Option<Permill>"},extrinsic_filter:{description:"Receives a `Vec<OpaqueExtrinsic>` and filters all the ethereum transactions.",params:[{name:"xts",type:"Vec<Extrinsic>"}],type:"Vec<TransactionV2>"},gas_price:{description:"Returns FixedGasPrice::min_gas_price",params:[],type:"u256"},storage_at:{description:"For a given account address and index, returns pallet_evm::AccountStorages.",params:[{name:"address",type:"H160"},{name:"index",type:"u256"}],type:"H256"}},version:4}]};

	const V0={BlockV0:{header:"EthHeader",transactions:"Vec<TransactionV0>",ommers:"Vec<EthHeader>"},LegacyTransaction:{nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",signature:"EthTransactionSignature"},TransactionV0:"LegacyTransaction"},V1={BlockV1:{header:"EthHeader",transactions:"Vec<TransactionV1>",ommers:"Vec<EthHeader>"},EIP2930Transaction:{chainId:"u64",nonce:"U256",gasPrice:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV1:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction"}}},V2={BlockV2:{header:"EthHeader",transactions:"Vec<TransactionV2>",ommers:"Vec<EthHeader>"},EIP1559Transaction:{chainId:"u64",nonce:"U256",maxPriorityFeePerGas:"U256",maxFeePerGas:"U256",gasLimit:"U256",action:"EthTransactionAction",value:"U256",input:"Bytes",accessList:"EthAccessList",oddYParity:"bool",r:"H256",s:"H256"},TransactionV2:{_enum:{Legacy:"LegacyTransaction",EIP2930:"EIP2930Transaction",EIP1559:"EIP1559Transaction"}}},types=objectSpread({},V0,V1,V2,{EthereumAccountId:"GenericEthereumAccountId",EthereumAddress:"GenericEthereumAccountId",EthereumLookupSource:"GenericEthereumLookupSource",EthereumSignature:"[u8; 65]",EthAccessListItem:{address:"EthAddress",slots:"Vec<H256>"},EthAccessList:"Vec<EthAccessListItem>",EthAccount:{address:"EthAddress",balance:"U256",nonce:"U256",codeHash:"H256",storageHash:"H256",accountProof:"Vec<Bytes>",storageProof:"Vec<EthStorageProof>"},EthAddress:"H160",EthBlock:{header:"EthHeader",transactions:"Vec<EthTransaction>",ommers:"Vec<EthHeader>"},EthHeader:{parentHash:"H256",ommersHash:"H256",beneficiary:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",logsBloom:"EthBloom",difficulty:"U256",number:"U256",gasLimit:"U256",gasUsed:"U256",timestamp:"u64",extraData:"Bytes",mixMash:"H256",nonce:"H64"},EthRichBlock:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",totalDifficulty:"Option<U256>",sealFields:"Vec<Bytes>",uncles:"Vec<H256>",transactions:"Vec<EthTransaction>",blockSize:"Option<U256>"},EthBloom:"H2048",EthCallRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthFeeHistory:{oldestBlock:"U256",baseFeePerGas:"Vec<U256>",gasUsedRatio:"Vec<f64>",reward:"Option<Vec<Vec<U256>>>"},EthFilter:{fromBlock:"Option<BlockNumber>",toBlock:"Option<BlockNumber>",blockHash:"Option<H256>",address:"Option<EthFilterAddress>",topics:"Option<EthFilterTopic>"},EthFilterAddress:{_enum:{Single:"EthAddress",Multiple:"Vec<EthAddress>",Null:"Null"}},EthFilterChanges:{_enum:{Logs:"Vec<EthLog>",Hashes:"Vec<H256>",Empty:"Null"}},EthFilterTopic:{_enum:{Single:"EthFilterTopicInner",Multiple:"Vec<EthFilterTopicInner>",Null:"Null"}},EthFilterTopicEntry:"Option<H256>",EthFilterTopicInner:{_enum:{Single:"EthFilterTopicEntry",Multiple:"Vec<EthFilterTopicEntry>",Null:"Null"}},EthRichHeader:{_alias:{blockHash:"hash",blockSize:"size"},blockHash:"Option<H256>",parentHash:"H256",sha3Uncles:"H256",author:"EthAddress",miner:"EthAddress",stateRoot:"H256",transactionsRoot:"H256",receiptsRoot:"H256",number:"Option<U256>",gasUsed:"U256",gasLimit:"U256",extraData:"Bytes",logsBloom:"EthBloom",timestamp:"U256",difficulty:"U256",sealFields:"Vec<Bytes>",blockSize:"Option<U256>"},EthLog:{address:"EthAddress",topics:"Vec<H256>",data:"Bytes",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionHash:"Option<H256>",transactionIndex:"Option<U256>",logIndex:"Option<U256>",transactionLogIndex:"Option<U256>",removed:"bool"},EthReceipt:{transactionHash:"Option<H256>",transactionIndex:"Option<U256>",blockHash:"Option<H256>",from:"Option<EthAddress>",to:"Option<EthAddress>",blockNumber:"Option<U256>",cumulativeGasUsed:"U256",gasUsed:"Option<U256>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",root:"Option<H256>",logsBloom:"EthBloom",statusCode:"Option<U64>"},EthReceiptV0:"EthReceipt",EthReceiptV3:"EthReceipt",EthStorageProof:{key:"U256",value:"U256",proof:"Vec<Bytes>"},EthSubKind:{_enum:["newHeads","logs","newPendingTransactions","syncing"]},EthSubParams:{_enum:{None:"Null",Logs:"EthFilter"}},EthSubResult:{_enum:{Header:"EthRichHeader",Log:"EthLog",TransactionHash:"H256",SyncState:"EthSyncStatus"}},EthSyncInfo:{startingBlock:"U256",currentBlock:"U256",highestBlock:"U256",warpChunksAmount:"Option<U256>",warpChunksProcessed:"Option<U256>"},EthSyncStatus:{_enum:{Info:"EthSyncInfo",None:"Null"}},EthTransaction:{hash:"H256",nonce:"U256",blockHash:"Option<H256>",blockNumber:"Option<U256>",transactionIndex:"Option<U256>",from:"H160",to:"Option<H160>",value:"U256",gasPrice:"Option<U256>",maxFeePerGas:"Option<U256>",maxPriorityFeePerGas:"Option<U256>",gas:"U256",input:"Bytes",creates:"Option<H160>",raw:"Bytes",publicKey:"Option<H512>",chainId:"Option<U64>",standardV:"U256",v:"U256",r:"U256",s:"U256",accessList:"Option<Vec<EthAccessListItem>>",transactionType:"Option<U256>"},EthTransactionSignature:{v:"u64",r:"H256",s:"H256"},EthTransactionAction:{_enum:{Call:"H160",Create:"Null"}},EthTransactionCondition:{_enum:{block:"u64",time:"u64"}},EthTransactionRequest:{from:"Option<EthAddress>",to:"Option<EthAddress>",gasPrice:"Option<U256>",gas:"Option<U256>",value:"Option<U256>",data:"Option<Bytes>",nonce:"Option<U256>"},EthTransactionStatus:{transactionHash:"H256",transactionIndex:"u32",from:"EthAddress",to:"Option<EthAddress>",contractAddress:"Option<EthAddress>",logs:"Vec<EthLog>",logsBloom:"EthBloom"},EthWork:{powHash:"H256",seedHash:"H256",target:"H256",number:"Option<u64>"}});var definitions$a = {rpc:rpc$7,runtime:runtime$5,types:types};

	const runtime$4={AuthorFilterAPI:[{methods:{can_author:{description:"The runtime api used to predict whether an author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"},{name:"parentHeader",type:"Header"}],type:"bool"}},version:2},{methods:{can_author:{description:"The runtime api used to predict whether an author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"}],type:"bool"}},version:1}],NimbusApi:[{methods:{can_author:{description:"The runtime api used to predict whether a Nimbus author will be eligible in the given slot",params:[{name:"author",type:"AccountId"},{name:"relayParent",type:"u32"},{name:"parentHeader",type:"Header"}],type:"bool"}},version:1}]};

	var definitions$9 = {rpc:{},runtime:runtime$4,types:{}};

	const runtime$3={OracleApi:[{methods:{get_all_values:{description:"Retrieves all values",params:[{name:"providerId",type:"Raw"}],type:"Raw"},get_value:{description:"Retrieves a single value",params:[{name:"providerId",type:"Raw"},{name:"key",type:"Raw"}],type:"Option<Raw>"}},version:1}]};

	var definitions$8 = {rpc:{},runtime:runtime$3,types:{}};

	const runtime$2={TokensApi:[{methods:{query_existential_deposit:{description:"Query the existential amount for a specific currency",params:[{name:"currencyId",type:"Raw"}],type:"u128"}},version:1}]};

	var definitions$7 = {rpc:{},runtime:runtime$2,types:{}};

	const rpc$6={methods:{description:"Retrieves the list of RPC methods that are exposed by the node",params:[],type:"RpcMethods"}};

	var definitions$6 = {rpc:rpc$6,types:{RpcMethods:{version:"u32",methods:"Vec<Text>"}}};

	const rpc$5={hasKey:{description:"Returns true if the keystore has private keys for the given public key and key type.",isUnsafe:!0,params:[{name:"publicKey",type:"Bytes"},{name:"keyType",type:"Text"}],type:"bool"},hasSessionKeys:{description:"Returns true if the keystore has private keys for the given session public keys.",isUnsafe:!0,params:[{name:"sessionKeys",type:"Bytes"}],type:"bool"},insertKey:{description:"Insert a key into the keystore.",isUnsafe:!0,params:[{name:"keyType",type:"Text"},{name:"suri",type:"Text"},{name:"publicKey",type:"Bytes"}],type:"Bytes"},pendingExtrinsics:{description:"Returns all pending extrinsics, potentially grouped by sender",params:[],type:"Vec<Extrinsic>"},removeExtrinsic:{description:"Remove given extrinsic from the pool and temporarily ban it to prevent reimporting",isUnsafe:!0,params:[{name:"bytesOrHash",type:"Vec<ExtrinsicOrHash>"}],type:"Vec<Hash>"},rotateKeys:{description:"Generate new session keys and returns the corresponding public keys",isUnsafe:!0,params:[],type:"Bytes"},submitAndWatchExtrinsic:{description:"Submit and subscribe to watch an extrinsic until unsubscribed",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],pubsub:["extrinsicUpdate","submitAndWatchExtrinsic","unwatchExtrinsic"],type:"ExtrinsicStatus"},submitExtrinsic:{description:"Submit a fully formatted extrinsic for block inclusion",isSigned:!0,params:[{name:"extrinsic",type:"Extrinsic"}],type:"Hash"}};

	var definitions$5 = {rpc:rpc$5,types:{ExtrinsicOrHash:{_enum:{Hash:"Hash",Extrinsic:"Bytes"}},ExtrinsicStatus:{_enum:{Future:"Null",Ready:"Null",Broadcast:"Vec<Text>",InBlock:"Hash",Retracted:"Hash",FinalityTimeout:"Hash",Finalized:"Hash",Usurped:"Hash",Dropped:"Null",Invalid:"Null"}}}};

	const rpc$4={getBlock:{description:"Get header and body of a relay chain block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"SignedBlock"},getBlockHash:{description:"Get the block hash for a specific block",params:[{isOptional:!0,name:"blockNumber",type:"BlockNumber"}],type:"BlockHash"},getFinalizedHead:{alias:["chain_getFinalisedHead"],description:"Get hash of the last finalized block in the canon chain",params:[],type:"BlockHash"},getHeader:{alias:["chain_getHead"],description:"Retrieves the header for a specific block",params:[{isHistoric:!0,isOptional:!0,name:"hash",type:"BlockHash"}],type:"Header"},subscribeAllHeads:{description:"Retrieves the newest header via subscription",params:[],pubsub:["allHead","subscribeAllHeads","unsubscribeAllHeads"],type:"Header"},subscribeFinalizedHeads:{alias:["chain_subscribeFinalisedHeads","chain_unsubscribeFinalisedHeads"],description:"Retrieves the best finalized header via subscription",params:[],pubsub:["finalizedHead","subscribeFinalizedHeads","unsubscribeFinalizedHeads"],type:"Header"},subscribeNewHeads:{alias:["chain_unsubscribeNewHeads","subscribe_newHead","unsubscribe_newHead"],description:"Retrieves the best header via subscription",params:[],pubsub:["newHead","subscribeNewHead","unsubscribeNewHead"],type:"Header"}};

	var definitions$4 = {rpc:rpc$4,types:{BlockHash:"Hash"}};

	const rpc$3={getKeys:{description:"Returns the keys with prefix from a child storage, leave empty to get all the keys",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["childstate_getKeysPagedAt"],description:"Returns the keys with prefix from a child storage with pagination support",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"prefix",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<StorageKey>"},getStorage:{description:"Returns a child storage entry at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<StorageData>"},getStorageEntries:{description:"Returns child storage entries for multiple keys at a specific block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Vec<Option<StorageData>>"},getStorageHash:{description:"Returns the hash of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<Hash>"},getStorageSize:{description:"Returns the size of a child storage entry at a block state",params:[{name:"childKey",type:"PrefixedStorageKey"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"Hash"}],type:"Option<u64>"}};

	var definitions$3 = {rpc:rpc$3,types:{PrefixedStorageKey:"StorageKey"}};

	const rpc$2={localStorageGet:{description:"Get offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"}],type:"Option<Bytes>"},localStorageSet:{description:"Set offchain local storage under given key and prefix",isUnsafe:!0,params:[{name:"kind",type:"StorageKind"},{name:"key",type:"Bytes"},{name:"value",type:"Bytes"}],type:"Null"}};

	const runtime$1={OffchainWorkerApi:[{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"header",type:"Header"}],type:"Null"}},version:2},{methods:{offchain_worker:{description:"Starts the off-chain task for given block header.",params:[{name:"number",type:"BlockNumber"}],type:"Null"}},version:1}]};

	var definitions$2 = {rpc:rpc$2,runtime:runtime$1,types:{StorageKind:{_enum:{PERSISTENT:1,LOCAL:2}}}};

	const rpc$1={queryFeeDetails:{deprecated:"Use `api.call.transactionPaymentApi.queryFeeDetails` instead",description:"Query the detailed fee of a given encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"FeeDetails"},queryInfo:{deprecated:"Use `api.call.transactionPaymentApi.queryInfo` instead",description:"Retrieves the fee information for an encoded extrinsic",params:[{name:"extrinsic",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeDispatchInfoV1"}};

	const V1_V2_V3_SHARED_PAY={query_fee_details:{description:"The transaction fee details",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"FeeDetails"}},V1_V2_V3_SHARED_CALL={query_call_fee_details:{description:"The call fee details",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"FeeDetails"}},V2_V3_SHARED_PAY={query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},V2_V3_SHARED_CALL={query_call_info:{description:"The call info",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},V3_SHARED_PAY_CALL={query_length_to_fee:{description:"Query the output of the current LengthToFee given some input",params:[{name:"length",type:"u32"}],type:"Balance"},query_weight_to_fee:{description:"Query the output of the current WeightToFee given some input",params:[{name:"weight",type:"Weight"}],type:"Balance"}};const runtime={TransactionPaymentApi:[{methods:objectSpread({},V3_SHARED_PAY_CALL,V2_V3_SHARED_PAY,V1_V2_V3_SHARED_PAY),version:3},{methods:objectSpread({},V2_V3_SHARED_PAY,V1_V2_V3_SHARED_PAY),version:2},{methods:objectSpread({query_info:{description:"The transaction info",params:[{name:"uxt",type:"Extrinsic"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},V1_V2_V3_SHARED_PAY),version:1}],TransactionPaymentCallApi:[{methods:objectSpread({},V3_SHARED_PAY_CALL,V2_V3_SHARED_CALL,V1_V2_V3_SHARED_CALL),version:3},{methods:objectSpread({},V2_V3_SHARED_CALL,V1_V2_V3_SHARED_CALL),version:2},{methods:objectSpread({CALL:{description:"The call info",params:[{name:"call",type:"Call"},{name:"len",type:"u32"}],type:"RuntimeDispatchInfo"}},V1_V2_V3_SHARED_CALL),version:1}]};

	var definitions$1 = {rpc:rpc$1,runtime:runtime,types:{FeeDetails:{inclusionFee:"Option<InclusionFee>"},InclusionFee:{baseFee:"Balance",lenFee:"Balance",adjustedWeightFee:"Balance"},RuntimeDispatchInfo:{weight:"Weight",class:"DispatchClass",partialFee:"Balance"},RuntimeDispatchInfoV1:{weight:"WeightV1",class:"DispatchClass",partialFee:"Balance"},RuntimeDispatchInfoV2:{weight:"WeightV2",class:"DispatchClass",partialFee:"Balance"}}};

	const rpc={call:{alias:["state_callAt"],description:"Perform a call to a builtin on the chain",params:[{name:"method",type:"Text"},{name:"data",type:"Bytes"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Bytes"},getChildKeys:{description:"Retrieves the keys with prefix of a specific child storage",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getChildReadProof:{description:"Returns proof of storage for child key entries at a specific block state.",params:[{name:"childStorageKey",type:"PrefixedStorageKey"},{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getChildStorage:{description:"Retrieves the child storage for a key",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getChildStorageHash:{description:"Retrieves the child storage hash",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getChildStorageSize:{description:"Retrieves the child storage size",params:[{name:"childStorageKey",type:"StorageKey"},{name:"childDefinition",type:"StorageKey"},{name:"childType",type:"u32"},{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},getKeys:{deprecated:"Use `api.rpc.state.getKeysPaged` to retrieve keys",description:"Retrieves the keys with a certain prefix",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getKeysPaged:{alias:["state_getKeysPagedAt"],description:"Returns the keys with prefix with pagination support.",params:[{name:"key",type:"StorageKey"},{name:"count",type:"u32"},{isOptional:!0,name:"startKey",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageKey>"},getMetadata:{description:"Returns the runtime metadata",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Metadata"},getPairs:{deprecated:"Use `api.rpc.state.getKeysPaged` to retrieve keys",description:"Returns the keys with prefix, leave empty to get all the keys (deprecated: Use getKeysPaged)",isUnsafe:!0,params:[{name:"prefix",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<KeyValue>"},getReadProof:{description:"Returns proof of storage entries at a specific block state",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"ReadProof"},getRuntimeVersion:{alias:["chain_getRuntimeVersion"],description:"Get the runtime version",params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"RuntimeVersion"},getStorage:{alias:["state_getStorageAt"],description:"Retrieves the storage for a key",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"StorageData"},getStorageHash:{alias:["state_getStorageHashAt"],description:"Retrieves the storage hash",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Hash"},getStorageSize:{alias:["state_getStorageSizeAt"],description:"Retrieves the storage size",params:[{name:"key",type:"StorageKey"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"u64"},queryStorage:{description:"Query historical storage entries (by key) starting from a start block",isUnsafe:!0,params:[{name:"keys",type:"Vec<StorageKey>"},{name:"fromBlock",type:"Hash"},{isOptional:!0,name:"toBlock",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},queryStorageAt:{description:"Query storage entries (by key) starting at block hash given as the second parameter",params:[{name:"keys",type:"Vec<StorageKey>"},{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"Vec<StorageChangeSet>"},subscribeRuntimeVersion:{alias:["chain_subscribeRuntimeVersion","chain_unsubscribeRuntimeVersion"],description:"Retrieves the runtime version via subscription",params:[],pubsub:["runtimeVersion","subscribeRuntimeVersion","unsubscribeRuntimeVersion"],type:"RuntimeVersion"},subscribeStorage:{description:"Subscribes to storage changes for the provided keys",params:[{isOptional:!0,name:"keys",type:"Vec<StorageKey>"}],pubsub:["storage","subscribeStorage","unsubscribeStorage"],type:"StorageChangeSet"},traceBlock:{description:"Provides a way to trace the re-execution of a single block",isUnsafe:!0,params:[{name:"block",type:"Hash"},{name:"targets",type:"Option<Text>"},{name:"storageKeys",type:"Option<Text>"},{name:"methods",type:"Option<Text>"}],type:"TraceBlockResponse"},trieMigrationStatus:{description:"Check current migration state",isUnsafe:!0,params:[{isHistoric:!0,isOptional:!0,name:"at",type:"BlockHash"}],type:"MigrationStatusResult"}};

	var definitions = {rpc:rpc,types:{ApiId:"[u8; 8]",BlockTrace:{blockHash:"Text",parentHash:"Text",tracingTargets:"Text",storageKeys:"Text",spans:"Vec<BlockTraceSpan>",events:"Vec<BlockTraceEvent>"},BlockTraceEvent:{target:"Text",data:"BlockTraceEventData",parentId:"Option<u64>"},BlockTraceEventData:{stringValues:"HashMap<Text, Text>"},BlockTraceSpan:{id:"u64",parentId:"Option<u64>",name:"Text",target:"Text",wasm:"bool"},KeyValueOption:"(StorageKey, Option<StorageData>)",MigrationStatusResult:{topRemainingToMigrate:"u64",childRemainingToMigrate:"u64"},ReadProof:{at:"Hash",proof:"Vec<Bytes>"},RuntimeVersionApi:"(ApiId, u32)",RuntimeVersion:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32",stateVersion:"u8"},RuntimeVersionPre4:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>",transactionVersion:"u32"},RuntimeVersionPre3:{specName:"Text",implName:"Text",authoringVersion:"u32",specVersion:"u32",implVersion:"u32",apis:"Vec<RuntimeVersionApi>"},RuntimeVersionPartial:{specName:"Text",specVersion:"u32",apis:"Vec<RuntimeVersionApi>"},SpecVersion:"u32",StorageChangeSet:{block:"Hash",changes:"Vec<KeyValueOption>"},TraceBlockResponse:{_enum:{TraceError:"TraceError",BlockTrace:"BlockTrace"}},TraceError:{error:"Text"}}};

	var typeDefinitions = /*#__PURE__*/Object.freeze({
		__proto__: null,
		assets: definitions$11,
		attestations: definitions$l,
		aura: definitions$$,
		author: definitions$5,
		authorship: definitions$10,
		babe: definitions$_,
		balances: definitions$Z,
		beefy: definitions$Y,
		benchmark: definitions$X,
		blockbuilder: definitions$W,
		bridges: definitions$k,
		chain: definitions$4,
		childstate: definitions$3,
		claims: definitions$j,
		collective: definitions$V,
		consensus: definitions$U,
		contracts: definitions$T,
		contractsAbi: definitions$b,
		crowdloan: definitions$i,
		cumulus: definitions$h,
		democracy: definitions$S,
		dev: definitions$R,
		discovery: definitions$Q,
		elections: definitions$P,
		engine: definitions$O,
		eth: definitions$a,
		evm: definitions$N,
		extrinsics: definitions$M,
		finality: definitions$g,
		genericAsset: definitions$L,
		gilt: definitions$K,
		grandpa: definitions$J,
		identity: definitions$I,
		imOnline: definitions$H,
		lottery: definitions$G,
		metadata: definitions$14,
		mmr: definitions$F,
		nfts: definitions$E,
		nimbus: definitions$9,
		nompools: definitions$D,
		offchain: definitions$2,
		offences: definitions$C,
		ormlOracle: definitions$8,
		ormlTokens: definitions$7,
		parachains: definitions$f,
		payment: definitions$1,
		poll: definitions$e,
		pow: definitions$B,
		proxy: definitions$A,
		purchase: definitions$d,
		recovery: definitions$z,
		rpc: definitions$6,
		runtime: definitions$13,
		scaleInfo: definitions$12,
		scheduler: definitions$y,
		session: definitions$x,
		society: definitions$w,
		staking: definitions$v,
		state: definitions,
		support: definitions$u,
		syncstate: definitions$t,
		system: definitions$s,
		treasury: definitions$r,
		txpayment: definitions$q,
		txqueue: definitions$p,
		uniques: definitions$o,
		utility: definitions$n,
		vesting: definitions$m,
		xcm: definitions$c
	});

	const jsonrpc={};Object.keys(typeDefinitions).forEach((o=>Object.entries(typeDefinitions[o].rpc||{}).forEach((([s,c])=>{const e=c.aliasSection||o;jsonrpc[e]||(jsonrpc[e]={}),jsonrpc[e][s]=objectSpread({},c,{isSubscription:!!c.pubsub,jsonrpc:`${e}_${s}`,method:s,section:e});}))));var rpcDefinitions = jsonrpc;

	function lazyVariants(t,{type:a},e,o){const r={},n=t.getSiType(a).def.asVariant.variants;for(let t=0;t<n.length;t++)lazyMethod(r,n[t],o,e,t);return r}

	const emptyCheck={extrinsic:{},payload:{}};

	const polkadot$1={LimitParathreadCommits:emptyCheck,OnlyStakingAndClaims:emptyCheck,PrevalidateAttests:emptyCheck,RestrictFunctionality:emptyCheck,TransactionCallFilter:emptyCheck,ValidateDoubleVoteReports:emptyCheck};

	const shell$1={DisallowSigned:emptyCheck};

	const statemint$1={ChargeAssetTxPayment:{extrinsic:{tip:"Compact<Balance>",assetId:"Option<AssetId>"},payload:{}}};

	const CheckMortality={extrinsic:{era:"ExtrinsicEra"},payload:{blockHash:"Hash"}};const substrate$1={ChargeTransactionPayment:{extrinsic:{tip:"Compact<Balance>"},payload:{}},CheckBlockGasLimit:emptyCheck,CheckEra:CheckMortality,CheckGenesis:{extrinsic:{},payload:{genesisHash:"Hash"}},CheckMortality:CheckMortality,CheckNonZeroSender:emptyCheck,CheckNonce:{extrinsic:{nonce:"Compact<Index>"},payload:{}},CheckSpecVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckTxVersion:{extrinsic:{},payload:{transactionVersion:"u32"}},CheckVersion:{extrinsic:{},payload:{specVersion:"u32"}},CheckWeight:emptyCheck,LockStakingStatus:emptyCheck,ValidateEquivocationReport:emptyCheck};

	const allExtensions=objectSpread({},substrate$1,polkadot$1,shell$1,statemint$1);const fallbackExtensions=["CheckVersion","CheckGenesis","CheckEra","CheckNonce","CheckWeight","ChargeTransactionPayment","CheckBlockGasLimit"];function findUnknownExtensions(t,e={}){const o=[...Object.keys(allExtensions),...Object.keys(e)];return t.filter((t=>!o.includes(t)))}function expandExtensionTypes(t,e,o={}){return t.map((t=>o[t]||allExtensions[t])).filter((t=>!!t)).reduce(((t,o)=>objectSpread(t,o[e])),{})}

	var _GenericEventData_meta,_GenericEventData_method,_GenericEventData_names,_GenericEventData_section,_GenericEventData_typeDef;function decodeEvent(e,t){if(!t||!t.length)return {DataType:Null};const a=t.subarray(0,2);return {DataType:e.findMetaEvent(a),value:{data:t.subarray(2),index:a}}}class GenericEventData extends Tuple{constructor(e,t,a,n="<unknown>",i="<unknown>"){const s=a?.fields||[];super(e,s.map((({type:t})=>e.createLookupType(t))),t),_GenericEventData_meta.set(this,void 0),_GenericEventData_method.set(this,void 0),_GenericEventData_names.set(this,null),_GenericEventData_section.set(this,void 0),_GenericEventData_typeDef.set(this,void 0),__classPrivateFieldSet(this,_GenericEventData_meta,a,"f"),__classPrivateFieldSet(this,_GenericEventData_method,i,"f"),__classPrivateFieldSet(this,_GenericEventData_section,n,"f"),__classPrivateFieldSet(this,_GenericEventData_typeDef,s.map((({type:t})=>e.lookup.getTypeDef(t))),"f");const r=s.map((({name:t})=>e.lookup.sanitizeField(t)[0])).filter((e=>!!e));r.length===s.length&&(__classPrivateFieldSet(this,_GenericEventData_names,r,"f"),objectProperties(this,r,((e,t)=>this[t])));}get meta(){return __classPrivateFieldGet(this,_GenericEventData_meta,"f")}get method(){return __classPrivateFieldGet(this,_GenericEventData_method,"f")}get names(){return __classPrivateFieldGet(this,_GenericEventData_names,"f")}get section(){return __classPrivateFieldGet(this,_GenericEventData_section,"f")}get typeDef(){return __classPrivateFieldGet(this,_GenericEventData_typeDef,"f")}toHuman(e){if(null!==__classPrivateFieldGet(this,_GenericEventData_names,"f")){const t={};for(let a=0;a<__classPrivateFieldGet(this,_GenericEventData_names,"f").length;a++)t[__classPrivateFieldGet(this,_GenericEventData_names,"f")[a]]=this[a].toHuman(e);return t}return super.toHuman(e)}}_GenericEventData_meta=new WeakMap,_GenericEventData_method=new WeakMap,_GenericEventData_names=new WeakMap,_GenericEventData_section=new WeakMap,_GenericEventData_typeDef=new WeakMap;class GenericEvent extends Struct{constructor(e,t){const{DataType:a,value:n}=decodeEvent(e,t);super(e,{index:"EventId",data:a},n);}get data(){return this.getT("data")}get index(){return this.getT("index")}get meta(){return this.data.meta}get method(){return this.data.method}get section(){return this.data.section}get typeDef(){return this.data.typeDef}toHuman(e){return objectSpread({method:this.method,section:this.section},e?{docs:this.meta.docs.map((e=>e.toString()))}:null,super.toHuman(e))}}

	const EXTRINSIC_VERSION=4;class GenericExtrinsicV4 extends Struct{constructor(t,e,{isSigned:r}={}){super(t,{signature:"ExtrinsicSignatureV4",method:"Call"},GenericExtrinsicV4.decodeExtrinsic(t,e,r));}static decodeExtrinsic(t,e,r=!1){if(e instanceof GenericExtrinsicV4)return e;if(e instanceof t.createClassUnsafe("Call"))return {method:e};if(isU8a(e)){const i=t.createTypeUnsafe("ExtrinsicSignatureV4",[e,{isSigned:r}]);return {method:t.createTypeUnsafe("Call",[e.subarray(i.encodedLength)]),signature:i}}return e||{}}get encodedLength(){return this.toU8a().length}get method(){return this.getT("method")}get signature(){return this.getT("signature")}get version(){return 4}addSignature(t,e,r){return this.signature.addSignature(t,e,r),this}sign(t,e){return this.signature.sign(this.method,t,e),this}signFake(t,e){return this.signature.signFake(this.method,t,e),this}}

	const BIT_SIGNED=128;const BIT_UNSIGNED=0;const EMPTY_U8A=new Uint8Array;const DEFAULT_VERSION=4;const IMMORTAL_ERA=new Uint8Array([0]);const UNMASK_VERSION=127;

	var _GenericExtrinsic_hashCache;const VERSIONS$1=["ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicUnknown","ExtrinsicV4"];function newFromValue(e,t,n){if(t instanceof GenericExtrinsic)return t.unwrap();const r=(n&BIT_SIGNED)===BIT_SIGNED,i=VERSIONS$1[n&UNMASK_VERSION]||VERSIONS$1[0];return e.createTypeUnsafe(i,[t,{isSigned:r,version:n}])}function decodeExtrinsic(e,t,n=DEFAULT_VERSION){return isU8a(t)||Array.isArray(t)||isHex(t)?decodeU8a$4(e,u8aToU8a(t),n):t instanceof e.createClassUnsafe("Call")?newFromValue(e,{method:t},n):newFromValue(e,t,n)}function decodeU8a$4(e,t,n){if(!t.length)return newFromValue(e,new Uint8Array,n);const[r,i]=compactFromU8a(t),s=r+i.toNumber();if(s>t.length)throw new Error(`Extrinsic: length less than remainder, expected at least ${s}, found ${t.length}`);const a=t.subarray(r,s);return newFromValue(e,a.subarray(1),a[0])}class ExtrinsicBase extends AbstractBase{constructor(e,t,n){super(e,t,n);const r=Object.keys(e.getSignedExtensionTypes()),i=e=>this.inner.signature[e];for(let e=0;e<r.length;e++)objectProperty(this,r[e],i);}get args(){return this.method.args}get argsDef(){return this.method.argsDef}get callIndex(){return this.method.callIndex}get data(){return this.method.data}get era(){return this.inner.signature.era}get encodedLength(){return this.toU8a().length}get isSigned(){return this.inner.signature.isSigned}get length(){return this.toU8a(!0).length}get meta(){return this.method.meta}get method(){return this.inner.method}get nonce(){return this.inner.signature.nonce}get signature(){return this.inner.signature.signature}get signer(){return this.inner.signature.signer}get tip(){return this.inner.signature.tip}get type(){return this.inner.version}get inner(){return this.unwrap()}get version(){return this.type|(this.isSigned?BIT_SIGNED:BIT_UNSIGNED)}is(e){return this.method.is(e)}unwrap(){return super.unwrap()}}class GenericExtrinsic extends ExtrinsicBase{constructor(e,t,{version:n}={}){super(e,decodeExtrinsic(e,t,n)),_GenericExtrinsic_hashCache.set(this,void 0);}get hash(){return __classPrivateFieldGet(this,_GenericExtrinsic_hashCache,"f")||__classPrivateFieldSet(this,_GenericExtrinsic_hashCache,super.hash,"f"),__classPrivateFieldGet(this,_GenericExtrinsic_hashCache,"f")}addSignature(e,t,n){return this.inner.addSignature(e,t,n),__classPrivateFieldSet(this,_GenericExtrinsic_hashCache,void 0,"f"),this}inspect(){const e=u8aConcat(...this.toU8aInner());return {inner:this.isSigned?this.inner.inspect().inner:this.inner.method.inspect().inner,outer:[compactToU8a(e.length),new Uint8Array([this.version])]}}sign(e,t){return this.inner.sign(e,t),__classPrivateFieldSet(this,_GenericExtrinsic_hashCache,void 0,"f"),this}signFake(e,t){return this.inner.signFake(e,t),__classPrivateFieldSet(this,_GenericExtrinsic_hashCache,void 0,"f"),this}toHex(e){return u8aToHex(this.toU8a(e))}toHuman(e){return objectSpread({},{isSigned:this.isSigned,method:this.method.toHuman(e)},this.isSigned?{era:this.era.toHuman(e),nonce:this.nonce.toHuman(e),signature:this.signature.toHex(),signer:this.signer.toHuman(e),tip:this.tip.toHuman(e)}:null)}toJSON(){return this.toHex()}toRawType(){return "Extrinsic"}toU8a(e){const t=u8aConcat(...this.toU8aInner());return e?t:compactAddLength(t)}toU8aInner(){return [new Uint8Array([this.version]),this.inner.toU8a()]}}_GenericExtrinsic_hashCache=new WeakMap,GenericExtrinsic.LATEST_EXTRINSIC_VERSION=EXTRINSIC_VERSION;

	function getTrailingZeros(r){const t=r.toString(2);let e=0;for(;"0"===t[t.length-1-e];)e++;return e}function decodeMortalEra(r,t){if(isU8a(t)||isHex(t)||Array.isArray(t))return decodeMortalU8a(r,u8aToU8a(t));if(!t)return [new u64(r),new u64(r)];if(isObject(t))return decodeMortalObject(r,t);throw new Error("Invalid data passed to Mortal era")}function decodeMortalObject(r,t){const{current:e,period:a}=t;let o=Math.pow(2,Math.ceil(Math.log2(a)));o=Math.min(Math.max(o,4),65536);const n=e%o,i=Math.max(o>>12,1),s=n/i*i;return [new u64(r,o),new u64(r,s)]}function decodeMortalU8a(r,t){if(0===t.length)return [new u64(r),new u64(r)];const e=u8aToBn(t.subarray(0,1)).toNumber()+(u8aToBn(t.subarray(1,2)).toNumber()<<8),a=2<<e%16,o=(e>>4)*Math.max(a>>12,1);if(a<4||o>=a)throw new Error("Invalid data passed to Mortal era");return [new u64(r,a),new u64(r,o)]}function decodeExtrinsicEra(r=new Uint8Array){if(isU8a(r))return r.length&&0!==r[0]?new Uint8Array([1,r[0],r[1]]):new Uint8Array([0]);if(!r)return new Uint8Array([0]);if(r instanceof GenericExtrinsicEra)return decodeExtrinsicEra(r.toU8a());if(isHex(r))return decodeExtrinsicEra(hexToU8a(r));if(isObject(r)){const t=Object.entries(r).map((([r,t])=>[r.toLowerCase(),t])),e=t.find((([r])=>"mortalera"===r.toLowerCase())),a=t.find((([r])=>"immortalera"===r.toLowerCase()));return e?{MortalEra:e[1]}:a?{ImmortalEra:a[1]}:{MortalEra:r}}throw new Error("Invalid data passed to Era")}class ImmortalEra extends Raw{constructor(r,t){super(r,IMMORTAL_ERA);}}class MortalEra extends Tuple{constructor(r,t){super(r,{period:u64,phase:u64},decodeMortalEra(r,t));}get encodedLength(){return 2}get period(){return this[0]}get phase(){return this[1]}toHuman(){return {period:formatNumber(this.period),phase:formatNumber(this.phase)}}toJSON(){return this.toHex()}toU8a(r){const t=this.period.toNumber(),e=Math.min(15,Math.max(1,getTrailingZeros(t)-1))+(this.phase.toNumber()/Math.max(t>>12,1)<<4);return new Uint8Array([255&e,e>>8])}birth(r){const t=this.phase.toNumber(),e=this.period.toNumber();return ~~((Math.max(bnToBn(r).toNumber(),t)-t)/e)*e+t}death(r){return this.birth(r)+this.period.toNumber()}}class GenericExtrinsicEra extends Enum{constructor(r,t){super(r,{ImmortalEra:ImmortalEra,MortalEra:MortalEra},decodeExtrinsicEra(t));}get encodedLength(){return this.isImmortalEra?this.asImmortalEra.encodedLength:this.asMortalEra.encodedLength}get asImmortalEra(){if(!this.isImmortalEra)throw new Error(`Cannot convert '${this.type}' via asImmortalEra`);return this.inner}get asMortalEra(){if(!this.isMortalEra)throw new Error(`Cannot convert '${this.type}' via asMortalEra`);return this.inner}get isImmortalEra(){return 0===this.index}get isMortalEra(){return this.index>0}toU8a(r){return this.isMortalEra?this.asMortalEra.toU8a(r):this.asImmortalEra.toU8a(r)}}

	const VERSIONS=["ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadUnknown","ExtrinsicPayloadV4"];function decodeExtrinsicPayload(e,t,n=DEFAULT_VERSION){return t instanceof GenericExtrinsicPayload?t.unwrap():e.createTypeUnsafe(VERSIONS[n]||VERSIONS[0],[t,{version:n}])}class GenericExtrinsicPayload extends AbstractBase{constructor(e,t,{version:n}={}){super(e,decodeExtrinsicPayload(e,t,n));}get blockHash(){return this.inner.blockHash}get era(){return this.inner.era}get genesisHash(){return this.inner.genesisHash||this.registry.createTypeUnsafe("Hash",[])}get method(){return this.inner.method}get nonce(){return this.inner.nonce}get specVersion(){return this.inner.specVersion||this.registry.createTypeUnsafe("u32",[])}get tip(){return this.inner.tip||this.registry.createTypeUnsafe("Compact<Balance>",[])}get transactionVersion(){return this.inner.transactionVersion||this.registry.createTypeUnsafe("u32",[])}eq(e){return this.inner.eq(e)}sign(e){const t=this.inner.sign(e);return {signature:u8aToHex(t)}}toHuman(e){return this.inner.toHuman(e)}toJSON(){return this.toHex()}toRawType(){return "ExtrinsicPayload"}toString(){return this.toHex()}toU8a(e){return super.toU8a(!!e&&{method:!0})}}

	class GenericExtrinsicPayloadUnknown extends Struct{constructor(r,o,{version:t=0}={}){throw super(r,{}),new Error(`Unsupported extrinsic payload version ${t}`)}}

	class GenericExtrinsicUnknown extends Struct{constructor(r,t,{isSigned:n=!1,version:o=0}={}){throw super(r,{}),new Error(`Unsupported ${n?"":"un"}signed extrinsic version ${o&UNMASK_VERSION}`)}}

	var _GenericSignerPayload_extraTypes;const knownTypes={address:"Address",blockHash:"Hash",blockNumber:"BlockNumber",era:"ExtrinsicEra",genesisHash:"Hash",method:"Call",nonce:"Compact<Index>",runtimeVersion:"RuntimeVersion",signedExtensions:"Vec<Text>",tip:"Compact<Balance>",version:"u8"};class GenericSignerPayload extends Struct{constructor(e,t){const s=objectSpread({},e.getSignedExtensionTypes(),e.getSignedExtensionExtra());super(e,objectSpread({},s,knownTypes),t),_GenericSignerPayload_extraTypes.set(this,void 0),__classPrivateFieldSet(this,_GenericSignerPayload_extraTypes,{},"f");const r=e=>this.get(e);for(const[e,t]of Object.entries(s))knownTypes[e]||(__classPrivateFieldGet(this,_GenericSignerPayload_extraTypes,"f")[e]=t),objectProperty(this,e,r);}get address(){return this.getT("address")}get blockHash(){return this.getT("blockHash")}get blockNumber(){return this.getT("blockNumber")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get runtimeVersion(){return this.getT("runtimeVersion")}get signedExtensions(){return this.getT("signedExtensions")}get tip(){return this.getT("tip")}get version(){return this.getT("version")}toPayload(){const e={},t=Object.keys(__classPrivateFieldGet(this,_GenericSignerPayload_extraTypes,"f"));for(let s=0;s<t.length;s++){const r=t[s],i=this.get(r);i instanceof Option&&!i.isSome||(e[r]=i.toHex());}return objectSpread(e,{address:this.address.toString(),blockHash:this.blockHash.toHex(),blockNumber:this.blockNumber.toHex(),era:this.era.toHex(),genesisHash:this.genesisHash.toHex(),method:this.method.toHex(),nonce:this.nonce.toHex(),signedExtensions:this.signedExtensions.map((e=>e.toString())),specVersion:this.runtimeVersion.specVersion.toHex(),tip:this.tip.toHex(),transactionVersion:this.runtimeVersion.transactionVersion.toHex(),version:this.version.toNumber()})}toRaw(){const e=this.toPayload(),t=u8aToHex(this.registry.createTypeUnsafe("ExtrinsicPayload",[e,{version:e.version}]).toU8a({method:!0}));return {address:e.address,data:t,type:"payload"}}}_GenericSignerPayload_extraTypes=new WeakMap;

	function sign(n,t,s,e){const g=s.length>256?n.hash(s):s;return t.sign(g,e)}

	var _GenericExtrinsicPayloadV4_signOptions;class GenericExtrinsicPayloadV4 extends Struct{constructor(t,e){super(t,objectSpread({method:"Bytes"},t.getSignedExtensionTypes(),t.getSignedExtensionExtra()),e),_GenericExtrinsicPayloadV4_signOptions.set(this,void 0),__classPrivateFieldSet(this,_GenericExtrinsicPayloadV4_signOptions,{withType:t.createTypeUnsafe("ExtrinsicSignature",[])instanceof Enum},"f");}inspect(){return super.inspect({method:!0})}get blockHash(){return this.getT("blockHash")}get era(){return this.getT("era")}get genesisHash(){return this.getT("genesisHash")}get method(){return this.getT("method")}get nonce(){return this.getT("nonce")}get specVersion(){return this.getT("specVersion")}get tip(){return this.getT("tip")}get transactionVersion(){return this.getT("transactionVersion")}get assetId(){return this.getT("assetId")}sign(t){return sign(this.registry,t,this.toU8a({method:!0}),__classPrivateFieldGet(this,_GenericExtrinsicPayloadV4_signOptions,"f"))}}_GenericExtrinsicPayloadV4_signOptions=new WeakMap;

	var _GenericExtrinsicSignatureV4_signKeys;const FAKE_SIGNATURE=new Uint8Array(256).fill(1);function toAddress(e,t){return e.createTypeUnsafe("Address",[isU8a(t)?u8aToHex(t):t])}class GenericExtrinsicSignatureV4 extends Struct{constructor(e,t,{isSigned:i}={}){const r=e.getSignedExtensionTypes();super(e,objectSpread({signer:"Address",signature:"ExtrinsicSignature"},r),GenericExtrinsicSignatureV4.decodeExtrinsicSignature(t,i)),_GenericExtrinsicSignatureV4_signKeys.set(this,void 0),__classPrivateFieldSet(this,_GenericExtrinsicSignatureV4_signKeys,Object.keys(r),"f"),objectProperties(this,__classPrivateFieldGet(this,_GenericExtrinsicSignatureV4_signKeys,"f"),(e=>this.get(e)));}static decodeExtrinsicSignature(e,t=!1){return e&&(e instanceof GenericExtrinsicSignatureV4||t)?e:EMPTY_U8A}get encodedLength(){return this.isSigned?super.encodedLength:0}get isSigned(){return !this.signature.isEmpty}get era(){return this.getT("era")}get nonce(){return this.getT("nonce")}get signature(){return this.multiSignature.value||this.multiSignature}get multiSignature(){return this.getT("signature")}get signer(){return this.getT("signer")}get tip(){return this.getT("tip")}_injectSignature(e,t,i){for(let e=0;e<__classPrivateFieldGet(this,_GenericExtrinsicSignatureV4_signKeys,"f").length;e++){const t=__classPrivateFieldGet(this,_GenericExtrinsicSignatureV4_signKeys,"f")[e],r=i.get(t);isUndefined(r)||this.set(t,r);}return this.set("signer",e),this.set("signature",t),this}addSignature(e,t,i){return this._injectSignature(toAddress(this.registry,e),this.registry.createTypeUnsafe("ExtrinsicSignature",[t]),new GenericExtrinsicPayloadV4(this.registry,i))}createPayload(e,t){const{era:i,runtimeVersion:{specVersion:r,transactionVersion:s}}=t;return new GenericExtrinsicPayloadV4(this.registry,objectSpread({},t,{era:i||IMMORTAL_ERA,method:e.toHex(),specVersion:r,transactionVersion:s}))}sign(e,t,i){if(!t||!t.addressRaw)throw new Error(`Expected a valid keypair for signing, found ${stringify(t)}`);const r=this.createPayload(e,i);return this._injectSignature(toAddress(this.registry,t.addressRaw),this.registry.createTypeUnsafe("ExtrinsicSignature",[r.sign(t)]),r)}signFake(e,t,i){if(!t)throw new Error(`Expected a valid address for signing, found ${stringify(t)}`);const r=this.createPayload(e,i);return this._injectSignature(toAddress(this.registry,t),this.registry.createTypeUnsafe("ExtrinsicSignature",[FAKE_SIGNATURE]),r)}toU8a(e){return this.isSigned?super.toU8a(e):EMPTY_U8A}}_GenericExtrinsicSignatureV4_signKeys=new WeakMap;

	function decodeAccountId$1(t){return isU8a(t)||Array.isArray(t)?u8aToU8a(t):isHex(t)||isEthereumAddress(t.toString())?hexToU8a(t.toString()):isString(t)?u8aToU8a(t):t}class GenericEthereumAccountId extends U8aFixed{constructor(t,e=new Uint8Array){super(t,decodeAccountId$1(e),160);}eq(t){return super.eq(decodeAccountId$1(t))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){return ethereumEncode(this)}toRawType(){return "AccountId"}}

	const MAX_1BYTE=new BN(239),MAX_2BYTE=new BN(1).shln(16),MAX_4BYTE=new BN(1).shln(32);function decodeAccountIndex(e){return e instanceof GenericAccountIndex?e.toBn():isBn(e)||isNumber(e)||isHex(e)||isU8a(e)||isBigInt(e)?e:decodeAccountIndex(decodeAddress(e))}class GenericAccountIndex extends u32{constructor(e,t=new BN(0)){super(e,decodeAccountIndex(t));}static calcLength(e){const t=bnToBn(e);return t.lte(MAX_1BYTE)?1:t.lt(MAX_2BYTE)?2:t.lt(MAX_4BYTE)?4:8}static readLength(e){const t=e[0];return 252===t?[1,2]:253===t?[1,4]:254===t?[1,8]:[0,1]}static writeLength(e){switch(e.length){case 2:return new Uint8Array([252]);case 4:return new Uint8Array([253]);case 8:return new Uint8Array([254]);default:return new Uint8Array([])}}eq(e){return isBn(e)||isNumber(e)?super.eq(e):super.eq(this.registry.createTypeUnsafe("AccountIndex",[e]))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){const e=GenericAccountIndex.calcLength(this);return encodeAddress(this.toU8a().subarray(0,e),this.registry.chainSS58)}toRawType(){return "AccountIndex"}}

	const ACCOUNT_ID_PREFIX$1=new Uint8Array([255]);function decodeString$1(e,n){const t=decodeAddress(n);return 20===t.length?e.createTypeUnsafe("EthereumAccountId",[t]):e.createTypeUnsafe("AccountIndex",[u8aToBn(t)])}function decodeU8a$3(e,n){if(20===n.length)return e.createTypeUnsafe("EthereumAccountId",[n]);if(255===n[0])return e.createTypeUnsafe("EthereumAccountId",[n.subarray(1)]);const[t,r]=GenericAccountIndex.readLength(n);return e.createTypeUnsafe("AccountIndex",[u8aToBn(n.subarray(t,t+r))])}function decodeAddressOrIndex$1(e,n){return n instanceof GenericEthereumLookupSource?n.inner:n instanceof GenericEthereumAccountId||n instanceof GenericAccountIndex?n:isU8a(n)||Array.isArray(n)||isHex(n)?decodeU8a$3(e,u8aToU8a(n)):isBn(n)||isNumber(n)||isBigInt(n)?e.createTypeUnsafe("AccountIndex",[n]):decodeString$1(e,n)}class GenericEthereumLookupSource extends AbstractBase{constructor(e,n=new Uint8Array){super(e,decodeAddressOrIndex$1(e,n));}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this.inner instanceof GenericAccountIndex?GenericAccountIndex.calcLength(this.inner):this.inner.encodedLength}toHex(){return u8aToHex(this.toU8a())}toRawType(){return "Address"}toU8a(e){const n=this.inner.toU8a().subarray(0,this._rawLength);return e?n:u8aConcat(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(n):ACCOUNT_ID_PREFIX$1,n)}}

	function decodeAccountId(t){if(isU8a(t)||Array.isArray(t))return u8aToU8a(t);if(!t)return new Uint8Array;if(isHex(t))return hexToU8a(t);if(isString(t))return decodeAddress(t.toString());throw new Error("Unknown type passed to AccountId constructor, found typeof "+typeof t)}class BaseAccountId extends U8aFixed{constructor(t,e=264,r){const o=decodeAccountId(r);if(8*o.length<e&&o.some((t=>t)))throw new Error(`Invalid AccountId provided, expected ${e>>3} bytes, found ${o.length}`);super(t,o,e);}eq(t){return super.eq(decodeAccountId(t))}toHuman(){return this.toJSON()}toJSON(){return this.toString()}toPrimitive(){return this.toJSON()}toString(){return encodeAddress(this,this.registry.chainSS58)}toRawType(){return "AccountId"}}class GenericAccountId extends BaseAccountId{constructor(t,e){super(t,256,e);}}class GenericAccountId33 extends BaseAccountId{constructor(t,e){super(t,264,e);}}

	class GenericBlock extends Struct{constructor(e,t){super(e,{header:"Header",extrinsics:"Vec<Extrinsic>"},t);}get contentHash(){return this.registry.hash(this.toU8a())}get extrinsics(){return this.getT("extrinsics")}get hash(){return this.header.hash}get header(){return this.getT("header")}}

	function getArgsDef(e,t){return t.fields.reduce(((t,{name:a,type:r},n)=>(t[a.unwrapOr(`param${n}`).toString()]=e.createLookupType(r),t)),{})}function decodeCallViaObject(e,t,a){const{args:r,callIndex:n}=t,s=n instanceof GenericCallIndex?n.toU8a():n,l=a||e.findMetaCall(s).meta;return {args:r,argsDef:getArgsDef(e,l),callIndex:n,meta:l}}function decodeCallViaU8a(e,t,a){const r=e.firstCallIndex.slice();r.set(t.subarray(0,2),0);const n=a||e.findMetaCall(r).meta;return {args:t.subarray(2),argsDef:getArgsDef(e,n),callIndex:r,meta:n}}function decodeCall(e,t=new Uint8Array,a){if(isU8a(t)||isHex(t))return decodeCallViaU8a(e,u8aToU8a(t),a);if(isObject(t)&&t.callIndex&&t.args)return decodeCallViaObject(e,t,a);throw new Error(`Call: Cannot decode value '${t}' of type ${typeof t}`)}class GenericCallIndex extends U8aFixed{constructor(e,t){super(e,t,16);}toPrimitive(){return this.toHex()}}class GenericCall extends Struct{constructor(e,t,a){const r=decodeCall(e,t,a);try{super(e,{callIndex:GenericCallIndex,args:Struct.with(r.argsDef)},r);}catch(t){let a="unknown.unknown";try{const t=e.findMetaCall(r.callIndex);a=`${t.section}.${t.method}`;}catch(e){}throw new Error(`Call: failed decoding ${a}:: ${t.message}`)}this._meta=r.meta;}get args(){return [...this.getT("args").values()]}get argsDef(){return getArgsDef(this.registry,this.meta)}get argsEntries(){return [...this.getT("args").entries()]}get callIndex(){return this.getT("callIndex").toU8a()}get data(){return this.getT("args").toU8a()}get meta(){return this._meta}get method(){return this.registry.findMetaCall(this.callIndex).method}get section(){return this.registry.findMetaCall(this.callIndex).section}is(e){return e.callIndex[0]===this.callIndex[0]&&e.callIndex[1]===this.callIndex[1]}toHuman(e){let t;try{t=this.registry.findMetaCall(this.callIndex);}catch(e){}return objectSpread({args:this.argsEntries.reduce(((t,[a,r])=>objectSpread(t,{[a]:r.toHuman(e)})),{}),method:t?.method,section:t?.section},e&&t?{docs:t.meta.docs.map((e=>e.toString()))}:null)}toRawType(){return "Call"}}

	function createValue(e,t,n,o=!0){return n&&isFunction$1(n.unwrapOrDefault)?n:e.createTypeUnsafe(t,[o?isNull(n)||isUndefined(n)?null:Array.isArray(n)?n:[n]:n])}function decodeValue(e,t,n){return "ss58Format"===t?createValue(e,"Option<u32>",n,!1):"tokenDecimals"===t?createValue(e,"Option<Vec<u32>>",n):"tokenSymbol"===t?createValue(e,"Option<Vec<Text>>",n):n}function decode(e,t){return (t&&isFunction$1(t.entries)?[...t.entries()]:Object.entries(t||{})).reduce(((t,[n,o])=>(t[n]=decodeValue(e,n,o),t)),{ss58Format:e.createTypeUnsafe("Option<u32>",[]),tokenDecimals:e.createTypeUnsafe("Option<Vec<u32>>",[]),tokenSymbol:e.createTypeUnsafe("Option<Vec<Text>>",[])})}class GenericChainProperties extends Json{constructor(e,t){super(e,decode(e,t));}get ss58Format(){return this.getT("ss58Format")}get tokenDecimals(){return this.getT("tokenDecimals")}get tokenSymbol(){return this.getT("tokenSymbol")}}

	const CID_AURA=stringToU8a("aura");const CID_BABE=stringToU8a("BABE");const CID_GRPA=stringToU8a("FRNK");const CID_POW=stringToU8a("pow_");function getAuraAuthor(t,e,r){return r[t.createTypeUnsafe("RawAuraPreDigest",[e.toU8a(!0)]).slotNumber.mod(new BN(r.length)).toNumber()]}function getBabeAuthor(t,e,r){return r[t.createTypeUnsafe("RawBabePreDigestCompat",[e.toU8a(!0)]).value.toNumber()]}function getBytesAsAuthor(t,e){return t.createTypeUnsafe("AccountId",[e])}class GenericConsensusEngineId extends U8aFixed{constructor(t,e){super(t,isNumber(e)?bnToU8a(e,{isLe:!1}):e,32);}get isAura(){return this.eq(CID_AURA)}get isBabe(){return this.eq(CID_BABE)}get isGrandpa(){return this.eq(CID_GRPA)}get isPow(){return this.eq(CID_POW)}extractAuthor(t,e){if(e?.length){if(this.isAura)return getAuraAuthor(this.registry,t,e);if(this.isBabe)return getBabeAuthor(this.registry,t,e)}if(this.isPow||20===t.length)return getBytesAsAuthor(this.registry,t)}toHuman(){return this.toString()}toRawType(){return "ConsensusEngineId"}toString(){return this.isAscii?u8aToString(this):u8aToHex(this)}}

	const ACCOUNT_ID_PREFIX=new Uint8Array([255]);function decodeString(e,n){const t=decodeAddress(n);return 32===t.length?e.createTypeUnsafe("AccountId",[t]):e.createTypeUnsafe("AccountIndex",[u8aToBn(t)])}function decodeU8a$2(e,n){if(32===n.length)return e.createTypeUnsafe("AccountId",[n]);if(255===n[0])return e.createTypeUnsafe("AccountId",[n.subarray(1)]);const[t,r]=GenericAccountIndex.readLength(n);return e.createTypeUnsafe("AccountIndex",[u8aToBn(n.subarray(t,t+r))])}function decodeAddressOrIndex(e,n){return n instanceof GenericLookupSource?n.inner:n instanceof GenericAccountId||n instanceof GenericAccountIndex?n:isBn(n)||isNumber(n)||isBigInt(n)?e.createTypeUnsafe("AccountIndex",[n]):Array.isArray(n)||isHex(n)||isU8a(n)?decodeU8a$2(e,u8aToU8a(n)):decodeString(e,n)}class GenericLookupSource extends AbstractBase{constructor(e,n=new Uint8Array){super(e,decodeAddressOrIndex(e,n));}get encodedLength(){const e=this._rawLength;return e+(e>1?1:0)}get _rawLength(){return this.inner instanceof GenericAccountIndex?GenericAccountIndex.calcLength(this.inner):this.inner.encodedLength}inspect(){const e=this.inner.toU8a().subarray(0,this._rawLength);return {outer:[new Uint8Array(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(e):ACCOUNT_ID_PREFIX),e]}}toHex(){return u8aToHex(this.toU8a())}toRawType(){return "Address"}toU8a(e){const n=this.inner.toU8a().subarray(0,this._rawLength);return e?n:u8aConcat(this.inner instanceof GenericAccountIndex?GenericAccountIndex.writeLength(n):ACCOUNT_ID_PREFIX,n)}}

	function decodeU8a$1(e,n){return [0,32].includes(n.length)?{Id:n}:20===n.length?{Address20:n}:n.length<=8?{Index:e.createTypeUnsafe("AccountIndex",[n]).toNumber()}:n}function decodeMultiAny(e,n){return n instanceof GenericAccountId?{Id:n}:isU8a(n)?decodeU8a$1(e,n):n instanceof GenericMultiAddress?n:n instanceof GenericAccountIndex||isBn(n)||isNumber(n)?{Index:isNumber(n)?n:n.toNumber()}:isString(n)?decodeU8a$1(e,decodeAddress(n.toString())):n}class GenericMultiAddress extends Enum{constructor(e,n){super(e,{Id:"AccountId",Index:"Compact<AccountIndex>",Raw:"Bytes",Address32:"H256",Address20:"H160"},decodeMultiAny(e,n));}inspect(){const{inner:e,outer:n=[]}=this.inner.inspect();return {inner:e,outer:[new Uint8Array([this.index]),...n]}}toString(){return this.value.toString()}}

	var _GenericVote_aye,_GenericVote_conviction;const AYE_BITS=128,NAY_BITS=0,DEF_CONV=0;function decodeVoteBool(e){return e?new Uint8Array([AYE_BITS|DEF_CONV]):new Uint8Array([NAY_BITS])}function decodeVoteU8a(e){return e.length?e.subarray(0,1):new Uint8Array([NAY_BITS])}function decodeVoteType(e,t){return new Uint8Array([(new bool(e,t.aye).isTrue?AYE_BITS:NAY_BITS)|e.createTypeUnsafe("Conviction",[t.conviction||DEF_CONV]).index])}function decodeVote(e,t){return isU8a(t)?decodeVoteU8a(t):isUndefined(t)||t instanceof Boolean||isBoolean(t)?decodeVoteBool(new bool(e,t).isTrue):isNumber(t)?decodeVoteBool(t<0):decodeVoteType(e,t)}class GenericVote extends U8aFixed{constructor(e,t){const i=decodeVote(e,t);super(e,i,8),_GenericVote_aye.set(this,void 0),_GenericVote_conviction.set(this,void 0),__classPrivateFieldSet(this,_GenericVote_aye,(i[0]&AYE_BITS)===AYE_BITS,"f"),__classPrivateFieldSet(this,_GenericVote_conviction,this.registry.createTypeUnsafe("Conviction",[127&i[0]]),"f");}get conviction(){return __classPrivateFieldGet(this,_GenericVote_conviction,"f")}get isAye(){return __classPrivateFieldGet(this,_GenericVote_aye,"f")}get isNay(){return !this.isAye}toHuman(e){return {conviction:this.conviction.toHuman(e),vote:this.isAye?"Aye":"Nay"}}toPrimitive(){return {aye:this.isAye,conviction:this.conviction.toPrimitive()}}toRawType(){return "Vote"}}_GenericVote_aye=new WeakMap,_GenericVote_conviction=new WeakMap;

	function decodeDataU8a(e,t){const a=t[0];if(!a)return [void 0,void 0];if(a>=1&&a<=33){const r=a-1,i=t.subarray(1,r+1);return [e.createTypeUnsafe("Raw",[i]),1]}if(a>=34&&a<=37)return [t.subarray(1,33),a-32];throw new Error(`Unable to decode Data, invalid indicator byte ${a}`)}function decodeData(e,t){return isU8a(t)||isString(t)?decodeDataU8a(e,u8aToU8a(t)):t?[t,void 0]:[void 0,void 0]}class Data extends Enum{constructor(e,t){if(super(e,{None:"Null",Raw:"Bytes",BlakeTwo256:"H256",Sha256:"H256",Keccak256:"H256",ShaThree256:"H256"},...decodeData(e,t)),this.isRaw&&this.asRaw.length>32)throw new Error("Data.Raw values are limited to a maximum length of 32 bytes")}get asBlakeTwo256(){return this.value}get asKeccak256(){return this.value}get asRaw(){return this.value}get asSha256(){return this.value}get asShaThree256(){return this.value}get isBlakeTwo256(){return 2===this.index}get isKeccak256(){return 4===this.index}get isNone(){return 0===this.index}get isRaw(){return 1===this.index}get isSha256(){return 3===this.index}get isShaThree256(){return 5===this.index}get encodedLength(){return this.toU8a().length}toU8a(){if(0===this.index)return new Uint8Array(1);if(1===this.index){const e=this.value.toU8a(!0),t=Math.min(e.length,32),a=new Uint8Array(t+1);return a.set([t+1],0),a.set(e.subarray(0,t),1),a}const e=new Uint8Array(33);return e.set([this.index+32],0),e.set(this.value.toU8a(),1),e}}

	function flattenUniq(t,n=[]){for(let e=0;e<t.length;e++){const r=t[e];Array.isArray(r)?flattenUniq(r,n):n.push(r);}return [...new Set(n)]}

	function getSiName(e,t){const o=e.getTypeDef(t);return o.lookupName||o.type}

	function extractSubSingle(e,{sub:n}){const{lookupName:t,type:r}=n;return extractTypes$1([t||r])}function extractSubArray(e,{sub:n}){return extractTypes$1(n.map((({lookupName:e,type:n})=>e||n)))}function unhandled(e,{info:n}){throw new Error(`Unhandled: Unable to create and validate type from ${e} (info=${TypeDefInfo[n]})`)}const mapping={[TypeDefInfo.BTreeMap]:extractSubArray,[TypeDefInfo.BTreeSet]:extractSubSingle,[TypeDefInfo.Compact]:extractSubSingle,[TypeDefInfo.DoNotConstruct]:unhandled,[TypeDefInfo.Enum]:extractSubArray,[TypeDefInfo.HashMap]:extractSubArray,[TypeDefInfo.Int]:unhandled,[TypeDefInfo.Linkage]:extractSubSingle,[TypeDefInfo.Null]:unhandled,[TypeDefInfo.Option]:extractSubSingle,[TypeDefInfo.Plain]:(e,n)=>n.lookupName||n.type,[TypeDefInfo.Range]:extractSubSingle,[TypeDefInfo.RangeInclusive]:extractSubSingle,[TypeDefInfo.Result]:extractSubArray,[TypeDefInfo.Set]:extractSubArray,[TypeDefInfo.Si]:unhandled,[TypeDefInfo.Struct]:extractSubArray,[TypeDefInfo.Tuple]:extractSubArray,[TypeDefInfo.UInt]:unhandled,[TypeDefInfo.Vec]:extractSubSingle,[TypeDefInfo.VecFixed]:extractSubSingle,[TypeDefInfo.WrapperKeepOpaque]:extractSubSingle,[TypeDefInfo.WrapperOpaque]:extractSubSingle};function extractTypes$1(e){const n=e.length,t=new Array(n);for(let r=0;r<n;r++){const n=e[r],a=getTypeDef(n);t[r]=mapping[a.info](n,a);}return t}

	const l$7=logger("metadata");function validateTypes(t,o,e){const r=flattenUniq(extractTypes$1(e)).filter((o=>!t.hasType(o)&&!t.isLookupType(o))).sort();if(0!==r.length){const t=`Unknown types found, no types for ${r.join(", ")}`;if(o)throw new Error(t);l$7.warn(t);}return e}

	function extractTypes(e,t){return t.map((({type:t})=>e.getTypeDef(t).type))}function extractFieldTypes(e,t){return e.getSiType(t).def.asVariant.variants.map((({fields:t})=>extractTypes(e,t)))}function getPalletNames({lookup:e,pallets:t}){return t.reduce(((t,{calls:p,constants:a,events:s,storage:n})=>(t.push([extractTypes(e,a)]),p.isSome&&t.push(extractFieldTypes(e,p.unwrap().type)),s.isSome&&t.push(extractFieldTypes(e,s.unwrap().type)),n.isSome&&t.push(n.unwrap().items.map((({type:t})=>{if(t.isPlain)return [e.getTypeDef(t.asPlain).type];const{hashers:p,key:a,value:s}=t.asMap;return 1===p.length?[e.getTypeDef(s).type,e.getTypeDef(a).type]:[e.getTypeDef(s).type,...e.getSiType(a).def.asTuple.map((t=>e.getTypeDef(t).type))]}))),t)),[])}function getUniqTypes(e,t,p){return validateTypes(e,p,flattenUniq(getPalletNames(t)))}

	function trimDocs(e){const t=e.map((e=>e.toString().trim())),a=t.findIndex((e=>!e.length));return -1===a?t:t.slice(0,a)}function toCallsOnly(e,{extrinsic:t,lookup:a,pallets:l}){return e.createTypeUnsafe("MetadataLatest",[{extrinsic:t,lookup:{types:a.types.map((({id:t,type:a})=>e.createTypeUnsafe("PortableType",[{id:t,type:objectSpread({},a,{docs:trimDocs(a.docs)})}])))},pallets:l.map((({calls:t,index:a,name:l})=>({calls:e.createTypeUnsafe("Option<PalletCallMetadataLatest>",[t.unwrapOr(null)]),index:a,name:l})))}]).toJSON()}

	var _StorageKey_args,_StorageKey_meta,_StorageKey_outputType,_StorageKey_method,_StorageKey_section;const HASHER_MAP={Blake2_128:[16,!1],Blake2_128Concat:[16,!0],Blake2_256:[32,!1],Identity:[0,!0],Twox128:[16,!1],Twox256:[32,!1],Twox64Concat:[8,!0]};function unwrapStorageSi(e){return e.isPlain?e.asPlain:e.asMap.value}function unwrapStorageType(e,t,r){const a=getSiName(e.lookup,unwrapStorageSi(t));return r?`Option<${a}>`:a}function decodeStorageKey(e){if(isU8a(e)||!e||isString(e))return {key:e};if(e instanceof StorageKey)return {key:e,method:e.method,section:e.section};if(isFunction$1(e))return {key:e(),method:e.method,section:e.section};if(Array.isArray(e)){const[t,r=[]]=e;if(!isFunction$1(t))throw new Error("Expected function input for key construction");if(t.meta&&t.meta.type.isMap){const e=t.meta.type.asMap;if(!Array.isArray(r)||r.length!==e.hashers.length)throw new Error(`Expected an array of ${e.hashers.length} values as params to a Map query`)}return {key:t(...r),method:t.method,section:t.section}}throw new Error(`Unable to convert input ${e} to StorageKey`)}function decodeHashers(e,t,r){let a=32;const o=new Array(r.length);for(let s=0;s<r.length;s++){const[i,n]=r[s],[_,y]=HASHER_MAP[i.type],c=y?e.createTypeUnsafe(getSiName(e.lookup,n),[t.subarray(a+_)]):e.createTypeUnsafe("Raw",[t.subarray(a,a+_)]);a+=_+(y?c.encodedLength:0),o[s]=c;}return o}function decodeArgsFromMeta(e,t,r){if(!r||!r.type.isMap)return [];const{hashers:a,key:o}=r.type.asMap,s=1===a.length?[o]:e.lookup.getSiType(o).def.asTuple;return decodeHashers(e,t,a.map(((e,t)=>[e,s[t]])))}function getMeta(e){if(e instanceof StorageKey)return e.meta;if(isFunction$1(e))return e.meta;if(Array.isArray(e)){const[t]=e;return t.meta}}function getType(e,t){if(t instanceof StorageKey)return t.outputType;if(isFunction$1(t))return unwrapStorageType(e,t.meta.type);if(Array.isArray(t)){const[r]=t;if(r.meta)return unwrapStorageType(e,r.meta.type)}return "Raw"}class StorageKey extends Bytes{constructor(e,t,r={}){const{key:a,method:o,section:s}=decodeStorageKey(t);super(e,a),_StorageKey_args.set(this,void 0),_StorageKey_meta.set(this,void 0),_StorageKey_outputType.set(this,void 0),_StorageKey_method.set(this,void 0),_StorageKey_section.set(this,void 0),__classPrivateFieldSet(this,_StorageKey_outputType,getType(e,t),"f"),this.setMeta(getMeta(t),r.section||s,r.method||o);}get args(){return __classPrivateFieldGet(this,_StorageKey_args,"f")}get meta(){return __classPrivateFieldGet(this,_StorageKey_meta,"f")}get method(){return __classPrivateFieldGet(this,_StorageKey_method,"f")}get outputType(){return __classPrivateFieldGet(this,_StorageKey_outputType,"f")}get section(){return __classPrivateFieldGet(this,_StorageKey_section,"f")}is(e){return e.section===this.section&&e.method===this.method}setMeta(e,t,r){__classPrivateFieldSet(this,_StorageKey_meta,e,"f"),__classPrivateFieldSet(this,_StorageKey_method,r||__classPrivateFieldGet(this,_StorageKey_method,"f"),"f"),__classPrivateFieldSet(this,_StorageKey_section,t||__classPrivateFieldGet(this,_StorageKey_section,"f"),"f"),e&&__classPrivateFieldSet(this,_StorageKey_outputType,unwrapStorageType(this.registry,e.type),"f");try{__classPrivateFieldSet(this,_StorageKey_args,decodeArgsFromMeta(this.registry,this.toU8a(!0),e),"f");}catch(e){}return this}toHuman(){return __classPrivateFieldGet(this,_StorageKey_args,"f").length?__classPrivateFieldGet(this,_StorageKey_args,"f").map((e=>e.toHuman())):super.toHuman()}toRawType(){return "StorageKey"}}_StorageKey_args=new WeakMap,_StorageKey_meta=new WeakMap,_StorageKey_outputType=new WeakMap,_StorageKey_method=new WeakMap,_StorageKey_section=new WeakMap;

	var baseTypes = /*#__PURE__*/Object.freeze({
		__proto__: null,
		BitVec: BitVec,
		Bool: bool,
		Bytes: Bytes,
		Data: Data,
		F32: f32,
		F64: f64,
		GenericAccountId: GenericAccountId,
		GenericAccountId32: GenericAccountId,
		GenericAccountId33: GenericAccountId33,
		GenericAccountIndex: GenericAccountIndex,
		GenericAddress: GenericMultiAddress,
		GenericBlock: GenericBlock,
		GenericCall: GenericCall,
		GenericChainProperties: GenericChainProperties,
		GenericConsensusEngineId: GenericConsensusEngineId,
		GenericEthereumAccountId: GenericEthereumAccountId,
		GenericEthereumLookupSource: GenericEthereumLookupSource,
		GenericEvent: GenericEvent,
		GenericEventData: GenericEventData,
		GenericExtrinsic: GenericExtrinsic,
		GenericExtrinsicEra: GenericExtrinsicEra,
		GenericExtrinsicPayload: GenericExtrinsicPayload,
		GenericExtrinsicPayloadUnknown: GenericExtrinsicPayloadUnknown,
		GenericExtrinsicPayloadV4: GenericExtrinsicPayloadV4,
		GenericExtrinsicSignatureV4: GenericExtrinsicSignatureV4,
		GenericExtrinsicUnknown: GenericExtrinsicUnknown,
		GenericExtrinsicV4: GenericExtrinsicV4,
		GenericImmortalEra: ImmortalEra,
		GenericLookupSource: GenericLookupSource,
		GenericMortalEra: MortalEra,
		GenericMultiAddress: GenericMultiAddress,
		GenericSignerPayload: GenericSignerPayload,
		GenericVote: GenericVote,
		I128: i128,
		I16: i16,
		I256: i256,
		I32: i32,
		I64: i64,
		I8: i8,
		Null: Null,
		OptionBool: OptionBool,
		StorageKey: StorageKey,
		Text: Text,
		Type: Type,
		U128: u128,
		U16: u16,
		U256: u256,
		U32: u32,
		U64: u64,
		U8: u8,
		USize: usize,
		bool: bool,
		f32: f32,
		f64: f64,
		i128: i128,
		i16: i16,
		i256: i256,
		i32: i32,
		i64: i64,
		i8: i8,
		u128: u128,
		u16: u16,
		u256: u256,
		u32: u32,
		u64: u64,
		u8: u8,
		usize: usize
	});

	function convert(t){return ({name:o})=>t(o)}const objectNameToCamel=convert(stringCamelCase);const objectNameToString=convert((t=>t.toString()));

	function isTx(e,t){return e.callIndex[0]===t[0]&&e.callIndex[1]===t[1]}function createUnchecked(e,t,n,r){const l=r.fields,a=stringCamelCase(r.name),o=(...o)=>{if(l.length!==o.length)throw new Error(`Extrinsic ${t}.${a} expects ${l.length} arguments, got ${o.length}.`);return e.createTypeUnsafe("Call",[{args:o,callIndex:n},r])};return o.is=e=>isTx(e,n),o.callIndex=n,o.meta=r,o.method=a,o.section=t,o.toJSON=()=>r.toJSON(),o}

	function filterCallsSome({calls:e}){return e.isSome}function createCallFunction(e,t,a,r,n){const{fields:o,index:l}=a,i=new Array(o.length);for(let e=0;e<o.length;e++){const{name:a,type:r,typeName:n}=o[e];i[e]=objectSpread({name:stringCamelCase(a.unwrapOr(`param${e}`)),type:getSiName(t,r)},n.isSome?{typeName:n.unwrap()}:null);}return createUnchecked(e,r,new Uint8Array([n,l.toNumber()]),e.createTypeUnsafe("FunctionMetadataLatest",[objectSpread({args:i},a)]))}function decorateExtrinsics(e,{lookup:t,pallets:a},r){const n={},o=a.filter(filterCallsSome);for(let a=0;a<o.length;a++){const{calls:l,index:i,name:c}=o[a],m=stringCamelCase(c),s=r>=12?i.toNumber():a;lazyMethod(n,m,(()=>lazyVariants(t,l.unwrap(),objectNameToCamel,(a=>createCallFunction(e,t,a,m,s)))));}return n}

	function createStorageHasher(e,a){return a.toNumber()>=2?e.createTypeUnsafe("StorageHasherV10",[a.toNumber()+1]):e.createTypeUnsafe("StorageHasherV10",[a])}function createStorageType(e,a){return a.isMap?[objectSpread({},a.asMap,{hasher:createStorageHasher(e,a.asMap.hasher)}),1]:a.isDoubleMap?[objectSpread({},a.asDoubleMap,{hasher:createStorageHasher(e,a.asDoubleMap.hasher),key2Hasher:createStorageHasher(e,a.asDoubleMap.key2Hasher)}),2]:[a.asPlain,0]}function convertModule(e,a){const r=a.storage.unwrapOr(null);return e.createTypeUnsafe("ModuleMetadataV10",[objectSpread({},a,{storage:r?objectSpread({},r,{items:r.items.map((a=>objectSpread({},a,{type:e.createTypeUnsafe("StorageEntryTypeV10",createStorageType(e,a.type))})))}):null})])}function toV10(e,{modules:a}){return e.createTypeUnsafe("MetadataV10",[{modules:a.map((a=>convertModule(e,a)))}])}

	function toV11(e,{modules:n}){return e.createTypeUnsafe("MetadataV11",[{extrinsic:{signedExtensions:[],version:0},modules:n}])}

	function toV12(e,{extrinsic:t,modules:a}){return e.createTypeUnsafe("MetadataV12",[{extrinsic:t,modules:a.map((t=>e.createTypeUnsafe("ModuleMetadataV12",[objectSpread({},t,{index:255})])))}])}

	function toV13(e,t){return e.createTypeUnsafe("MetadataV13",[t])}

	const typesAlias={assets:{Approval:"AssetApproval",ApprovalKey:"AssetApprovalKey",Balance:"TAssetBalance",DestroyWitness:"AssetDestroyWitness"},babe:{EquivocationProof:"BabeEquivocationProof"},balances:{Status:"BalanceStatus"},beefy:{AuthorityId:"BeefyId"},contracts:{StorageKey:"ContractStorageKey"},electionProviderMultiPhase:{Phase:"ElectionPhase"},ethereum:{Block:"EthBlock",Header:"EthHeader",Receipt:"EthReceipt",Transaction:"EthTransaction",TransactionStatus:"EthTransactionStatus"},evm:{Account:"EvmAccount",Log:"EvmLog",Vicinity:"EvmVicinity"},grandpa:{Equivocation:"GrandpaEquivocation",EquivocationProof:"GrandpaEquivocationProof"},identity:{Judgement:"IdentityJudgement"},inclusion:{ValidatorIndex:"ParaValidatorIndex"},paraDisputes:{ValidatorIndex:"ParaValidatorIndex"},paraInclusion:{ValidatorIndex:"ParaValidatorIndex"},paraScheduler:{ValidatorIndex:"ParaValidatorIndex"},paraShared:{ValidatorIndex:"ParaValidatorIndex"},parachains:{Id:"ParaId"},parasDisputes:{ValidatorIndex:"ParaValidatorIndex"},parasInclusion:{ValidatorIndex:"ParaValidatorIndex"},parasScheduler:{ValidatorIndex:"ParaValidatorIndex"},parasShared:{ValidatorIndex:"ParaValidatorIndex"},proposeParachain:{Proposal:"ParachainProposal"},proxy:{Announcement:"ProxyAnnouncement"},scheduler:{ValidatorIndex:"ParaValidatorIndex"},shared:{ValidatorIndex:"ParaValidatorIndex"},society:{Judgement:"SocietyJudgement",Vote:"SocietyVote"},staking:{Compact:"CompactAssignments"},treasury:{Proposal:"TreasuryProposal"},xcm:{AssetId:"XcmAssetId"},xcmPallet:{AssetId:"XcmAssetId"}};function getAliasTypes({knownTypes:a},e){return objectSpread({},typesAlias[e],a.typesAlias?.[e])}

	const BOXES=[["<",">"],["<",","],[",",">"],["(",")"],["(",","],[",",","],[",",")"]];function compatType(e,t){const a=t.toString(),n=e.findIndex((({def:e})=>e.HistoricMetaCompat===a));return -1!==n?n:e.push({def:{HistoricMetaCompat:a}})-1}function compatTypes(e,...t){for(let a=0;a<t.length;a++)compatType(e,t[a]);}function makeTupleType(e,t){return e.push({def:{Tuple:t}})-1}function makeVariantType(e,t,a,n){return a.push({def:{Variant:{variants:n}},path:[`pallet_${e.toString()}`,"pallet",t]})-1}function registerOriginCaller(e,t,a){e.register({OriginCaller:{_enum:t.map(((e,t)=>[e.name.toString(),a>=12?e.index.toNumber():t])).sort(((e,t)=>e[1]-t[1])).reduce(((e,[t,a])=>{for(let t=Object.keys(e).length;t<a;t++)e[`Empty${t}`]="Null";return e[t]=knownOrigins[t]||"Null",e}),{})}});}function setTypeOverride(e,t){t.forEach((t=>{const a=Object.keys(e).find((e=>t.eq(e)));if(a)t.setOverride(e[a]);else {const a=t.toString(),n=Object.entries(e).reduce(((e,[t,a])=>BOXES.reduce(((e,[n,r])=>e.replace(`${n}${t}${r}`,`${n}${a}${r}`)),e)),a);a!==n&&t.setOverride(n);}}));}function convertCalls(e,t,a,n,r){const s=n.map((({args:a,docs:n,name:s},i)=>(setTypeOverride(r,a.map((({type:e})=>e))),t.createTypeUnsafe("SiVariant",[{docs:n,fields:a.map((({name:a,type:n})=>t.createTypeUnsafe("SiField",[{name:a,type:compatType(e,n)}]))),index:i,name:s}]))));return t.createTypeUnsafe("PalletCallMetadataV14",[{type:makeVariantType(a,"Call",e,s)}])}function convertConstants(e,t,a,n){return a.map((({docs:a,name:r,type:s,value:i})=>(setTypeOverride(n,[s]),t.createTypeUnsafe("PalletConstantMetadataV14",[{docs:a,name:r,type:compatType(e,s),value:i}]))))}function convertErrors(e,t,a,n,r){const s=n.map((({docs:e,name:a},n)=>t.createTypeUnsafe("SiVariant",[{docs:e,fields:[],index:n,name:a}])));return t.createTypeUnsafe("PalletErrorMetadataV14",[{type:makeVariantType(a,"Error",e,s)}])}function convertEvents(e,t,a,n,r){const s=n.map((({args:a,docs:n,name:s},i)=>(setTypeOverride(r,a),t.createTypeUnsafe("SiVariant",[{docs:n,fields:a.map((a=>t.createTypeUnsafe("SiField",[{type:compatType(e,a)}]))),index:i,name:s}]))));return t.createTypeUnsafe("PalletEventMetadataV14",[{type:makeVariantType(a,"Event",e,s)}])}function createMapEntry(e,t,a,{hashers:n,isLinked:r,isOptional:s,keys:i,value:o}){return setTypeOverride(a,[o,...Array.isArray(i)?i:[i]]),t.createTypeUnsafe("StorageEntryTypeV14",[{Map:{hashers:n,key:1===n.length?compatType(e,i[0]):makeTupleType(e,i.map((t=>compatType(e,t)))),value:compatType(e,r?`(${s?`Option<${o.toString()}>`:o.toString()}, Linkage<${i[0].toString()}>)`:o)}}])}function convertStorage(e,t,{items:a,prefix:n},r){return t.createTypeUnsafe("PalletStorageMetadataV14",[{items:a.map((({docs:a,fallback:n,modifier:s,name:i,type:o})=>{let p;if(o.isPlain){const a=o.asPlain;setTypeOverride(r,[a]),p=t.createTypeUnsafe("StorageEntryTypeV14",[{Plain:compatType(e,a)}]);}else if(o.isMap){const a=o.asMap;p=createMapEntry(e,t,r,{hashers:[a.hasher],isLinked:a.linked.isTrue,isOptional:s.isOptional,keys:[a.key],value:a.value});}else if(o.isDoubleMap){const a=o.asDoubleMap;p=createMapEntry(e,t,r,{hashers:[a.hasher,a.key2Hasher],isLinked:!1,isOptional:s.isOptional,keys:[a.key1,a.key2],value:a.value});}else {const a=o.asNMap;p=createMapEntry(e,t,r,{hashers:a.hashers,isLinked:!1,isOptional:s.isOptional,keys:a.keyVec,value:a.value});}return t.createTypeUnsafe("StorageEntryMetadataV14",[{docs:a,fallback:n,modifier:s,name:i,type:p}])})),prefix:n}])}function convertExtrinsic(e,{signedExtensions:t,version:a}){return e.createTypeUnsafe("ExtrinsicMetadataV14",[{signedExtensions:t.map((e=>({identifier:e,type:0}))),type:0,version:a}])}function createPallet(e,t,a,{calls:n,constants:r,errors:s,events:i,storage:o}){const p=getAliasTypes(t,stringCamelCase(a.name));return t.createTypeUnsafe("PalletMetadataV14",[{calls:n&&convertCalls(e,t,a.name,n,p),constants:convertConstants(e,t,r,p),errors:s&&convertErrors(e,t,a.name,s),events:i&&convertEvents(e,t,a.name,i,p),index:a.index,name:a.name,storage:o&&convertStorage(e,t,o,p)}])}function toV14(e,t,a){const n=[];compatTypes(n,"Null","u8","u16","u32","u64"),registerOriginCaller(e,t.modules,a);const r=convertExtrinsic(e,t.extrinsic),s=t.modules.map((t=>createPallet(n,e,t,{calls:t.calls.unwrapOr(null),constants:t.constants,errors:t.errors.length?t.errors:null,events:t.events.unwrapOr(null),storage:t.storage.unwrapOr(null)})));return e.createTypeUnsafe("MetadataV14",[{extrinsic:r,lookup:{types:n.map(((t,a)=>e.createTypeUnsafe("PortableType",[{id:a,type:t}])))},pallets:s}])}

	function toLatest(t,e,n){return e}

	class MagicNumber extends u32{constructor(e,t){if(super(e,t),!this.isEmpty&&!this.eq(1635018093))throw new Error(`MagicNumber mismatch: expected ${e.createTypeUnsafe("u32",[1635018093]).toHex()}, found ${this.toHex()}`)}}

	var _MetadataVersioned_converted,_MetadataVersioned_assertVersion,_MetadataVersioned_getVersion,_MetadataVersioned_metadata;const KNOWN_VERSIONS=[14,13,12,11,10,9],LATEST_VERSION=KNOWN_VERSIONS[0];class MetadataVersioned extends Struct{constructor(t,e){super(t,{magicNumber:MagicNumber,metadata:"MetadataAll"},e),_MetadataVersioned_converted.set(this,new Map),_MetadataVersioned_assertVersion.set(this,(t=>{if(this.version>t)throw new Error(`Cannot convert metadata from version ${this.version} to ${t}`);return this.version===t})),_MetadataVersioned_getVersion.set(this,((t,e)=>{const a=`asV${t}`,s="latest"===t?`asV${LATEST_VERSION}`:"asV"+(t-1);return "latest"!==t&&__classPrivateFieldGet(this,_MetadataVersioned_assertVersion,"f").call(this,t)?__classPrivateFieldGet(this,_MetadataVersioned_metadata,"f").call(this)[a]:(__classPrivateFieldGet(this,_MetadataVersioned_converted,"f").has(t)||__classPrivateFieldGet(this,_MetadataVersioned_converted,"f").set(t,e(this.registry,this[s],this.version)),__classPrivateFieldGet(this,_MetadataVersioned_converted,"f").get(t))})),_MetadataVersioned_metadata.set(this,(()=>this.getT("metadata")));}get asCallsOnly(){return new MetadataVersioned(this.registry,{magicNumber:this.magicNumber,metadata:this.registry.createTypeUnsafe("MetadataAll",[toCallsOnly(this.registry,this.asLatest),LATEST_VERSION])})}get asV9(){return __classPrivateFieldGet(this,_MetadataVersioned_assertVersion,"f").call(this,9),__classPrivateFieldGet(this,_MetadataVersioned_metadata,"f").call(this).asV9}get asV10(){return __classPrivateFieldGet(this,_MetadataVersioned_getVersion,"f").call(this,10,toV10)}get asV11(){return __classPrivateFieldGet(this,_MetadataVersioned_getVersion,"f").call(this,11,toV11)}get asV12(){return __classPrivateFieldGet(this,_MetadataVersioned_getVersion,"f").call(this,12,toV12)}get asV13(){return __classPrivateFieldGet(this,_MetadataVersioned_getVersion,"f").call(this,13,toV13)}get asV14(){return __classPrivateFieldGet(this,_MetadataVersioned_getVersion,"f").call(this,14,toV14)}get asLatest(){return __classPrivateFieldGet(this,_MetadataVersioned_getVersion,"f").call(this,"latest",toLatest)}get magicNumber(){return this.getT("magicNumber")}get version(){return __classPrivateFieldGet(this,_MetadataVersioned_metadata,"f").call(this).index}getUniqTypes(t){return getUniqTypes(this.registry,this.asLatest,t)}toJSON(){return this.asLatest,super.toJSON()}}_MetadataVersioned_converted=new WeakMap,_MetadataVersioned_assertVersion=new WeakMap,_MetadataVersioned_getVersion=new WeakMap,_MetadataVersioned_metadata=new WeakMap;

	const EMPTY_METADATA=new Uint8Array([109,101,116,97,9]),VERSION_IDX=EMPTY_METADATA.length-1;function decodeU8a(t,e){if(0===e.length)return EMPTY_METADATA;if(9===e[VERSION_IDX])try{return new MetadataVersioned(t,e)}catch(t){return e[VERSION_IDX]=10,e}return e}class Metadata extends MetadataVersioned{constructor(t,e){super(t,isU8a(e)||isString(e)?decodeU8a(t,u8aToU8a(e)):e);}}

	function decorateConstants(e,{pallets:t},o){const a={};for(let o=0;o<t.length;o++){const{constants:s,name:l}=t[o];s.isEmpty||lazyMethod(a,stringCamelCase(l),(()=>lazyMethods({},s,(t=>{const o=e.createTypeUnsafe(e.createLookupType(t.type),[hexToU8a(t.value.toHex())]);return o.meta=t,o}),objectNameToCamel)));}return a}

	function variantToMeta(e,r){return objectSpread({args:r.fields.map((({type:r})=>e.getTypeDef(r).type))},r)}function decorateErrors(e,{lookup:r,pallets:t},o){const a={};for(let i=0;i<t.length;i++){const{errors:n,index:s,name:d}=t[i];if(n.isSome){const t=o>=12?s.toNumber():i;lazyMethod(a,stringCamelCase(d),(()=>lazyVariants(r,n.unwrap(),objectNameToString,(o=>({is:e=>isCodec$1(e)&&isCodec$1(e.index)&&e.index.eq(t)&&(isU8a(e.error)?e.error[0]===o.index.toNumber():isCodec$1(e.error)&&e.error.eq(o.index)),meta:e.createTypeUnsafe("ErrorMetadataLatest",[variantToMeta(r,o)])})))));}}return a}

	function filterEventsSome({events:e}){return e.isSome}function decorateEvents(e,{lookup:t,pallets:a},o){const r={},n=a.filter(filterEventsSome);for(let a=0;a<n.length;a++){const{events:i,index:s,name:l}=n[a],m=o>=12?s.toNumber():a;lazyMethod(r,stringCamelCase(l),(()=>lazyVariants(t,i.unwrap(),objectNameToString,(a=>({is:e=>isCodec$1(e)&&isU8a(e.index)&&m===e.index[0]&&a.index.eq(e.index[1]),meta:e.createTypeUnsafe("EventMetadataLatest",[variantToMeta(t,a)])})))));}return r}

	const DEFAULT_FN=a=>xxhashAsU8a(a,128),HASHERS={Blake2_128:a=>blake2AsU8a(a,128),Blake2_128Concat:a=>u8aConcat(blake2AsU8a(a,128),u8aToU8a(a)),Blake2_256:a=>blake2AsU8a(a,256),Identity:a=>u8aToU8a(a),Twox128:a=>xxhashAsU8a(a,128),Twox256:a=>xxhashAsU8a(a,256),Twox64Concat:a=>u8aConcat(xxhashAsU8a(a,64),u8aToU8a(a))};function getHasher(a){return HASHERS[a.type]||DEFAULT_FN}

	const NO_RAW_ARGS={args:[],hashers:[],keys:[]};function filterDefined(e){return !isUndefined(e)}function assertArgs({method:e,section:t},{args:a,keys:n}){if(!Array.isArray(a))throw new Error(`Call to ${stringCamelCase(t||"unknown")}.${stringCamelCase(e||"unknown")} needs ${n.length} arguments`);if(a.filter(filterDefined).length!==n.length)throw new Error(`Call to ${stringCamelCase(t||"unknown")}.${stringCamelCase(e||"unknown")} needs ${n.length} arguments, found [${a.join(", ")}]`)}function createKeyRawParts(e,t,{args:a,hashers:n,keys:r}){const s=new Array(r.length);for(let t=0;t<r.length;t++)s[t]=getHasher(n[t])(e.createTypeUnsafe(e.createLookupType(r[t]),[a[t]]).toU8a());return [[xxhashAsU8a(t.prefix,128),xxhashAsU8a(t.method,128)],s]}function createKeyInspect(e,t,a){assertArgs(t,a);const{meta:n}=t,[r,s]=createKeyRawParts(e,t,a);let o=[];if(n.type.isMap){const{hashers:t,key:a}=n.type.asMap;o=1===t.length?[`${t[0].type}(${getSiName(e.lookup,a)})`]:e.lookup.getSiType(a).def.asTuple.map(((a,n)=>`${t[n].type}(${getSiName(e.lookup,a)})`));}const i=["module","method"].concat(...a.args.map(((e,t)=>o[t])));return {inner:r.concat(...s).map(((e,t)=>({name:i[t],outer:[e]})))}}function createKeyRaw(e,t,a){const[n,r]=createKeyRawParts(e,t,a);return u8aConcat(...n,...r)}function createKey(e,t,a){return assertArgs(t,a),compactAddLength(createKeyRaw(e,t,a))}function createStorageInspect(e,t,a){const{meta:{type:n}}=t;return (...r)=>{if(n.isPlain)return a.skipHashing?{inner:[],name:"wellKnown",outer:[u8aToU8a(a.key)]}:createKeyInspect(e,t,NO_RAW_ARGS);const{hashers:s,key:o}=n.asMap;return 1===s.length?createKeyInspect(e,t,{args:r,hashers:s,keys:[o]}):createKeyInspect(e,t,{args:r,hashers:s,keys:e.lookup.getSiType(o).def.asTuple})}}function createStorageFn(e,t,a){const{meta:{type:n}}=t;let r=null;return (...s)=>{if(n.isPlain)return r||(r=a.skipHashing?compactAddLength(u8aToU8a(a.key)):createKey(e,t,NO_RAW_ARGS)),r;const{hashers:o,key:i}=n.asMap;return 1===o.length?createKey(e,t,{args:s,hashers:o,keys:[i]}):createKey(e,t,{args:s,hashers:o,keys:e.lookup.getSiType(i).def.asTuple})}}function createWithMeta(e,t,a){const{meta:n,method:r,prefix:s,section:o}=t,i=createStorageFn(e,t,a);return i.inspect=createStorageInspect(e,t,a),i.meta=n,i.method=stringCamelCase(r),i.prefix=s,i.section=o,i.toJSON=()=>objectSpread({storage:{method:r,prefix:s,section:o}},n.toJSON()),i}function extendHeadMeta(e,{meta:{docs:t,name:a,type:n},section:r},{method:s},o){const i=e.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:t,fallback:e.createTypeUnsafe("Bytes",[]),modifier:e.createTypeUnsafe("StorageEntryModifierLatest",[1]),name:a,type:e.createTypeUnsafe("StorageEntryTypeLatest",[n.asMap.key,0])}]);o.meta=i;const c=(...t)=>e.createTypeUnsafe("StorageKey",[o(...t),{method:s,section:r}]);return c.meta=i,c}function extendPrefixedMap(e,t,a){const{meta:{type:n},method:r,section:s}=t;return a.iterKey=extendHeadMeta(e,t,a,((...a)=>{if(a.length&&(n.isPlain||a.length>=n.asMap.hashers.length))throw new Error(`Iteration of ${stringCamelCase(s||"unknown")}.${stringCamelCase(r||"unknown")} needs arguments to be at least one less than the full arguments, found [${a.join(", ")}]`);if(a.length&&n.isMap){const{hashers:r,key:s}=n.asMap,o=1===r.length?[s]:e.lookup.getSiType(s).def.asTuple;return new Raw(e,createKeyRaw(e,t,{args:a,hashers:r.slice(0,a.length),keys:o.slice(0,a.length)}))}return new Raw(e,createKeyRaw(e,t,NO_RAW_ARGS))})),a}function createFunction(e,t,a){const{meta:{type:n}}=t,r=createWithMeta(e,t,a);return n.isMap&&extendPrefixedMap(e,t,r),r.keyPrefix=(...e)=>r.iterKey&&r.iterKey(...e)||compactStripLength(r())[1],r}

	function findSiPrimitive(e,t){const i=t.toLowerCase();return e.lookup.types.find((e=>e.type.def.isPrimitive&&e.type.def.asPrimitive.toString().toLowerCase()===i||e.type.def.isHistoricMetaCompat&&e.type.def.asHistoricMetaCompat.toString().toLowerCase()===i))}function findSiType(e,t){let i=findSiPrimitive(e,t);if(!i&&"Bytes"===t){const o=findSiPrimitive(e,"u8");o&&(i=e.lookup.types.find((e=>e.type.def.isSequence&&e.type.def.asSequence.type.eq(o.id)||e.type.def.isHistoricMetaCompat&&e.type.def.asHistoricMetaCompat.eq(t))));}return i||console.warn(`Unable to map ${t} to a lookup index`),i}function createRuntimeFunction({method:e,prefix:t,section:i},o,{docs:n,type:a}){return r=>createFunction(r,{meta:r.createTypeUnsafe("StorageEntryMetadataLatest",[{docs:r.createTypeUnsafe("Vec<Text>",[[n]]),modifier:r.createTypeUnsafe("StorageEntryModifierLatest",["Required"]),name:r.createTypeUnsafe("Text",[e]),toJSON:()=>o,type:r.createTypeUnsafe("StorageEntryTypeLatest",[{Plain:findSiType(r,a)?.id||0}])}]),method:e,prefix:t,section:i},{key:o,skipHashing:!0})}

	const prefix="Substrate",section="substrate";function createSubstrateFn(e,t,r){return createRuntimeFunction({method:e,prefix:prefix,section:section},t,r)}const substrate={changesTrieConfig:createSubstrateFn("changesTrieConfig",":changes_trie",{docs:"Changes trie configuration is stored under this key.",type:"u32"}),childStorageKeyPrefix:createSubstrateFn("childStorageKeyPrefix",":child_storage:",{docs:"Prefix of child storage keys.",type:"u32"}),code:createSubstrateFn("code",":code",{docs:"Wasm code of the runtime.",type:"Bytes"}),extrinsicIndex:createSubstrateFn("extrinsicIndex",":extrinsic_index",{docs:"Current extrinsic index (u32) is stored under this key.",type:"u32"}),heapPages:createSubstrateFn("heapPages",":heappages",{docs:"Number of wasm linear memory pages required for execution of the runtime.",type:"u64"})};

	function getStorage(t){const e={},r=Object.entries(substrate);for(let s=0;s<r.length;s++)e[r[s][0]]=r[s][1](t);return {substrate:e}}

	const VERSION_NAME="palletVersion",VERSION_KEY=":__STORAGE_VERSION__:",VERSION_DOCS={docs:"Returns the current pallet version from storage",type:"u16"};function decorateStorage(e,{pallets:t},o){const r=getStorage(e);for(let o=0;o<t.length;o++){const{name:a,storage:n}=t[o];if(n.isSome){const t=stringCamelCase(a),{items:o,prefix:i}=n.unwrap(),m=i.toString();lazyMethod(r,t,(()=>lazyMethods({palletVersion:createRuntimeFunction({method:VERSION_NAME,prefix:m,section:t},createKeyRaw(e,{method:VERSION_KEY,prefix:a.toString()},NO_RAW_ARGS),VERSION_DOCS)(e)},o,(o=>createFunction(e,{meta:o,method:o.name.toString(),prefix:m,section:t},{})),objectNameToCamel)));}}return r}

	function expandMetadata(e,t){if(!(t instanceof Metadata))throw new Error("You need to pass a valid Metadata instance to Decorated");const r=t.asLatest,o=t.version;return {consts:decorateConstants(e,r),errors:decorateErrors(e,r,o),events:decorateEvents(e,r,o),query:decorateStorage(e,r),registry:e,tx:decorateExtrinsics(e,r,o)}}

	var _PortableRegistry_instances,_PortableRegistry_alias,_PortableRegistry_lookups,_PortableRegistry_names,_PortableRegistry_params,_PortableRegistry_typeDefs,_PortableRegistry_types,_PortableRegistry_createSiDef,_PortableRegistry_getLookupId,_PortableRegistry_extract,_PortableRegistry_extractArray,_PortableRegistry_extractBitSequence,_PortableRegistry_extractCompact,_PortableRegistry_extractComposite,_PortableRegistry_extractCompositeSet,_PortableRegistry_extractFields,_PortableRegistry_extractFieldsAlias,_PortableRegistry_extractHistoric,_PortableRegistry_extractPrimitive,_PortableRegistry_extractAliasPath,_PortableRegistry_extractSequence,_PortableRegistry_extractTuple,_PortableRegistry_extractVariant,_PortableRegistry_extractVariantEnum;const l$6=logger("PortableRegistry"),TYPE_UNWRAP={toNumber:()=>-1},PRIMITIVE_ALIAS={Char:"u32",Str:"Text"},PATHS_ALIAS=splitNamespace(["sp_core::crypto::AccountId32","sp_runtime::generic::era::Era","sp_runtime::multiaddress::MultiAddress","account::AccountId20","polkadot_runtime_common::claims::EthereumAddress","frame_support::weights::weight_v2::Weight","sp_weights::weight_v2::Weight","*_democracy::vote::Vote","*_conviction_voting::vote::Vote","*_identity::types::Data","sp_core::OpaqueMetadata","sp_core::OpaquePeerId","sp_core::offchain::OpaqueMultiaddr","primitive_types::*","sp_arithmetic::per_things::*","*_runtime::RuntimeCall","*_runtime::RuntimeEvent","ink::env::types::*","ink::primitives::types::*","ink_env::types::*","ink_primitives::types::*"]),PATHS_SET=splitNamespace(["pallet_identity::types::BitFlags"]),BITVEC_NS_LSB=["bitvec::order::Lsb0","BitOrderLsb0"],BITVEC_NS_MSB=["bitvec::order::Msb0","BitOrderMsb0"],BITVEC_NS=[...BITVEC_NS_LSB,...BITVEC_NS_MSB],WRAPPERS=["BoundedBTreeMap","BoundedBTreeSet","BoundedVec","Box","BTreeMap","BTreeSet","Cow","Option","Range","RangeInclusive","Result","WeakBoundedVec","WrapperKeepOpaque","WrapperOpaque"],RESERVED=["entries","keys","new","size","hash","registry"],PATH_RM_INDEX_1=["generic","misc","pallet","traits","types"];function sanitizeDocs(e){const t=new Array(e.length);for(let r=0;r<e.length;r++)t[r]=e[r].toString();return t}function splitNamespace(e){const t=new Array(e.length);for(let r=0;r<e.length;r++)t[r]=e[r].split("::");return t}function matchParts(e,t){return e.length===t.length&&e.every(((e,r)=>{const i=t[r].toString();if("*"===e||e===i)return !0;if(e.includes("*")&&e.includes("_")&&i.includes("_")){let t=e.split("_"),r=i.split("_");if("*"===t[0]){const e=r.indexOf(t[1]);-1!==e&&(t=t.slice(1),r=r.slice(e));}return 2===t.length&&"*"===t[1]&&t[0]===r[0]||matchParts(t,r)}return !1}))}function getAliasPath({def:e,path:t}){return ["frame_support::weights::weight_v2::Weight","sp_weights::weight_v2::Weight"].includes(t.join("::"))?e.isComposite&&1!==e.asComposite.fields.length?null:"WeightV1":t.length&&PATHS_ALIAS.some((e=>matchParts(e,t)))?t[t.length-1].toString():null}function extractNameFlat(e,t,r,i,s=!1){const a=i.length;if(0===a||WRAPPERS.includes(i[a-1].toString()))return null;const n=new Array(a),o=new Array(a);for(let e=0;e<a;e++){const t=stringPascalCase(s?i[e].replace("pallet_",""):i[e]),r=t.toLowerCase();n[e]=t,o[e]=r;}let l="";for(let e=0;e<a;e++){const t=o[e];1===e&&PATH_RM_INDEX_1.includes(t)||t!==o[e+1]&&(l+=n[e]);}if("RawOrigin"===n[1]&&2===a&&2===r.length&&r[1].type.isSome){const t=e[r[1].type.unwrap().toNumber()];2===t.type.path.length&&(l=`${l}${t.type.path[1].toString()}`);}return {lookupIndex:t,name:l,params:r}}function extractName(e,t,{type:{params:r,path:i}}){return extractNameFlat(e,t,r,i)}function nextDupeMatches(e,t,r){const i=[r[t]];for(let s=t+1;s<r.length;s++){const t=r[s];t.name===e&&i.push(t);}return i}function rewriteDupes(e,t){const r=e.length;for(let t=0;t<r;t++){const i=e[t];for(let s=t+1;s<r;s++){const t=e[s];if(i.lookupIndex!==t.lookupIndex&&i.name===t.name)return !1}}for(let i=0;i<r;i++){const r=e[i];t[r.lookupIndex]=r.name;}return !0}function removeDupeNames(e,t,r){const i={};return r.map(((s,a)=>{const{lookupIndex:n,name:o,params:l}=s;if(!o)return null;if(i[n])return s;const _=nextDupeMatches(o,a,r);if(1===_.length)return s;if(!_.some((e=>l.length!==e.params.length||l.some(((t,r)=>!t.name.eq(e.params[r].name)||t.type.unwrapOr(TYPE_UNWRAP).toNumber()!==e.params[r].type.unwrapOr(TYPE_UNWRAP).toNumber())))))return s;const c=l.findIndex((({type:e},t)=>_.every((({params:r},i)=>r[t].type.isSome&&(0===i||!r[t].type.eq(e))))));if(-1===c)return s;const p=new Array(_.length);for(let t=0;t<_.length;t++){const{lookupIndex:r,name:i,params:s}=_[t],{def:a,path:n}=e.getSiType(s[c].type.unwrap());if(!a.isPrimitive&&!n.length)return null;p[t]={lookupIndex:r,name:a.isPrimitive?`${i}${a.asPrimitive.toString()}`:`${i}${n[n.length-1].toString()}`};}if(rewriteDupes(p,i))return s;for(let r=0;r<_.length;r++){const{lookupIndex:i,name:s,params:a}=_[r],{def:n,path:o}=e.getSiType(a[c].type.unwrap()),l=extractNameFlat(t,i,a,o,!0);if(n.isPrimitive||!l)return null;p[r]={lookupIndex:i,name:`${s}${l.name}`};}return rewriteDupes(p,i)?s:null})).filter((e=>!!e)).map((({lookupIndex:e,name:t,params:r})=>({lookupIndex:e,name:i[e]||t,params:r})))}function registerTypes(e,t,r,i){if(e.registry.register(t),i.SpRuntimeUncheckedExtrinsic){const[t,,s]=i.SpRuntimeUncheckedExtrinsic,a=e.getSiType(t.type.unwrap()),n=e.getSiType(s.type.unwrap()).path.join("::");let o=a.path.join("::");const l="sp_runtime::multiaddress::MultiAddress"===o;if(l){const[t]=a.params;o=e.getSiType(t.type.unwrap()).path.join("::");}e.registry.register({AccountId:["sp_core::crypto::AccountId32"].includes(o)?"AccountId32":["account::AccountId20","primitive_types::H160"].includes(o)?"AccountId20":"AccountId32",Address:l?"MultiAddress":"AccountId",ExtrinsicSignature:["sp_runtime::MultiSignature"].includes(n)?"MultiSignature":r[s.type.unwrap().toNumber()]||"MultiSignature"});}}function extractAliases(e,t){const r=Object.keys(e).some((e=>!e.startsWith("Pallet"))),i={};if(e.SpRuntimeUncheckedExtrinsic){const[,{type:t}]=e.SpRuntimeUncheckedExtrinsic;i[t.unwrap().toNumber()]="Call";}else r&&!t&&l$6.warn("Unable to determine runtime Call type, cannot inspect sp_runtime::generic::unchecked_extrinsic::UncheckedExtrinsic");if(e.FrameSystemEventRecord){const[{type:t}]=e.FrameSystemEventRecord;i[t.unwrap().toNumber()]="Event";}else r&&!t&&l$6.warn("Unable to determine runtime Event type, cannot inspect frame_system::EventRecord");return i}function extractTypeInfo(e,t){const r=[],i={},s=t.length;for(let e=0;e<s;e++){const s=t[e],a=s.id.toNumber(),n=extractName(t,a,t[e]);n&&r.push(n),i[a]=s;}const a={},n={},o={},l=removeDupeNames(e,t,r),_=l.length;for(let t=0;t<_;t++){const{lookupIndex:r,name:i,params:s}=l[t];n[r]=i,a[i]=e.registry.createLookupType(r),o[i]=s;}return {lookups:a,names:n,params:o,types:i}}class PortableRegistry extends Struct{constructor(e,t,r){super(e,{types:"Vec<PortableType>"},t),_PortableRegistry_instances.add(this),_PortableRegistry_alias.set(this,void 0),_PortableRegistry_lookups.set(this,void 0),_PortableRegistry_names.set(this,void 0),_PortableRegistry_params.set(this,void 0),_PortableRegistry_typeDefs.set(this,{}),_PortableRegistry_types.set(this,void 0);const{lookups:i,names:s,params:a,types:n}=extractTypeInfo(this,this.types);__classPrivateFieldSet(this,_PortableRegistry_alias,extractAliases(a,r),"f"),__classPrivateFieldSet(this,_PortableRegistry_lookups,i,"f"),__classPrivateFieldSet(this,_PortableRegistry_names,s,"f"),__classPrivateFieldSet(this,_PortableRegistry_params,a,"f"),__classPrivateFieldSet(this,_PortableRegistry_types,n,"f");}get names(){return Object.values(__classPrivateFieldGet(this,_PortableRegistry_names,"f")).sort()}get types(){return this.getT("types")}register(){registerTypes(this,__classPrivateFieldGet(this,_PortableRegistry_lookups,"f"),__classPrivateFieldGet(this,_PortableRegistry_names,"f"),__classPrivateFieldGet(this,_PortableRegistry_params,"f"));}getName(e){return __classPrivateFieldGet(this,_PortableRegistry_names,"f")[__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_getLookupId).call(this,e)]}getSiType(e){const t=(__classPrivateFieldGet(this,_PortableRegistry_types,"f")||this.types)[__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_getLookupId).call(this,e)];if(!t)throw new Error(`PortableRegistry: Unable to find type with lookupId ${e.toString()}`);return t.type}getTypeDef(e){const t=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_getLookupId).call(this,e);if(!__classPrivateFieldGet(this,_PortableRegistry_typeDefs,"f")[t]){const r=__classPrivateFieldGet(this,_PortableRegistry_names,"f")[t],i={info:TypeDefInfo.DoNotConstruct,lookupIndex:t,lookupName:r,type:this.registry.createLookupType(t)};r&&(__classPrivateFieldGet(this,_PortableRegistry_typeDefs,"f")[t]=i);const s=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extract).call(this,this.getSiType(e),t);r||(__classPrivateFieldGet(this,_PortableRegistry_typeDefs,"f")[t]=i),Object.keys(s).forEach((e=>{("lookupName"!==e||s[e])&&(__classPrivateFieldGet(this,_PortableRegistry_typeDefs,"f")[t][e]=s[e]);})),s.info===TypeDefInfo.Plain&&(__classPrivateFieldGet(this,_PortableRegistry_typeDefs,"f")[t].lookupNameRoot=__classPrivateFieldGet(this,_PortableRegistry_typeDefs,"f")[t].lookupName,delete __classPrivateFieldGet(this,_PortableRegistry_typeDefs,"f")[t].lookupName);}return __classPrivateFieldGet(this,_PortableRegistry_typeDefs,"f")[t]}sanitizeField(e){let t=null,r=null;return e.isSome&&(t=stringCamelCase(e.unwrap()),t.includes("#")?(r=t,t=r.replace(/#/g,"_")):RESERVED.includes(t)&&(r=t,t=`${t}_`)),[t,r]}}_PortableRegistry_alias=new WeakMap,_PortableRegistry_lookups=new WeakMap,_PortableRegistry_names=new WeakMap,_PortableRegistry_params=new WeakMap,_PortableRegistry_typeDefs=new WeakMap,_PortableRegistry_types=new WeakMap,_PortableRegistry_instances=new WeakSet,_PortableRegistry_createSiDef=function(e){const t=this.getTypeDef(e),r=e.toNumber();return [TypeDefInfo.DoNotConstruct,TypeDefInfo.Enum,TypeDefInfo.Struct].includes(t.info)&&t.lookupName?{docs:t.docs,info:TypeDefInfo.Si,lookupIndex:r,lookupName:__classPrivateFieldGet(this,_PortableRegistry_names,"f")[r],type:this.registry.createLookupType(e)}:t},_PortableRegistry_getLookupId=function(e){if(isString(e)){if(!this.registry.isLookupType(e))throw new Error(`PortableRegistry: Expected a lookup string type, found ${e}`);return parseInt(e.replace("Lookup",""),10)}return isNumber(e)?e:e.toNumber()},_PortableRegistry_extract=function(e,t){const r=e.path.join("::");let i;const s=__classPrivateFieldGet(this,_PortableRegistry_alias,"f")[t]||getAliasPath(e);try{if(s)i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractAliasPath).call(this,t,s);else switch(e.def.type){case"Array":i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractArray).call(this,t,e.def.asArray);break;case"BitSequence":i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractBitSequence).call(this,t,e.def.asBitSequence);break;case"Compact":i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractCompact).call(this,t,e.def.asCompact);break;case"Composite":i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractComposite).call(this,t,e,e.def.asComposite);break;case"HistoricMetaCompat":i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractHistoric).call(this,t,e.def.asHistoricMetaCompat);break;case"Primitive":i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractPrimitive).call(this,t,e);break;case"Sequence":i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractSequence).call(this,t,e.def.asSequence);break;case"Tuple":i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractTuple).call(this,t,e.def.asTuple);break;case"Variant":i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractVariant).call(this,t,e,e.def.asVariant);break;default:assertUnreachable(e.def.type);}}catch(i){throw new Error(`PortableRegistry: ${t}${r?` (${r})`:""}: Error extracting ${stringify(e)}: ${i.message}`)}return objectSpread({docs:sanitizeDocs(e.docs),namespace:r},i)},_PortableRegistry_extractArray=function(e,{len:t,type:r}){const i=t.toNumber();if(i>2048)throw new Error("Only support for [Type; <length>], where length <= 2048");return withTypeString(this.registry,{info:TypeDefInfo.VecFixed,length:i,sub:__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,r)})},_PortableRegistry_extractBitSequence=function(e,{bitOrderType:t,bitStoreType:r}){const i=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,t),s=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,r),[a,n]=BITVEC_NS.includes(i.namespace||"")?[i,s]:[s,i];if(!BITVEC_NS.includes(a.namespace||""))throw new Error(`Unexpected bitOrder found as ${a.namespace||"<unknown>"}`);if(n.info!==TypeDefInfo.Plain||"u8"!==n.type)throw new Error(`Only u8 bitStore is currently supported, found ${n.type}`);return {info:TypeDefInfo.Plain,type:"BitVec"}},_PortableRegistry_extractCompact=function(e,{type:t}){return withTypeString(this.registry,{info:TypeDefInfo.Compact,sub:__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,t)})},_PortableRegistry_extractComposite=function(e,{params:t,path:r},{fields:i}){if(r.length){const e=r[0].toString(),i=r[r.length-1].toString();if(1===r.length&&"BTreeMap"===e){if(2!==t.length)throw new Error(`BTreeMap requires 2 parameters, found ${t.length}`);return withTypeString(this.registry,{info:TypeDefInfo.BTreeMap,sub:t.map((({type:e})=>__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,e.unwrap())))})}if(1===r.length&&"BTreeSet"===e){if(1!==t.length)throw new Error(`BTreeSet requires 1 parameter, found ${t.length}`);return withTypeString(this.registry,{info:TypeDefInfo.BTreeSet,sub:__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,t[0].type.unwrap())})}if(["Range","RangeInclusive"].includes(e)){if(1!==t.length)throw new Error(`Range requires 1 parameter, found ${t.length}`);return withTypeString(this.registry,{info:"Range"===e?TypeDefInfo.Range:TypeDefInfo.RangeInclusive,sub:__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,t[0].type.unwrap()),type:e})}if(["WrapperKeepOpaque","WrapperOpaque"].includes(i)){if(1!==t.length)throw new Error(`WrapperOpaque requires 1 parameter, found ${t.length}`);return withTypeString(this.registry,{info:"WrapperKeepOpaque"===i?TypeDefInfo.WrapperKeepOpaque:TypeDefInfo.WrapperOpaque,sub:__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,t[0].type.unwrap()),type:i})}}return PATHS_SET.some((e=>matchParts(e,r)))?__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractCompositeSet).call(this,e,t,i):__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractFields).call(this,e,i)},_PortableRegistry_extractCompositeSet=function(e,t,r){if(1!==t.length||1!==r.length)throw new Error("Set handling expects param/field as single entries");return withTypeString(this.registry,{info:TypeDefInfo.Set,length:this.registry.createTypeUnsafe(this.registry.createLookupType(r[0].type),[]).bitLength(),sub:this.getSiType(t[0].type.unwrap()).def.asVariant.variants.map((({index:e,name:t})=>({index:e.toNumber(),info:TypeDefInfo.Plain,name:t.toString(),type:"Null"})))})},_PortableRegistry_extractFields=function(e,t){let r=!0,i=!0;for(let e=0;e<t.length;e++){const{name:s}=t[e];r=r&&s.isSome,i=i&&s.isNone;}if(!i&&!r)throw new Error("Invalid fields type detected, expected either Tuple (all unnamed) or Struct (all named)");if(0===t.length)return {info:TypeDefInfo.Null,type:"Null"};if(i&&1===t.length){const r=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,t[0].type);return objectSpread({},r,-1===e?null:{lookupIndex:e,lookupName:__classPrivateFieldGet(this,_PortableRegistry_names,"f")[e],lookupNameRoot:r.lookupName},t[0].typeName.isSome?{typeName:sanitize(t[0].typeName.unwrap())}:null)}const[s,a]=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractFieldsAlias).call(this,t);return withTypeString(this.registry,objectSpread({info:i?TypeDefInfo.Tuple:TypeDefInfo.Struct,sub:s},a.size?{alias:a}:null,-1===e?null:{lookupIndex:e,lookupName:__classPrivateFieldGet(this,_PortableRegistry_names,"f")[e]}))},_PortableRegistry_extractFieldsAlias=function(e){const t=new Map,r=new Array(e.length);for(let i=0;i<e.length;i++){const{docs:s,name:a,type:n,typeName:o}=e[i],l=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,n);if(a.isNone)r[i]=l;else {const[e,n]=this.sanitizeField(a);e&&n&&t.set(e,n),r[i]=objectSpread({docs:sanitizeDocs(s),name:e},l,o.isSome?{typeName:sanitize(o.unwrap())}:null);}}return [r,t]},_PortableRegistry_extractHistoric=function(e,t){return objectSpread({displayName:t.toString(),isFromSi:!0},getTypeDef(t))},_PortableRegistry_extractPrimitive=function(e,t){const r=t.def.asPrimitive.type.toString();return {info:TypeDefInfo.Plain,type:PRIMITIVE_ALIAS[r]||r.toLowerCase()}},_PortableRegistry_extractAliasPath=function(e,t){return {info:TypeDefInfo.Plain,type:t}},_PortableRegistry_extractSequence=function(e,{type:t}){const r=__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,t);return "u8"===r.type?{info:TypeDefInfo.Plain,type:"Bytes"}:withTypeString(this.registry,{info:TypeDefInfo.Vec,lookupIndex:e,lookupName:__classPrivateFieldGet(this,_PortableRegistry_names,"f")[e],sub:r})},_PortableRegistry_extractTuple=function(e,t){if(0===t.length)return {info:TypeDefInfo.Null,type:"Null"};if(1===t.length)return this.getTypeDef(t[0]);const r=t.map((e=>__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,e)));return withTypeString(this.registry,{info:TypeDefInfo.Tuple,lookupIndex:e,lookupName:__classPrivateFieldGet(this,_PortableRegistry_names,"f")[e],sub:r})},_PortableRegistry_extractVariant=function(e,{params:t,path:r},{variants:i}){if(r.length){const e=r[0].toString();if("Option"===e){if(1!==t.length)throw new Error(`Option requires 1 parameter, found ${t.length}`);return withTypeString(this.registry,{info:TypeDefInfo.Option,sub:__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,t[0].type.unwrap())})}if("Result"===e){if(2!==t.length)throw new Error(`Result requires 2 parameters, found ${t.length}`);return withTypeString(this.registry,{info:TypeDefInfo.Result,sub:t.map((({type:e},t)=>objectSpread({name:["Ok","Error"][t]},__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_createSiDef).call(this,e.unwrap()))))})}}return 0===i.length?{info:TypeDefInfo.Null,type:"Null"}:__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractVariantEnum).call(this,e,i)},_PortableRegistry_extractVariantEnum=function(e,t){const r=[];return t.slice().sort(((e,t)=>e.index.cmp(t.index))).forEach((({fields:e,index:t,name:i})=>{const s=t.toNumber();for(;r.length!==s;)r.push({index:r.length,info:TypeDefInfo.Null,name:`__Unused${r.length}`,type:"Null"});r.push(objectSpread(__classPrivateFieldGet(this,_PortableRegistry_instances,"m",_PortableRegistry_extractFields).call(this,-1,e),{index:s,name:i.toString()}));})),withTypeString(this.registry,{info:TypeDefInfo.Enum,lookupIndex:e,lookupName:__classPrivateFieldGet(this,_PortableRegistry_names,"f")[e],sub:r})};

	var _TypeRegistry_chainProperties,_TypeRegistry_classes,_TypeRegistry_definitions,_TypeRegistry_firstCallIndex,_TypeRegistry_hasher,_TypeRegistry_knownTypes,_TypeRegistry_lookup,_TypeRegistry_metadata,_TypeRegistry_metadataVersion,_TypeRegistry_signedExtensions,_TypeRegistry_unknownTypes,_TypeRegistry_userExtensions,_TypeRegistry_knownDefaults,_TypeRegistry_knownDefinitions,_TypeRegistry_metadataCalls,_TypeRegistry_metadataErrors,_TypeRegistry_metadataEvents,_TypeRegistry_moduleMap,_TypeRegistry_registerObject,_TypeRegistry_registerLookup;const DEFAULT_FIRST_CALL_IDX=new Uint8Array(2),l$5=logger("registry");function sortDecimalStrings(e,t){return parseInt(e,10)-parseInt(t,10)}function valueToString(e){return e.toString()}function getFieldArgs(e,t){const s=new Array(t.length);for(let i=0;i<t.length;i++)s[i]=e.getTypeDef(t[i].type).type;return s}function clearRecord(e){const t=Object.keys(e);for(let s=0;s<t.length;s++)delete e[t[s]];}function getVariantStringIdx({index:e}){return e.toString()}function injectErrors(e,{lookup:t,pallets:s},i,r){clearRecord(r);for(let e=0;e<s.length;e++){const{errors:a,index:n,name:_}=s[e];if(a.isSome){const s=stringCamelCase(_);lazyMethod(r,i>=12?n.toNumber():e,(()=>lazyVariants(t,a.unwrap(),getVariantStringIdx,(({docs:e,fields:i,index:r,name:a})=>({args:getFieldArgs(t,i),docs:e.map(valueToString),fields:i,index:r.toNumber(),method:a.toString(),name:a.toString(),section:s})))));}}}function injectEvents(e,{lookup:t,pallets:s},i,r){const a=s.filter(filterEventsSome);clearRecord(r);for(let s=0;s<a.length;s++){const{events:n,index:_,name:o}=a[s];lazyMethod(r,i>=12?_.toNumber():s,(()=>lazyVariants(t,n.unwrap(),getVariantStringIdx,(s=>{const i=e.createType("EventMetadataLatest",objectSpread({},s,{args:getFieldArgs(t,s.fields)}));return class extends GenericEventData{constructor(e,t){super(e,t,i,stringCamelCase(o),s.name.toString());}}}))));}}function injectExtrinsics(e,{lookup:t,pallets:s},i,r,a){const n=s.filter(filterCallsSome);clearRecord(r),clearRecord(a);for(let s=0;s<n.length;s++){const{calls:_,index:o,name:l}=n[s],y=i>=12?o.toNumber():s,p=stringCamelCase(l),g=_.unwrap();lazyMethod(r,y,(()=>lazyVariants(t,g,getVariantStringIdx,(s=>createCallFunction(e,t,s,p,y)))));const{path:c}=e.lookup.getSiType(g.type),d=c.findIndex((e=>e.eq("pallet")));if(-1!==d){const e=stringCamelCase(c.slice(0,d).map(((e,t)=>0===t?e.replace(/^(frame|pallet)_/,""):e)).join(" "));a[e]?a[e].push(p):a[e]=[p];}}}function extractProperties(e,t){const s=e.getChainProperties(),i=decorateConstants(e,t.asLatest,t.version),r=i.system&&(i.system.sS58Prefix||i.system.ss58Prefix);if(!r)return s;const{tokenDecimals:a,tokenSymbol:n}=s||{};return e.createTypeUnsafe("ChainProperties",[{ss58Format:r,tokenDecimals:a,tokenSymbol:n}])}class TypeRegistry{constructor(e){_TypeRegistry_chainProperties.set(this,void 0),_TypeRegistry_classes.set(this,new Map),_TypeRegistry_definitions.set(this,new Map),_TypeRegistry_firstCallIndex.set(this,null),_TypeRegistry_hasher.set(this,blake2AsU8a),_TypeRegistry_knownTypes.set(this,{}),_TypeRegistry_lookup.set(this,void 0),_TypeRegistry_metadata.set(this,void 0),_TypeRegistry_metadataVersion.set(this,0),_TypeRegistry_signedExtensions.set(this,fallbackExtensions),_TypeRegistry_unknownTypes.set(this,new Map),_TypeRegistry_userExtensions.set(this,void 0),_TypeRegistry_knownDefaults.set(this,void 0),_TypeRegistry_knownDefinitions.set(this,void 0),_TypeRegistry_metadataCalls.set(this,{}),_TypeRegistry_metadataErrors.set(this,{}),_TypeRegistry_metadataEvents.set(this,{}),_TypeRegistry_moduleMap.set(this,{}),_TypeRegistry_registerObject.set(this,(e=>{const t=Object.entries(e);for(let e=0;e<t.length;e++){const[s,i]=t[e];if(isFunction$1(i))__classPrivateFieldGet(this,_TypeRegistry_classes,"f").set(s,i);else {const e=isString(i)?i:stringify(i);if(s===e)throw new Error(`Unable to register circular ${s} === ${e}`);__classPrivateFieldGet(this,_TypeRegistry_classes,"f").has(s)&&__classPrivateFieldGet(this,_TypeRegistry_classes,"f").delete(s),__classPrivateFieldGet(this,_TypeRegistry_definitions,"f").set(s,e);}}})),_TypeRegistry_registerLookup.set(this,(e=>{this.setLookup(e);let t=null;if(this.hasType("SpWeightsWeightV2Weight")){const e=this.createType("SpWeightsWeightV2Weight");t=e.refTime&&e.proofSize?"SpWeightsWeightV2Weight":"WeightV1";}else isBn(this.createType("Weight"))||(t="WeightV1");t&&this.register({Weight:t});})),__classPrivateFieldSet(this,_TypeRegistry_knownDefaults,objectSpread({Json:Json,Metadata:Metadata,PortableRegistry:PortableRegistry,Raw:Raw},baseTypes),"f"),__classPrivateFieldSet(this,_TypeRegistry_knownDefinitions,typeDefinitions,"f");const t=Object.values(__classPrivateFieldGet(this,_TypeRegistry_knownDefinitions,"f"));for(let e=0;e<t.length;e++)this.register(t[e].types);e&&(this.createdAtHash=this.createType("BlockHash",e));}get chainDecimals(){if(__classPrivateFieldGet(this,_TypeRegistry_chainProperties,"f")?.tokenDecimals.isSome){const e=__classPrivateFieldGet(this,_TypeRegistry_chainProperties,"f").tokenDecimals.unwrap();if(e.length)return e.map((e=>e.toNumber()))}return [12]}get chainSS58(){return __classPrivateFieldGet(this,_TypeRegistry_chainProperties,"f")?.ss58Format.isSome?__classPrivateFieldGet(this,_TypeRegistry_chainProperties,"f").ss58Format.unwrap().toNumber():void 0}get chainTokens(){if(__classPrivateFieldGet(this,_TypeRegistry_chainProperties,"f")?.tokenSymbol.isSome){const e=__classPrivateFieldGet(this,_TypeRegistry_chainProperties,"f").tokenSymbol.unwrap();if(e.length)return e.map(valueToString)}return [formatBalance.getDefaults().unit]}get firstCallIndex(){return __classPrivateFieldGet(this,_TypeRegistry_firstCallIndex,"f")||DEFAULT_FIRST_CALL_IDX}isLookupType(e){return /Lookup\d+$/.test(e)}createLookupType(e){return `Lookup${"number"==typeof e?e:e.toNumber()}`}get knownTypes(){return __classPrivateFieldGet(this,_TypeRegistry_knownTypes,"f")}get lookup(){return assertReturn(__classPrivateFieldGet(this,_TypeRegistry_lookup,"f"),"PortableRegistry has not been set on this registry")}get metadata(){return assertReturn(__classPrivateFieldGet(this,_TypeRegistry_metadata,"f"),"Metadata has not been set on this registry")}get unknownTypes(){return [...__classPrivateFieldGet(this,_TypeRegistry_unknownTypes,"f").keys()]}get signedExtensions(){return __classPrivateFieldGet(this,_TypeRegistry_signedExtensions,"f")}clearCache(){__classPrivateFieldSet(this,_TypeRegistry_classes,new Map,"f");}createClass(e){return createClassUnsafe(this,e)}createClassUnsafe(e){return createClassUnsafe(this,e)}createType(e,...t){return createTypeUnsafe(this,e,t)}createTypeUnsafe(e,t,s){return createTypeUnsafe(this,e,t,s)}findMetaCall(e){const[t,s]=[e[0],e[1]];return assertReturn(__classPrivateFieldGet(this,_TypeRegistry_metadataCalls,"f")[`${t}`]&&__classPrivateFieldGet(this,_TypeRegistry_metadataCalls,"f")[`${t}`][`${s}`],(()=>`findMetaCall: Unable to find Call with index [${t}, ${s}]/[${e.toString()}]`))}findMetaError(e){const[t,s]=isU8a(e)?[e[0],e[1]]:[e.index.toNumber(),isU8a(e.error)?e.error[0]:e.error.toNumber()];return assertReturn(__classPrivateFieldGet(this,_TypeRegistry_metadataErrors,"f")[`${t}`]&&__classPrivateFieldGet(this,_TypeRegistry_metadataErrors,"f")[`${t}`][`${s}`],(()=>`findMetaError: Unable to find Error with index [${t}, ${s}]/[${e.toString()}]`))}findMetaEvent(e){const[t,s]=[e[0],e[1]];return assertReturn(__classPrivateFieldGet(this,_TypeRegistry_metadataEvents,"f")[`${t}`]&&__classPrivateFieldGet(this,_TypeRegistry_metadataEvents,"f")[`${t}`][`${s}`],(()=>`findMetaEvent: Unable to find Event with index [${t}, ${s}]/[${e.toString()}]`))}get(e,t,s){return this.getUnsafe(e,t,s)}getUnsafe(e,t,s){let i=__classPrivateFieldGet(this,_TypeRegistry_classes,"f").get(e)||__classPrivateFieldGet(this,_TypeRegistry_knownDefaults,"f")[e];if(!i){const r=__classPrivateFieldGet(this,_TypeRegistry_definitions,"f").get(e);let a;r?a=createClassUnsafe(this,r):s?a=constructTypeClass(this,s):t&&(l$5.warn(`Unable to resolve type ${e}, it will fail on construction`),__classPrivateFieldGet(this,_TypeRegistry_unknownTypes,"f").set(e,!0),a=DoNotConstruct.with(e)),a&&(i=class extends a{},__classPrivateFieldGet(this,_TypeRegistry_classes,"f").set(e,i),s&&isNumber(s.lookupIndex)&&__classPrivateFieldGet(this,_TypeRegistry_classes,"f").set(this.createLookupType(s.lookupIndex),i));}return i}getChainProperties(){return __classPrivateFieldGet(this,_TypeRegistry_chainProperties,"f")}getClassName(e){const t=[];for(const[s,i]of Object.entries(__classPrivateFieldGet(this,_TypeRegistry_knownDefaults,"f")))e===i&&t.push(s);for(const[s,i]of __classPrivateFieldGet(this,_TypeRegistry_classes,"f").entries())e===i&&t.push(s);return t.sort().reverse(),t.length?t[0]:void 0}getDefinition(e){return __classPrivateFieldGet(this,_TypeRegistry_definitions,"f").get(e)}getModuleInstances(e,t){return __classPrivateFieldGet(this,_TypeRegistry_knownTypes,"f")?.typesBundle?.spec?.[e.toString()]?.instances?.[t]||__classPrivateFieldGet(this,_TypeRegistry_moduleMap,"f")[t]}getOrThrow(e){const t=this.get(e);if(!t)throw new Error(`type ${e} not found`);return t}getOrUnknown(e){return this.get(e,!0)}getSignedExtensionExtra(){return expandExtensionTypes(__classPrivateFieldGet(this,_TypeRegistry_signedExtensions,"f"),"payload",__classPrivateFieldGet(this,_TypeRegistry_userExtensions,"f"))}getSignedExtensionTypes(){return expandExtensionTypes(__classPrivateFieldGet(this,_TypeRegistry_signedExtensions,"f"),"extrinsic",__classPrivateFieldGet(this,_TypeRegistry_userExtensions,"f"))}hasClass(e){return __classPrivateFieldGet(this,_TypeRegistry_classes,"f").has(e)||!!__classPrivateFieldGet(this,_TypeRegistry_knownDefaults,"f")[e]}hasDef(e){return __classPrivateFieldGet(this,_TypeRegistry_definitions,"f").has(e)}hasType(e){return !__classPrivateFieldGet(this,_TypeRegistry_unknownTypes,"f").get(e)&&(this.hasClass(e)||this.hasDef(e))}hash(e){return this.createType("CodecHash",__classPrivateFieldGet(this,_TypeRegistry_hasher,"f").call(this,e))}register(e,t){if(isFunction$1(e))__classPrivateFieldGet(this,_TypeRegistry_classes,"f").set(e.name,e);else if(isString(e)){if(!isFunction$1(t))throw new Error(`Expected class definition passed to '${e}' registration`);if(e===t.toString())throw new Error(`Unable to register circular ${e} === ${e}`);__classPrivateFieldGet(this,_TypeRegistry_classes,"f").set(e,t);}else __classPrivateFieldGet(this,_TypeRegistry_registerObject,"f").call(this,e);}setChainProperties(e){e&&__classPrivateFieldSet(this,_TypeRegistry_chainProperties,e,"f");}setHasher(e){__classPrivateFieldSet(this,_TypeRegistry_hasher,e||blake2AsU8a,"f");}setKnownTypes(e){__classPrivateFieldSet(this,_TypeRegistry_knownTypes,e,"f");}setLookup(e){__classPrivateFieldSet(this,_TypeRegistry_lookup,e,"f"),e.register();}setMetadata(e,t,s){__classPrivateFieldSet(this,_TypeRegistry_metadata,e.asLatest,"f"),__classPrivateFieldSet(this,_TypeRegistry_metadataVersion,e.version,"f"),__classPrivateFieldSet(this,_TypeRegistry_firstCallIndex,null,"f"),__classPrivateFieldGet(this,_TypeRegistry_registerLookup,"f").call(this,__classPrivateFieldGet(this,_TypeRegistry_metadata,"f").lookup),injectExtrinsics(this,__classPrivateFieldGet(this,_TypeRegistry_metadata,"f"),__classPrivateFieldGet(this,_TypeRegistry_metadataVersion,"f"),__classPrivateFieldGet(this,_TypeRegistry_metadataCalls,"f"),__classPrivateFieldGet(this,_TypeRegistry_moduleMap,"f")),injectErrors(this,__classPrivateFieldGet(this,_TypeRegistry_metadata,"f"),__classPrivateFieldGet(this,_TypeRegistry_metadataVersion,"f"),__classPrivateFieldGet(this,_TypeRegistry_metadataErrors,"f")),injectEvents(this,__classPrivateFieldGet(this,_TypeRegistry_metadata,"f"),__classPrivateFieldGet(this,_TypeRegistry_metadataVersion,"f"),__classPrivateFieldGet(this,_TypeRegistry_metadataEvents,"f"));const[i]=Object.keys(__classPrivateFieldGet(this,_TypeRegistry_metadataCalls,"f")).sort(sortDecimalStrings);if(i){const[e]=Object.keys(__classPrivateFieldGet(this,_TypeRegistry_metadataCalls,"f")[i]).sort(sortDecimalStrings);e&&__classPrivateFieldSet(this,_TypeRegistry_firstCallIndex,new Uint8Array([parseInt(i,10),parseInt(e,10)]),"f");}this.setSignedExtensions(t||(__classPrivateFieldGet(this,_TypeRegistry_metadata,"f").extrinsic.version.gt(BN_ZERO)?__classPrivateFieldGet(this,_TypeRegistry_metadata,"f").extrinsic.signedExtensions.map((({identifier:e})=>e.toString())):fallbackExtensions),s),this.setChainProperties(extractProperties(this,e));}setSignedExtensions(e=fallbackExtensions,t){__classPrivateFieldSet(this,_TypeRegistry_signedExtensions,e,"f"),__classPrivateFieldSet(this,_TypeRegistry_userExtensions,t,"f");const s=findUnknownExtensions(__classPrivateFieldGet(this,_TypeRegistry_signedExtensions,"f"),__classPrivateFieldGet(this,_TypeRegistry_userExtensions,"f"));s.length&&l$5.warn(`Unknown signed extensions ${s.join(", ")} found, treating them as no-effect`);}}_TypeRegistry_chainProperties=new WeakMap,_TypeRegistry_classes=new WeakMap,_TypeRegistry_definitions=new WeakMap,_TypeRegistry_firstCallIndex=new WeakMap,_TypeRegistry_hasher=new WeakMap,_TypeRegistry_knownTypes=new WeakMap,_TypeRegistry_lookup=new WeakMap,_TypeRegistry_metadata=new WeakMap,_TypeRegistry_metadataVersion=new WeakMap,_TypeRegistry_signedExtensions=new WeakMap,_TypeRegistry_unknownTypes=new WeakMap,_TypeRegistry_userExtensions=new WeakMap,_TypeRegistry_knownDefaults=new WeakMap,_TypeRegistry_knownDefinitions=new WeakMap,_TypeRegistry_metadataCalls=new WeakMap,_TypeRegistry_metadataErrors=new WeakMap,_TypeRegistry_metadataEvents=new WeakMap,_TypeRegistry_moduleMap=new WeakMap,_TypeRegistry_registerObject=new WeakMap,_TypeRegistry_registerLookup=new WeakMap;

	function refCountDelay(e=1750){return r=>{let[s,u,b,n]=[0,0,Subscription.EMPTY,Subscription.EMPTY];return new Observable((c=>(r.subscribe(c),0==u++&&(1===s?n.unsubscribe():b=r.connect(),s=3),()=>{0==--u&&(2===s?(s=0,n.unsubscribe()):(s=1,n=asapScheduler.schedule((()=>{s=0,b.unsubscribe();}),e)));})))}}

	function CMP(t,r){return stringify({t:t})===stringify({t:r})}function ERR(t){throw t}function NOOP(){}function drr({delay:t,skipChange:r=!1,skipTimeout:i=!1}={}){return n=>n.pipe(catchError(ERR),r?tap(NOOP):distinctUntilChanged(CMP),publishReplay(1),i?refCount():refCountDelay(t))}

	function memo(r,e){const o=memoize(((...r)=>new Observable((m=>{const t=e(...r).subscribe(m);return ()=>{o.unmemoize(...r),t.unsubscribe();}})).pipe(drr())),{getInstanceId:()=>r});return o}

	var _RpcCore_instanceId,_RpcCore_registryDefault,_RpcCore_getBlockRegistry,_RpcCore_getBlockHash,_RpcCore_storageCache;const l$4=logger("rpc-core"),EMPTY_META={fallback:void 0,modifier:{isOptional:!0},type:{asMap:{linked:{isTrue:!1}},isMap:!1}};function logErrorMessage(e,{noErrorLog:t,params:r,type:s},a){if(t)return;const o=r.map((({isOptional:e,name:t,type:r})=>`${t}${e?"?":""}: ${r}`)).join(", ");l$4.error(`${e}(${o}): ${s}:: ${a.message}`);}function isTreatAsHex(e){return ["0x3a636f6465"].includes(e.toHex())}class RpcCore{constructor(e,t,r,s={}){if(_RpcCore_instanceId.set(this,void 0),_RpcCore_registryDefault.set(this,void 0),_RpcCore_getBlockRegistry.set(this,void 0),_RpcCore_getBlockHash.set(this,void 0),_RpcCore_storageCache.set(this,new Map),this.mapping=new Map,this.sections=[],!r||!isFunction$1(r.send))throw new Error("Expected Provider to API create");__classPrivateFieldSet(this,_RpcCore_instanceId,e,"f"),__classPrivateFieldSet(this,_RpcCore_registryDefault,t,"f"),this.provider=r;const a=Object.keys(rpcDefinitions);this.sections.push(...a),this.addUserInterfaces(s);}get isConnected(){return this.provider.isConnected}connect(){return this.provider.connect()}disconnect(){return this.provider.disconnect()}setRegistrySwap(e){__classPrivateFieldSet(this,_RpcCore_getBlockRegistry,memoize(e,{getInstanceId:()=>__classPrivateFieldGet(this,_RpcCore_instanceId,"f")}),"f");}setResolveBlockHash(e){__classPrivateFieldSet(this,_RpcCore_getBlockHash,memoize(e,{getInstanceId:()=>__classPrivateFieldGet(this,_RpcCore_instanceId,"f")}),"f");}addUserInterfaces(e){this.sections.push(...Object.keys(e).filter((e=>!this.sections.includes(e))));for(let t=0;t<this.sections.length;t++){const r=this.sections[t],s=objectSpread({},rpcDefinitions[r],e[r]),a=Object.keys(s);for(let e=0;e<a.length;e++){const t=a[e],o=s[t],i=o.endpoint||`${r}_${t}`;if(!this.mapping.has(i)){const e=!!o.pubsub;this[r]||(this[r]={}),this.mapping.set(i,objectSpread({},o,{isSubscription:e,jsonrpc:i,method:t,section:r})),lazyMethod(this[r],t,(()=>e?this._createMethodSubscribe(r,t,o):this._createMethodSend(r,t,o)));}}}}_memomize(e,t){const r={getInstanceId:()=>__classPrivateFieldGet(this,_RpcCore_instanceId,"f")},s=memoize(e(!0),r);return s.raw=memoize(e(!1),r),s.meta=t,s}_formatResult(e,t,r,s,a,o,i){return e?this._formatOutput(t,r,s,a,o,i):i}_createMethodSend(e,t,r){const s=r.endpoint||`${e}_${t}`,a=r.params.findIndex((({isHistoric:e})=>e));let o=null;const i=async(e,o)=>{const i=-1===a?null:o[a],n=i&&"BlockNumber"===r.params[a].type?await(__classPrivateFieldGet(this,_RpcCore_getBlockHash,"f")?.call(this,i)):i,{registry:c}=e&&n&&__classPrivateFieldGet(this,_RpcCore_getBlockRegistry,"f")?await __classPrivateFieldGet(this,_RpcCore_getBlockRegistry,"f").call(this,u8aToU8a(n)):{registry:__classPrivateFieldGet(this,_RpcCore_registryDefault,"f")},l=this._formatInputs(c,null,r,o),p=await this.provider.send(s,l.map((e=>e.toJSON())),!!n);return this._formatResult(e,c,n,t,r,l,p)};return o=this._memomize((e=>(...s)=>{const n=e&&-1!==a&&!!s[a];return new Observable((a=>(i(e,s).then((e=>{a.next(e),a.complete();})).catch((e=>{logErrorMessage(t,r,e),a.error(e),a.complete();})),()=>{e?o?.unmemoize(...s):o?.raw.unmemoize(...s);}))).pipe(publishReplay(1),n?refCountDelay():refCount())}),r),o}_createSubscriber({paramsJson:e,subName:t,subType:r,update:s},a){return new Promise(((o,i)=>{this.provider.subscribe(r,t,e,s).then(o).catch((e=>{a(e),i(e);}));}))}_createMethodSubscribe(e,t,r){const[s,a,o]=r.pubsub,i=`${e}_${a}`,n=`${e}_${o}`,c=`${e}_${s}`;let l=null;return l=this._memomize((e=>(...s)=>new Observable((a=>{let o=Promise.resolve(null);const p=__classPrivateFieldGet(this,_RpcCore_registryDefault,"f"),_=e=>{logErrorMessage(t,r,e),a.error(e);};try{const n=this._formatInputs(p,null,r,s),l=n.map((e=>e.toJSON())),h=(s,o)=>{if(s)logErrorMessage(t,r,s);else try{a.next(this._formatResult(e,p,null,t,r,n,o));}catch(s){a.error(s);}};o=this._createSubscriber({paramsJson:l,subName:i,subType:c,update:h},_);}catch(e){_(e);}return ()=>{e?l?.unmemoize(...s):l?.raw.unmemoize(...s),o.then((e=>isNull(e)?Promise.resolve(!1):this.provider.unsubscribe(c,n,e))).catch((e=>logErrorMessage(t,r,e)));}})).pipe(drr())),r),l}_formatInputs(e,t,r,s){const a=r.params.filter((({isOptional:e})=>!e)).length,o=a===r.params.length?"":` (${r.params.length-a} optional)`;if(s.length<a||s.length>r.params.length)throw new Error(`Expected ${r.params.length} parameters${o}, ${s.length} found instead`);return s.map(((s,a)=>e.createTypeUnsafe(r.params[a].type,[s],{blockHash:t})))}_formatOutput(e,t,r,s,a,o){if("StorageData"===s.type){const r=a[0];return this._formatStorageData(e,t,r,o)}if("StorageChangeSet"===s.type){const t=a[0];return t?this._formatStorageSet(e,o.block,t,o.changes):e.createType("StorageChangeSet",o)}if("Vec<StorageChangeSet>"===s.type){const t=o.map((({block:t,changes:r})=>[e.createType("Hash",t),this._formatStorageSet(e,t,a[0],r)]));return "queryStorageAt"===r?t[0][1]:t}return e.createTypeUnsafe(s.type,[o],{blockHash:t})}_formatStorageData(e,t,r,s){const a=isNull(s),o=a?null:isTreatAsHex(r)?s:u8aToU8a(s);return this._newType(e,t,r,o,a)}_formatStorageSet(e,t,r,s){const a=1!==r.length;return r.reduce(((r,o,i)=>(r.push(this._formatStorageSetEntry(e,t,o,s,a,i)),r)),[])}_formatStorageSetEntry(e,t,r,s,a,o){const i=r.toHex(),n=s.find((([e])=>e===i)),c=isUndefined(n);if(c&&a){const e=__classPrivateFieldGet(this,_RpcCore_storageCache,"f").get(i);if(e)return e}const l=c?null:n[1],p=isNull(l),_=p||isTreatAsHex(r)?l:u8aToU8a(l),h=this._newType(e,t,r,_,p,o);return __classPrivateFieldGet(this,_RpcCore_storageCache,"f").set(i,h),h}_newType(e,t,r,s,a,o=-1){const i=r.outputType||"Raw",n=r.meta||EMPTY_META,c=-1===o?"":` entry ${o}:`;try{return e.createTypeUnsafe(i,[a?n.fallback?i.includes("Linkage<")?u8aConcat(hexToU8a(n.fallback.toHex()),new Uint8Array(2)):hexToU8a(n.fallback.toHex()):void 0:n.modifier.isOptional?e.createTypeUnsafe(i,[s],{blockHash:t,isPedantic:!0}):s],{blockHash:t,isFallback:a&&!!n.fallback,isOptional:n.modifier.isOptional,isPedantic:!n.modifier.isOptional})}catch(e){throw new Error(`Unable to decode storage ${r.section||"unknown"}.${r.method||"unknown"}:${c}: ${e.message}`)}}}_RpcCore_instanceId=new WeakMap,_RpcCore_registryDefault=new WeakMap,_RpcCore_getBlockRegistry=new WeakMap,_RpcCore_getBlockHash=new WeakMap,_RpcCore_storageCache=new WeakMap;

	function unwrapBlockNumber(r){return isCompact(r.number)?r.number.unwrap():r.number}

	const deriveNoopCache={del:()=>{},forEach:()=>{},get:()=>{},set:(e,a)=>a};

	const CHACHE_EXPIRY=6048e5;let deriveCache;function wrapCache(e,c){return {del:r=>c.del(`${e}${r}`),forEach:c.forEach,get:r=>{const a=`${e}${r}`,t=c.get(a);if(t)return t.x=Date.now(),c.set(a,t),t.v},set:(r,a)=>{c.set(`${e}${r}`,{v:a,x:Date.now()});}}}function clearCache(e){const c=Date.now(),r=[];e.forEach(((e,{x:a})=>{c-a>CHACHE_EXPIRY&&r.push(e);})),r.forEach((c=>e.del(c)));}function setDeriveCache(e="",c){deriveCache=c?wrapCache(`derive:${e}:`,c):deriveNoopCache,c&&clearCache(c);}setDeriveCache();

	function firstObservable(r){return r.pipe(map((([r])=>r)))}function firstMemo(r){return (o,e)=>memo(o,((...o)=>firstObservable(r(e,...o))))}

	function lazyDeriveSection(o,t,e,l){lazyMethod(o,t,(()=>lazyMethods({},e(t),(o=>l(t,o)))));}

	function accountId(t,e){return memo(t,(t=>{const r=isU8a(t)?t:decodeAddress((t||"").toString());if(r.length>8)return of(e.registry.createType("AccountId",r));const o=e.registry.createType("AccountIndex",r);return e.derive.accounts.indexToId(o.toString()).pipe(map((t=>assertReturn(t,"Unable to retrieve accountId"))))}))}

	function parseFlags(e,[r,o,t,i,m]){const n=e&&e.toString(),s=e=>e.toString()===n;return {isCouncil:(r?.map((e=>Array.isArray(e)?e[0]:e.who))||o||[]).some(s),isSociety:(i||[]).some(s),isSudo:m?.toString()===n,isTechCommittee:(t||[]).some(s)}}function _flags(e,r){return memo(e,(()=>{const e=[void 0,[],[],[],void 0],o=[(r.query.phragmenElection||r.query.electionsPhragmen||r.query.elections)?.members,r.query.council?.members,r.query.technicalCommittee?.members,r.query.society?.members,r.query.sudo?.key],t=o.filter((e=>e));return t.length?r.queryMulti(t).pipe(map((r=>{let t=-1;for(let i=0;i<o.length;i++)isFunction$1(o[i])&&(e[i]=r[++t]);return e}))):of(e)}))}function flags(e,r){return memo(e,(e=>r.derive.accounts._flags().pipe(map((r=>parseFlags(e,r))))))}

	function idAndIndex(o,t){return memo(o,(o=>{try{const e=isU8a(o)?o:decodeAddress((o||"").toString());if(e.length>8){const o=t.registry.createType("AccountId",e);return t.derive.accounts.idToIndex(o).pipe(map((t=>[o,t])))}const r=t.registry.createType("AccountIndex",e);return t.derive.accounts.indexToId(r.toString()).pipe(map((o=>[o,r])))}catch(o){return of([void 0,void 0])}}))}

	function idToIndex(e,o){return memo(e,(e=>o.derive.accounts.indexes().pipe(map((o=>(o||{})[e.toString()])))))}

	const UNDEF_HEX={toHex:()=>{}};function dataAsString(t){return t.isRaw?u8aToString(t.asRaw.toU8a(!0)):t.isNone?void 0:t.toHex()}function extractOther(t){return t.reduce(((t,[i,e])=>{const n=dataAsString(i),r=dataAsString(e);return n&&r&&(t[n]=r),t}),{})}function extractIdentity(t,i){if(!t?.isSome)return {judgements:[]};const{info:e,judgements:n}=t.unwrap(),r=dataAsString(e.display);return {display:i&&dataAsString(i[1])||r,displayParent:i&&r,email:dataAsString(e.email),image:dataAsString(e.image),judgements:n,legal:dataAsString(e.legal),other:extractOther(e.additional),parent:i&&i[0],pgp:e.pgpFingerprint.unwrapOr(UNDEF_HEX).toHex(),riot:dataAsString(e.riot),twitter:dataAsString(e.twitter),web:dataAsString(e.web)}}function getParent(t,i,e){if(i?.isSome)return of([i,void 0]);if(e?.isSome){const i=e.unwrap();return combineLatest([t.derive.accounts._identity(i[0]).pipe(map((([t])=>t))),of(i)])}return of([void 0,void 0])}function _identity(t,i){return memo(t,(t=>t&&i.query.identity?.identityOf?combineLatest([i.query.identity.identityOf(t),i.query.identity.superOf(t)]):of([void 0,void 0])))}function identity$1(t,i){return memo(t,(t=>i.derive.accounts._identity(t).pipe(switchMap((([t,e])=>getParent(i,t,e))),map((([t,i])=>extractIdentity(t,i))))))}const hasIdentity=firstMemo(((t,i)=>t.derive.accounts.hasIdentityMulti([i])));function hasIdentityMulti(t,i){return memo(t,(t=>i.query.identity?.identityOf?combineLatest([i.query.identity.identityOf.multi(t),i.query.identity.superOf.multi(t)]).pipe(map((([t,i])=>t.map(((t,e)=>{const n=i[e],r=n&&n.isSome?n.unwrap()[0].toString():void 0;let a;if(t&&t.isSome){const i=dataAsString(t.unwrap().info.display);i&&!isHex(i)&&(a=i);}return {display:a,hasIdentity:!(!a&&!r),parentId:r}}))))):of(t.map((()=>({hasIdentity:!1}))))))}

	function indexToId(o,i){return memo(o,(o=>i.query.indices?i.query.indices.accounts(o).pipe(map((o=>o.unwrapOr([])[0]))):of(void 0)))}

	let indicesCache=null;function queryAccounts(e){return e.query.indices.accounts.entries().pipe(map((i=>i.reduce(((i,[r,t])=>(t.isSome&&(i[t.unwrap()[0].toString()]=e.registry.createType("AccountIndex",r.args[0])),i)),{}))))}function indexes$1(e,i){return memo(e,(()=>indicesCache?of(indicesCache):(i.query.indices?queryAccounts(i).pipe(startWith({})):of({})).pipe(map((e=>(indicesCache=e,e))))))}

	function retrieveNick(n,t){return (t&&n.query.nicks?.nameOf?n.query.nicks.nameOf(t):of(void 0)).pipe(map((t=>t?.isSome?u8aToString(t.unwrap()[0]).substring(0,n.consts.nicks.maxLength.toNumber()):void 0)))}function info$4(n,t){return memo(n,(n=>t.derive.accounts.idAndIndex(n).pipe(switchMap((([n,e])=>combineLatest([of({accountId:n,accountIndex:e}),t.derive.accounts.identity(n),retrieveNick(t,n)]))),map((([{accountId:n,accountIndex:t},e,i])=>({accountId:n,accountIndex:t,identity:e,nickname:i}))))))}

	var accounts$1 = /*#__PURE__*/Object.freeze({
		__proto__: null,
		_flags: _flags,
		_identity: _identity,
		accountId: accountId,
		flags: flags,
		hasIdentity: hasIdentity,
		hasIdentityMulti: hasIdentityMulti,
		idAndIndex: idAndIndex,
		idToIndex: idToIndex,
		identity: identity$1,
		indexToId: indexToId,
		indexes: indexes$1,
		info: info$4
	});

	function getInstance(t,e){const n=t.registry.getModuleInstances(t.runtimeVersion.specName,e),o=n&&n.length?n[0]:e;return t.query[o]}function withSection(t,e){return (n,o)=>memo(n,e(getInstance(o,t),o,n))}function callMethod(t,e){return n=>withSection(n,(n=>()=>isFunction$1(n?.[t])?n[t]():of(e)))}

	const members$5=callMethod("members",[]);

	function prime$4(i){return withSection(i,(i=>()=>isFunction$1(i?.prime)?i.prime().pipe(map((i=>i.unwrapOr(null)))):of(null)))}

	function parse$4(o,[r,p,t]){return p.map(((p,s)=>({hash:o.registry.createType("Hash",r[s]),proposal:p&&p.isSome?p.unwrap():null,votes:t[s].unwrapOr(null)})))}function _proposalsFrom(o,r,p){return (isFunction$1(r?.proposals)&&p.length?combineLatest([of(p),r.proposalOf.multi(p).pipe(catchError((()=>of(p.map((()=>null)))))),r.voting.multi(p)]):of([[],[],[]])).pipe(map((r=>parse$4(o,r))))}function hasProposals$4(o){return withSection(o,(o=>()=>of(isFunction$1(o?.proposals))))}function proposals$6(o){return withSection(o,((r,p)=>()=>p.derive[o].proposalHashes().pipe(switchMap((o=>_proposalsFrom(p,r,o))))))}function proposal$4(o){return withSection(o,((o,r)=>p=>isFunction$1(o?.proposals)?firstObservable(_proposalsFrom(r,o,[p])):of(null)))}const proposalCount$4=callMethod("proposalCount",null);const proposalHashes$4=callMethod("proposals",[]);

	const members$4=members$5("allianceMotion");const hasProposals$3=hasProposals$4("allianceMotion");const proposal$3=proposal$4("allianceMotion");const proposalCount$3=proposalCount$4("allianceMotion");const proposalHashes$3=proposalHashes$4("allianceMotion");const proposals$5=proposals$6("allianceMotion");const prime$3=prime$4("allianceMotion");

	var alliance = /*#__PURE__*/Object.freeze({
		__proto__: null,
		hasProposals: hasProposals$3,
		members: members$4,
		prime: prime$3,
		proposal: proposal$3,
		proposalCount: proposalCount$3,
		proposalHashes: proposalHashes$3,
		proposals: proposals$5
	});

	function getQueryInterface(e){return e.query.voterBagsList||e.query.bagsList||e.query.voterList}

	function orderBags(e,t){const r=e.map(((e,r)=>({bag:t[r].unwrapOr(null),id:e,key:e.toString()}))).sort(((e,t)=>t.id.cmp(e.id))),o=r.length-1;return r.map(((e,t)=>objectSpread(e,{bagLower:t===o?BN_ZERO:r[t+1].id,bagUpper:e.id,index:t})))}function _getIds(e,t){const r=getQueryInterface(t);return memo(e,(e=>{const t=e.map((e=>bnToBn(e)));return t.length?r.listBags.multi(t).pipe(map((e=>orderBags(t,e)))):of([])}))}function all$1(e,t){const r=getQueryInterface(t);return memo(e,(()=>r.listBags.keys().pipe(switchMap((e=>t.derive.bagsList._getIds(e.map((({args:[e]})=>e))))),map((e=>e.filter((({bag:e})=>e)))))))}function get(e,t){return memo(e,(e=>t.derive.bagsList._getIds([bnToBn(e)]).pipe(map((e=>e[0])))))}

	function expand(e,t){return memo(e,(e=>t.derive.bagsList.listNodes(e.bag).pipe(map((t=>objectSpread({nodes:t},e))))))}function getExpanded(e,t){return memo(e,(e=>t.derive.bagsList.get(e).pipe(switchMap((e=>t.derive.bagsList.expand(e))))))}

	function traverseLinks(e,t){const r=new BehaviorSubject(t),o=getQueryInterface(e);return r.pipe(switchMap((e=>o.listNodes(e))),tap((e=>{nextTick((()=>{e.isSome&&e.value.next.isSome?r.next(e.unwrap().next.unwrap()):r.complete();}));})),toArray(),map((e=>e.map((e=>e.unwrap())))))}function listNodes(e,t){return memo(e,(e=>e&&e.head.isSome?traverseLinks(t,e.head.unwrap()):of([])))}

	var bagsList = /*#__PURE__*/Object.freeze({
		__proto__: null,
		_getIds: _getIds,
		all: all$1,
		expand: expand,
		get: get,
		getExpanded: getExpanded,
		listNodes: listNodes
	});

	const VESTING_ID="0x76657374696e6720";function calcLocked(e,a,t){let n=e.registry.createType("Balance"),c=[],r=e.registry.createType("Balance"),o=!1;if(Array.isArray(t)){c=t.filter((({until:e})=>!e||a&&e.gt(a))),o=c.some((({amount:e})=>e&&e.isMax())),r=e.registry.createType("Balance",c.filter((({id:e})=>e.eq(VESTING_ID))).reduce(((e,{amount:a})=>e.iadd(a)),new BN(0)));const l=c.filter((({amount:e})=>e&&!e.isMax()));l.length&&(n=e.registry.createType("Balance",bnMax(...l.map((({amount:e})=>e)))));}return {allLocked:o,lockedBalance:n,lockedBreakdown:c,vestingLocked:r}}function calcShared(e,a,t,n){const{allLocked:c,lockedBalance:r,lockedBreakdown:o,vestingLocked:l}=calcLocked(e,a,n);return objectSpread({},t,{availableBalance:e.registry.createType("Balance",c?0:bnMax(new BN(0),t?.freeBalance?t.freeBalance.sub(r):new BN(0))),lockedBalance:r,lockedBreakdown:o,vestingLocked:l})}function calcVesting(e,a,t){const n=t||[],c=!a.vestingLocked.isZero(),r=n.map((({locked:a,perBlock:t,startingBlock:n})=>e.gt(n)?bnMin(a,t.mul(e.sub(n))):BN_ZERO)),o=r.reduce(((e,a)=>e.iadd(a)),new BN(0)),l=n.reduce(((e,{locked:a})=>e.iadd(a)),new BN(0));return {isVesting:c,vestedBalance:o,vestedClaimable:c?a.vestingLocked.sub(l.sub(o)):BN_ZERO,vesting:n.map((({locked:e,perBlock:a,startingBlock:t},n)=>({endBlock:e.div(a).iadd(t),locked:e,perBlock:a,startingBlock:t,vested:r[n]}))).filter((({locked:e})=>!e.isZero())),vestingTotal:l}}function calcBalances$1(e,a){const[t,[n,c,r],o]=a,l=calcShared(e,o,t,c[0]);return objectSpread(l,calcVesting(o,l,n),{accountId:t.accountId,accountNonce:t.accountNonce,additional:c.slice(1).map(((a,n)=>calcShared(e,o,t.additional[n],a))),namedReserves:r})}function queryOld(e,a){return combineLatest([e.query.balances.locks(a),e.query.balances.vesting(a)]).pipe(map((([a,t])=>{let n=null;if(t.isSome){const{offset:a,perBlock:c,startingBlock:r}=t.unwrap();n=e.registry.createType("VestingInfo",{locked:a,perBlock:c,startingBlock:r});}return [n?[n]:null,[a],[]]})))}const isNonNullable=e=>!!e;function createCalls(e){return [e.map((e=>!e)),e.filter(isNonNullable)]}function queryCurrent(e,a,t=["balances"]){const[n,c]=createCalls(t.map((a=>e.derive[a]?.customLocks||e.query[a]?.locks))),[r,o]=createCalls(t.map((a=>e.query[a]?.reserves)));return combineLatest([e.query.vesting?.vesting?e.query.vesting.vesting(a):of(e.registry.createType("Option<VestingInfo>")),c.length?combineLatest(c.map((e=>e(a)))):of([]),o.length?combineLatest(o.map((e=>e(a)))):of([])]).pipe(map((([a,t,c])=>{let o=-1,l=-1;const i=a.unwrapOr(null);return [i?Array.isArray(i)?i:[i]:null,n.map((a=>a?e.registry.createType("Vec<BalanceLock>"):t[++o])),r.map((a=>a?e.registry.createType("Vec<PalletBalancesReserveData>"):c[++l]))]})))}function all(e,a){const t=a.registry.getModuleInstances(a.runtimeVersion.specName,"balances");return memo(e,(e=>combineLatest([a.derive.balances.account(e),isFunction$1(a.query.system?.account)||isFunction$1(a.query.balances?.account)?queryCurrent(a,e,t):queryOld(a,e)]).pipe(switchMap((([e,t])=>combineLatest([of(e),of(t),a.derive.chain.bestNumber()]))),map((e=>calcBalances$1(a,e))))))}

	function zeroBalance(e){return e.registry.createType("Balance")}function getBalance(e,[n,c,a,t]){const r=e.registry.createType("Balance",n.toBn());return {freeBalance:n,frozenFee:a,frozenMisc:t,reservedBalance:c,votingBalance:r}}function calcBalances(e,[n,[c,[a,...t]]]){return objectSpread({accountId:n,accountNonce:c,additional:t.map((n=>getBalance(e,n)))},getBalance(e,a))}function queryBalancesFree(e,n){return combineLatest([e.query.balances.freeBalance(n),e.query.balances.reservedBalance(n),e.query.system.accountNonce(n)]).pipe(map((([n,c,a])=>[a,[[n,c,zeroBalance(e),zeroBalance(e)]]])))}function queryNonceOnly(e,n){const c=n=>[n,[[zeroBalance(e),zeroBalance(e),zeroBalance(e),zeroBalance(e)]]];return isFunction$1(e.query.system.account)?e.query.system.account(n).pipe(map((({nonce:e})=>c(e)))):isFunction$1(e.query.system.accountNonce)?e.query.system.accountNonce(n).pipe(map((e=>c(e)))):of(c(e.registry.createType("Index")))}function queryBalancesAccount(e,n,c=["balances"]){const a=c.map((n=>e.derive[n]?.customAccount||e.query[n]?.account)).filter((e=>isFunction$1(e))),t=(e,n)=>[e,n.map((({feeFrozen:e,free:n,miscFrozen:c,reserved:a})=>[n,a,e,c]))];return a.length?isFunction$1(e.query.system.account)?combineLatest([e.query.system.account(n),...a.map((e=>e(n)))]).pipe(map((([{nonce:e},...n])=>t(e,n)))):combineLatest([e.query.system.accountNonce(n),...a.map((e=>e(n)))]).pipe(map((([e,...n])=>t(e,n)))):queryNonceOnly(e,n)}function querySystemAccount(e,n){return e.query.system.account(n).pipe(map((n=>{const c=n.nonce?n.data:n[1],a=n.nonce||n[0];if(!c||c.isEmpty)return [a,[[zeroBalance(e),zeroBalance(e),zeroBalance(e),zeroBalance(e)]]];const{feeFrozen:t,free:r,miscFrozen:o,reserved:u}=c;return [a,[[r,u,t,o]]]})))}function account$1(e,n){const c=n.registry.getModuleInstances(n.runtimeVersion.specName,"balances"),a=c&&"balances"!==c[0];return memo(e,(e=>n.derive.accounts.accountId(e).pipe(switchMap((e=>e?combineLatest([of(e),a?queryBalancesAccount(n,e,c):isFunction$1(n.query.system?.account)?querySystemAccount(n,e):isFunction$1(n.query.balances?.account)?queryBalancesAccount(n,e):isFunction$1(n.query.balances?.freeBalance)?queryBalancesFree(n,e):queryNonceOnly(n,e)]):of([n.registry.createType("AccountId"),[n.registry.createType("Index"),[[zeroBalance(n),zeroBalance(n),zeroBalance(n),zeroBalance(n)]]]]))),map((e=>calcBalances(n,e))))))}

	function votingBalances(e,o){return memo(e,(e=>e&&e.length?combineLatest(e.map((e=>o.derive.balances.account(e)))):of([])))}

	const votingBalance=all;

	var balances = /*#__PURE__*/Object.freeze({
		__proto__: null,
		account: account$1,
		all: all,
		votingBalance: votingBalance,
		votingBalances: votingBalances
	});

	function filterBountiesProposals(o,t){const r=o.tx.bounties?o.tx.bounties:o.tx.treasury,s=[r.approveBounty,r.closeBounty,r.proposeCurator,r.unassignCurator];return t.filter((o=>s.find((t=>o.proposal&&t.is(o.proposal)))))}

	function parseResult$2([o,t,e,s]){const r=[];return o.forEach(((o,i)=>{o.isSome&&r.push({bounty:o.unwrap(),description:t[i].unwrapOrDefault().toUtf8(),index:e[i],proposals:s.filter((o=>o.proposal&&e[i].eq(o.proposal.args[0])))});})),r}function bounties$1(o,t){const e=t.query.bounties||t.query.treasury;return memo(o,(()=>e.bounties?combineLatest([e.bountyCount(),t.query.council?t.query.council.proposalCount():of(0)]).pipe(switchMap((()=>combineLatest([e.bounties.keys(),t.derive.council?t.derive.council.proposals():of([])]))),switchMap((([o,s])=>{const r=o.map((({args:[o]})=>o));return combineLatest([e.bounties.multi(r),e.bountyDescriptions.multi(r),of(r),of(filterBountiesProposals(t,s))])})),map(parseResult$2)):of(parseResult$2([[],[],[],[]]))))}

	var bounties = /*#__PURE__*/Object.freeze({
		__proto__: null,
		bounties: bounties$1
	});

	function createBlockNumberDerive(o){return (s,e)=>memo(s,(()=>o(e).pipe(map(unwrapBlockNumber))))}function getAuthorDetails(o,s){if(s.authorMapping&&s.authorMapping.mappingWithDeposit){const e=o.digest.logs[0]&&(o.digest.logs[0].isConsensus&&o.digest.logs[0].asConsensus[1]||o.digest.logs[0].isPreRuntime&&o.digest.logs[0].asPreRuntime[1]);if(e)return combineLatest([of(o),s.session?s.session.validators():of(null),s.authorMapping.mappingWithDeposit(e).pipe(map((o=>o.unwrapOr({account:null}).account)))])}return combineLatest([of(o),s.session?s.session.validators():of(null),of(null)])}

	const bestNumber=createBlockNumberDerive((e=>e.rpc.chain.subscribeNewHeads()));

	const bestNumberFinalized=createBlockNumberDerive((e=>e.rpc.chain.subscribeFinalizedHeads()));

	function bestNumberLag(e,r){return memo(e,(()=>combineLatest([r.derive.chain.bestNumber(),r.derive.chain.bestNumberFinalized()]).pipe(map((([e,m])=>r.registry.createType("BlockNumber",e.sub(m)))))))}

	function extractAuthor(t,s=[]){const[e]=t.logs.filter((t=>t.isConsensus)),[r]=t.logs.filter((t=>t.isPreRuntime)),[o]=t.logs.filter((t=>t.isSeal));let n;try{if(r){const[t,e]=r.asPreRuntime;n=t.extractAuthor(e,s);}if(!n&&e){const[t,r]=e.asConsensus;n=t.extractAuthor(r,s);}if(!n&&o){const[t,e]=o.asSeal;n=t.extractAuthor(e,s);}}catch{}return n}

	function createHeaderExtended(t,e,r,s){var a;const i=t.createClass("Header");return a=new WeakMap,new class extends i{constructor(t,e,r,s){super(t,e),a.set(this,void 0),__classPrivateFieldSet(this,a,s||extractAuthor(this.digest,r||[]),"f"),this.createdAtHash=e?.createdAtHash;}get author(){return __classPrivateFieldGet(this,a,"f")}}(t,e,r,s)}

	function mapExtrinsics(t,e){return t.map(((t,s)=>{let i,r;const a=e.filter((({phase:t})=>t.isApplyExtrinsic&&t.asApplyExtrinsic.eq(s))).map((({event:t})=>("system"===t.section&&("ExtrinsicSuccess"===t.method?r=t.data[0]:"ExtrinsicFailed"===t.method&&(i=t.data[0],r=t.data[1])),t)));return {dispatchError:i,dispatchInfo:r,events:a,extrinsic:t}}))}function createSignedBlockExtended(t,e,s,i,r){var a,c,n;const l=t.createClass("SignedBlock");return a=new WeakMap,c=new WeakMap,n=new WeakMap,new class extends l{constructor(t,e,s,i,r){super(t,e),a.set(this,void 0),c.set(this,void 0),n.set(this,void 0),__classPrivateFieldSet(this,a,r||extractAuthor(this.block.header.digest,i||[]),"f"),__classPrivateFieldSet(this,c,s||[],"f"),__classPrivateFieldSet(this,n,mapExtrinsics(this.block.extrinsics,__classPrivateFieldGet(this,c,"f")),"f"),this.createdAtHash=e?.createdAtHash;}get author(){return __classPrivateFieldGet(this,a,"f")}get events(){return __classPrivateFieldGet(this,c,"f")}get extrinsics(){return __classPrivateFieldGet(this,n,"f")}}(t,e,s,i,r)}

	function getHeader(e,t){return memo(e,(e=>combineLatest([t.rpc.chain.getHeader(e),t.queryAt(e)]).pipe(switchMap((([e,t])=>getAuthorDetails(e,t))),map((([e,t,r])=>createHeaderExtended((t||e).registry,e,t,r))))))}

	function getBlock(e,t){return memo(e,(e=>combineLatest([t.rpc.chain.getBlock(e),t.queryAt(e)]).pipe(switchMap((([e,t])=>combineLatest([of(e),t.system.events(),getAuthorDetails(e.block.header,t)]))),map((([e,t,[,o,i]])=>createSignedBlockExtended(t.registry,e,t,o,i))))))}

	function getBlockByNumber(e,i){return memo(e,(e=>i.rpc.chain.getBlockHash(e).pipe(switchMap((e=>i.derive.chain.getBlock(e))))))}

	function _getHeaderRange(e,r){return memo(e,((e,a,t=[])=>r.rpc.chain.getHeader(e).pipe(switchMap((e=>e.parentHash.eq(a)?of([e,...t]):r.derive.chain._getHeaderRange(e.parentHash,a,[e,...t]))))))}function subscribeFinalizedHeads(e,r){return memo(e,(()=>{let e=null;return r.rpc.chain.subscribeFinalizedHeads().pipe(switchMap((a=>{const t=e,i=a.parentHash;return e=a.createdAtHash=a.hash,null===t||i.eq(t)?of(a):r.derive.chain._getHeaderRange(i,t,[a]).pipe(switchMap((e=>from(e))))})))}))}

	function subscribeNewBlocks(e,i){return memo(e,(()=>i.derive.chain.subscribeNewHeads().pipe(switchMap((e=>i.derive.chain.getBlock(e.createdAtHash||e.hash))))))}

	function subscribeNewHeads(e,t){return memo(e,(()=>t.rpc.chain.subscribeNewHeads().pipe(switchMap((e=>combineLatest([of(e),t.queryAt(e.hash)]))),switchMap((([e,t])=>getAuthorDetails(e,t))),map((([e,t,r])=>(e.createdAtHash=e.hash,createHeaderExtended(e.registry,e,t,r)))))))}

	var chain = /*#__PURE__*/Object.freeze({
		__proto__: null,
		_getHeaderRange: _getHeaderRange,
		bestNumber: bestNumber,
		bestNumberFinalized: bestNumberFinalized,
		bestNumberLag: bestNumberLag,
		getBlock: getBlock,
		getBlockByNumber: getBlockByNumber,
		getHeader: getHeader,
		subscribeFinalizedHeads: subscribeFinalizedHeads,
		subscribeNewBlocks: subscribeNewBlocks,
		subscribeNewHeads: subscribeNewHeads
	});

	function queryConstants(e){return of([e.consts.contracts.callBaseFee||e.registry.createType("Balance"),e.consts.contracts.contractFee||e.registry.createType("Balance"),e.consts.contracts.creationFee||e.registry.createType("Balance"),e.consts.contracts.transactionBaseFee||e.registry.createType("Balance"),e.consts.contracts.transactionByteFee||e.registry.createType("Balance"),e.consts.contracts.transferFee||e.registry.createType("Balance"),e.consts.contracts.rentByteFee,e.consts.contracts.rentDepositOffset,e.consts.contracts.surchargeReward,e.consts.contracts.tombstoneDeposit])}function fees(e,t){return memo(e,(()=>queryConstants(t).pipe(map((([e,t,s,r,c,n,a,o,i,y])=>({callBaseFee:e,contractFee:t,creationFee:s,rentByteFee:a,rentDepositOffset:o,surchargeReward:i,tombstoneDeposit:y,transactionBaseFee:r,transactionByteFee:c,transferFee:n}))))))}

	var contracts = /*#__PURE__*/Object.freeze({
		__proto__: null,
		fees: fees
	});

	function isVoter(e){return !Array.isArray(e)}function retrieveStakeOf(e){return e.stakeOf.entries().pipe(map((e=>e.map((([{args:[e]},r])=>[e,r])))))}function retrieveVoteOf(e){return e.votesOf.entries().pipe(map((e=>e.map((([{args:[e]},r])=>[e,r])))))}function retrievePrev(e,r){return combineLatest([retrieveStakeOf(r),retrieveVoteOf(r)]).pipe(map((([r,t])=>{const n=[];return t.forEach((([r,t])=>{n.push([r,{stake:e.registry.createType("Balance"),votes:t}]);})),r.forEach((([e,r])=>{const t=n.find((([r])=>r.eq(e)));t?t[1].stake=r:n.push([e,{stake:r,votes:[]}]);})),n})))}function retrieveCurrent(e){return e.voting.entries().pipe(map((e=>e.map((([{args:[e]},r])=>[e,isVoter(r)?{stake:r.stake,votes:r.votes}:{stake:r[0],votes:r[1]}])))))}function votes(e,r){const t=r.query.phragmenElection||r.query.electionsPhragmen||r.query.elections;return memo(e,(()=>t?t.stakeOf?retrievePrev(r,t):retrieveCurrent(t):of([])))}

	function votesOf(e,o){return memo(e,(e=>o.derive.council.votes().pipe(map((r=>(r.find((([o])=>o.eq(e)))||[null,{stake:o.registry.createType("Balance"),votes:[]}])[1])))))}

	const members$3=members$5("council");const hasProposals$2=hasProposals$4("council");const proposal$2=proposal$4("council");const proposalCount$2=proposalCount$4("council");const proposalHashes$2=proposalHashes$4("council");const proposals$4=proposals$6("council");const prime$2=prime$4("council");

	var council = /*#__PURE__*/Object.freeze({
		__proto__: null,
		hasProposals: hasProposals$2,
		members: members$3,
		prime: prime$2,
		proposal: proposal$2,
		proposalCount: proposalCount$2,
		proposalHashes: proposalHashes$2,
		proposals: proposals$4,
		votes: votes,
		votesOf: votesOf
	});

	function createChildKey(o){return u8aToHex(u8aConcat(":child_storage:default:",blake2AsU8a(u8aConcat("crowdloan",(o.fundIndex||o.trieIndex).toU8a()))))}function childKey(o,e){return memo(o,(o=>e.query.crowdloan.funds(o).pipe(map((o=>o.isSome?createChildKey(o.unwrap()):null)))))}

	function extractContributed(e,t){return t.filter((({event:{data:[,t],method:d,section:o}})=>"crowdloan"===o&&["Contributed","Withdrew"].includes(d)&&t.eq(e))).reduce(((e,{event:{data:[t],method:d}})=>("Contributed"===d?e.added.push(t.toHex()):e.removed.push(t.toHex()),e)),{added:[],blockHash:t.createdAtHash?.toHex()||"-",removed:[]})}

	const PAGE_SIZE_K=1e3;function _getUpdates(e,t){let o=[],r=[];return e.query.system.events().pipe(switchMap((e=>{const a=extractContributed(t,e);return a.added.length||a.removed.length?(o=o.concat(...a.added),r=r.concat(...a.removed),of({added:o,addedDelta:a.added,blockHash:e.createdAtHash?.toHex()||"-",removed:r,removedDelta:a.removed})):EMPTY})),startWith({added:o,addedDelta:[],blockHash:"-",removed:r,removedDelta:[]}))}function _eventTriggerAll(e,t){return e.query.system.events().pipe(switchMap((e=>e.filter((({event:{data:[e],method:o,section:r}})=>"crowdloan"===r&&["AllRefunded","Dissolved","PartiallyRefunded"].includes(o)&&e.eq(t))).length?of(e.createdAtHash?.toHex()||"-"):EMPTY)),startWith("-"))}function _getKeysPaged(e,t){const o=new BehaviorSubject(void 0);return o.pipe(switchMap((o=>e.rpc.childstate.getKeysPaged(t,"0x",PAGE_SIZE_K,o))),tap((e=>{nextTick((()=>{e.length===PAGE_SIZE_K?o.next(e[PAGE_SIZE_K-1].toHex()):o.complete();}));})),toArray(),map((e=>arrayFlatten(e))))}function _getAll(e,t,o){return _eventTriggerAll(e,t).pipe(switchMap((()=>isFunction$1(e.rpc.childstate.getKeysPaged)?_getKeysPaged(e,o):e.rpc.childstate.getKeys(o,"0x"))),map((e=>e.map((e=>e.toHex())))))}function _contributions$1(e,t,o){return combineLatest([_getAll(e,t,o),_getUpdates(e,t)]).pipe(map((([e,{added:t,blockHash:o,removed:r}])=>{const a={};return e.forEach((e=>{a[e]=!0;})),t.forEach((e=>{a[e]=!0;})),r.forEach((e=>{delete a[e];})),{blockHash:o,contributorsHex:Object.keys(a)}})))}function contributions(e,t){return memo(e,(e=>t.derive.crowdloan.childKey(e).pipe(switchMap((o=>o?_contributions$1(t,e,o):of({blockHash:"-",contributorsHex:[]}))))))}

	function _getValues(t,e,r){return combineLatest(r.map((r=>t.rpc.childstate.getStorage(e,r)))).pipe(map((e=>e.map((e=>t.registry.createType("Option<StorageData>",e))).map((e=>e.isSome?t.registry.createType("Balance",e.unwrap()):t.registry.createType("Balance"))).reduce(((t,e,i)=>objectSpread(t,{[r[i]]:e})),{}))))}function _watchOwnChanges(t,e,r,i){return t.query.system.events().pipe(switchMap((a=>{const o=extractContributed(e,a),n=i.filter((t=>o.added.includes(t)||o.removed.includes(t)));return n.length?_getValues(t,r,n):EMPTY})),startWith({}))}function _contributions(t,e,r,i){return combineLatest([_getValues(t,r,i),_watchOwnChanges(t,e,r,i)]).pipe(map((([t,e])=>objectSpread({},t,e))))}function ownContributions(t,e){return memo(t,((t,r)=>e.derive.crowdloan.childKey(t).pipe(switchMap((i=>i&&r.length?_contributions(e,t,i,r):of({}))))))}

	var crowdloan = /*#__PURE__*/Object.freeze({
		__proto__: null,
		childKey: childKey,
		contributions: contributions,
		ownContributions: ownContributions
	});

	function isOldInfo(t){return !!t.proposalHash}function isCurrentStatus(t){return !!t.tally}function compareRationals(t,e,o,n){for(;;){const a=t.div(e),s=o.div(n);if(a.lt(s))return !0;if(s.lt(a))return !1;const r=t.mod(e),i=o.mod(n);if(i.isZero())return !1;if(r.isZero())return !0;t=n,o=e,e=i,n=r;}}function calcPassingOther(t,e,{votedAye:o,votedNay:n,votedTotal:a}){const s=bnSqrt(a);return !s.isZero()&&(t.isSuperMajorityApprove?compareRationals(n,s,o,e):compareRationals(n,e,o,s))}function calcPassing(t,e,o){return t.isSimpleMajority?o.votedAye.gt(o.votedNay):calcPassingOther(t,e,o)}function calcVotesPrev(t){return t.reduce(((t,e)=>{const{balance:o,vote:n}=e,a=0===n.conviction.index,s=o.muln(a?1:n.conviction.index).divn(a?10:1);return n.isAye?(t.allAye.push(e),t.voteCountAye++,t.votedAye.iadd(s)):(t.allNay.push(e),t.voteCountNay++,t.votedNay.iadd(s)),t.voteCount++,t.votedTotal.iadd(s),t}),{allAye:[],allNay:[],voteCount:0,voteCountAye:0,voteCountNay:0,votedAye:new BN(0),votedNay:new BN(0),votedTotal:new BN(0)})}function calcVotesCurrent(t,e){const o=[],n=[];return e.forEach((t=>{t.vote.isAye?o.push(t):n.push(t);})),{allAye:o,allNay:n,voteCount:o.length+n.length,voteCountAye:o.length,voteCountNay:n.length,votedAye:t.ayes,votedNay:t.nays,votedTotal:t.turnout}}function calcVotes(t,e,o){const n=isCurrentStatus(e.status)?calcVotesCurrent(e.status.tally,o):calcVotesPrev(o);return objectSpread({},n,{isPassing:calcPassing(e.status.threshold,t,n),votes:o})}function getStatus(t){if(t.isNone)return null;const e=t.unwrap();return isOldInfo(e)?e:e.isOngoing?e.asOngoing:null}function getImageHashBounded(t){return t.isLegacy?t.asLegacy.hash_.toHex():t.isLookup?t.asLookup.hash_.toHex():t.isInline?t.asInline.hash.toHex():isString(t)?isHex(t)?t:stringToHex(t):isU8a(t)?u8aToHex(t):t.toHex()}function getImageHash(t){return getImageHashBounded(t.proposal||t.proposalHash)}

	const DEMOCRACY_ID=stringToHex("democrac");function isMaybeHashedOrBounded(e){return e instanceof Enum}function isBounded(e){return e.isInline||e.isLegacy||e.isLookup}function queryQueue(e){return e.query.democracy.dispatchQueue().pipe(switchMap((a=>combineLatest([of(a),e.derive.democracy.preimages(a.map((([,e])=>e)))]))),map((([e,a])=>e.map((([e,r,t],o)=>({at:e,image:a[o],imageHash:getImageHashBounded(r),index:t}))))))}function schedulerEntries(e){return e.derive.democracy.referendumsFinished().pipe(switchMap((()=>e.query.scheduler.agenda.keys())),switchMap((a=>{const r=a.map((({args:[e]})=>e));return r.length?combineLatest([of(r),e.query.scheduler.agenda.multi(r).pipe(catchError((()=>of(r.map((()=>[]))))))]):of([[],[]])})))}function queryScheduler(e){return schedulerEntries(e).pipe(switchMap((([a,r])=>{const t=[];return a.forEach(((a,o)=>{(r[o]||[]).filter((e=>e.isSome)).forEach((r=>{const o=r.unwrap();if(o.maybeId.isSome){const r=o.maybeId.unwrap().toHex();if(r.startsWith(DEMOCRACY_ID)){const i=isMaybeHashedOrBounded(o.call)?isBounded(o.call)?getImageHashBounded(o.call):o.call.isHash?o.call.asHash.toHex():o.call.asValue.args[0].toHex():o.call.args[0].toHex();t.push({at:a,imageHash:i,index:e.registry.createType("(u64, ReferendumIndex)",r)[1]});}}}));})),combineLatest([of(t),t.length?e.derive.democracy.preimages(t.map((({imageHash:e})=>e))):of([])])})),map((([e,a])=>e.map(((e,r)=>objectSpread({image:a[r]},e))))))}function dispatchQueue(e,a){return memo(e,(()=>isFunction$1(a.query.scheduler?.agenda)?queryScheduler(a):a.query.democracy.dispatchQueue?queryQueue(a):of([])))}

	const LOCKUPS=[0,1,2,4,8,16,32];function parseEnd(e,n,{approved:i,end:o}){return [o,i.isTrue&&n.isAye||i.isFalse&&n.isNay?o.add((e.consts.democracy.voteLockingPeriod||e.consts.democracy.enactmentPeriod).muln(LOCKUPS[n.conviction.index])):BN_ZERO]}function parseLock(e,[n,i],o){const{balance:r,vote:t}=i.asStandard,[c,d]=o.isFinished?parseEnd(e,t,o.asFinished):[BN_ZERO,BN_ZERO];return {balance:r,isDelegated:!1,isFinished:o.isFinished,referendumEnd:c,referendumId:n,unlockAt:d,vote:t}}function delegateLocks(e,{balance:n,conviction:i,target:o}){return e.derive.democracy.locks(o).pipe(map((o=>o.map((({isFinished:o,referendumEnd:r,referendumId:t,unlockAt:c,vote:d})=>({balance:n,isDelegated:!0,isFinished:o,referendumEnd:r,referendumId:t,unlockAt:c.isZero()?c:r.add((e.consts.democracy.voteLockingPeriod||e.consts.democracy.enactmentPeriod).muln(LOCKUPS[i.index])),vote:e.registry.createType("Vote",{aye:d.isAye,conviction:i})}))))))}function directLocks(e,{votes:n}){return n.length?e.query.democracy.referendumInfoOf.multi(n.map((([e])=>e))).pipe(map((i=>n.map(((e,n)=>[e,i[n].unwrapOr(null)])).filter((e=>!!e[1]&&isUndefined(e[1].end)&&e[0][1].isStandard)).map((([n,i])=>parseLock(e,n,i)))))):of([])}function locks(e,n){return memo(e,(e=>n.query.democracy.votingOf?n.query.democracy.votingOf(e).pipe(switchMap((e=>e.isDirect?directLocks(n,e.asDirect):e.isDelegating?delegateLocks(n,e.asDelegating):of([])))):of([])))}

	function withImage(e,r){if(r.isNone)return of(null);const[t,m]=r.unwrap();return e.derive.democracy.preimage(t).pipe(map((e=>({image:e,imageHash:getImageHashBounded(t),threshold:m}))))}function nextExternal(e,r){return memo(e,(()=>r.query.democracy?.nextExternal?r.query.democracy.nextExternal().pipe(switchMap((e=>withImage(r,e)))):of(null)))}

	function isDemocracyPreimage(e,r){return !!r&&!e.query.democracy.dispatchQueue}function constructProposal(e,[r,a,t,o]){let s;try{s=e.registry.createType("Call",r.toU8a(!0));}catch(e){console.error(e);}return {at:o,balance:t,proposal:s,proposer:a}}function parseDemocracy(e,r){if(!r.isNone){if(isDemocracyPreimage(e,r)){const a=r.unwrap();if(a.isMissing)return;const{data:t,deposit:o,provider:s,since:p}=a.asAvailable;return constructProposal(e,[t,s,o,p])}return constructProposal(e,r.unwrap())}}function parseImage(e,[r,a,t]){if(!a)return;const[o,s]=a.isUnrequested?a.asUnrequested.deposit:a.asRequested.deposit.unwrapOrDefault();let p;if(t)try{p=e.registry.createType("Call",t.toU8a(!0));}catch(e){console.error(e);}return {at:BN_ZERO,balance:s,proposal:p,proposalHash:r,proposer:o}}function getDemocracyImages(e,r){const a=r.map((e=>getImageHashBounded(e)));return e.query.democracy.preimages.multi(a).pipe(map((r=>r.map((r=>parseDemocracy(e,r))))))}function getImages(e,r){const a=r.map((e=>getImageHashBounded(e))),t=e.registry.lookup.getTypeDef(e.query.preimage.preimageFor.creator.meta.type.asMap.key).type;return e.query.preimage.statusFor.multi(a).pipe(switchMap((r=>{const o=r.map((e=>e.unwrapOr(null))),s=o.map(((e,r)=>e?"H256"===t?a[r]:e.isRequested?[a[r],e.asRequested.len.unwrapOr(0)]:[a[r],e.asUnrequested.len]:null)).filter((e=>!!e));return e.query.preimage.preimageFor.multi(s).pipe(map((r=>{let t=-1;return o.map(((e,o)=>e?[a[o],e,r[++t].unwrapOr(null)]:[a[o],null,null])).map((r=>parseImage(e,r)))})))})))}function preimages(e,r){return memo(e,(e=>e.length?isFunction$1(r.query.democracy.preimages)?getDemocracyImages(r,e):isFunction$1(r.query.preimage.preimageFor)?getImages(r,e):of([]):of([])))}const preimage=firstMemo(((e,r)=>e.derive.democracy.preimages([r])));

	function isNewDepositors(e){return isFunction$1(e[1].mul)}function parse$3([e,o,r]){return e.filter((([,,e],o)=>!!r[o]?.isSome&&!e.isEmpty)).map((([e,i,t],s)=>{const p=r[s].unwrap();return objectSpread({image:o[s],imageHash:getImageHashBounded(i),index:e,proposer:t},isNewDepositors(p)?{balance:p[1],seconds:p[0]}:{balance:p[0],seconds:p[1]})}))}function proposals$3(e,o){return memo(e,(()=>isFunction$1(o.query.democracy?.publicProps)?o.query.democracy.publicProps().pipe(switchMap((e=>e.length?combineLatest([of(e),o.derive.democracy.preimages(e.map((([,e])=>e))),o.query.democracy.depositOf.multi(e.map((([e])=>e)))]):of([[],[],[]]))),map(parse$3)):of([])))}

	function referendumIds(e,r){return memo(e,(()=>r.query.democracy?.lowestUnbaked?r.queryMulti([r.query.democracy.lowestUnbaked,r.query.democracy.referendumCount]).pipe(map((([e,r])=>r.gt(e)?[...Array(r.sub(e).toNumber())].map(((r,m)=>e.addn(m))):[]))):of([])))}

	function referendums(e,o){return memo(e,(()=>o.derive.democracy.referendumsActive().pipe(switchMap((e=>e.length?combineLatest([of(e),o.derive.democracy._referendumsVotes(e)]):of([[],[]]))),map((([e,o])=>e.map(((e,r)=>objectSpread({},e,o[r]))))))))}

	function referendumsActive(e,r){return memo(e,(()=>r.derive.democracy.referendumIds().pipe(switchMap((e=>e.length?r.derive.democracy.referendumsInfo(e):of([]))))))}

	function referendumsFinished(e,r){return memo(e,(()=>r.derive.democracy.referendumIds().pipe(switchMap((e=>r.query.democracy.referendumInfoOf.multi(e))),map((e=>e.map((e=>e.unwrapOr(null))).filter((e=>!!e&&e.isFinished)).map((e=>e.asFinished)))))))}

	function votesPrev(e,t){return e.query.democracy.votersFor(t).pipe(switchMap((r=>combineLatest([of(r),r.length?e.query.democracy.voteOf.multi(r.map((e=>[t,e]))):of([]),e.derive.balances.votingBalances(r)]))),map((([t,r,o])=>t.map(((t,a)=>({accountId:t,balance:o[a].votingBalance||e.registry.createType("Balance"),isDelegating:!1,vote:r[a]||e.registry.createType("Vote")}))))))}function extractVotes(e,t){return e.filter((([,e])=>e.isDirect)).map((([e,r])=>[e,r.asDirect.votes.filter((([e])=>e.eq(t)))])).filter((([,e])=>!!e.length)).reduce(((e,[t,r])=>r.reduce(((e,[,r])=>(r.isStandard&&e.push(objectSpread({accountId:t,isDelegating:!1},r.asStandard)),e)),e)),[])}function votesCurr(e,t){return e.query.democracy.votingOf.entries().pipe(map((r=>{const o=r.map((([{args:[e]},t])=>[e,t])),a=extractVotes(o,t),n=o.filter((([,e])=>e.isDelegating)).map((([e,t])=>[e,t.asDelegating]));return n.forEach((([t,{balance:r,conviction:o,target:i}])=>{const c=n.find((([e])=>e.eq(i))),s=a.find((({accountId:e})=>e.eq(c?c[0]:i)));s&&a.push({accountId:t,balance:r,isDelegating:!0,vote:e.registry.createType("Vote",{aye:s.vote.isAye,conviction:o})});})),a})))}function _referendumVotes(e,t){return memo(e,(e=>combineLatest([t.derive.democracy.sqrtElectorate(),isFunction$1(t.query.democracy.votingOf)?votesCurr(t,e.index):votesPrev(t,e.index)]).pipe(map((([t,r])=>calcVotes(t,e,r))))))}function _referendumsVotes(e,t){return memo(e,(e=>e.length?combineLatest(e.map((e=>t.derive.democracy._referendumVotes(e)))):of([])))}function _referendumInfo(e,t){return memo(e,((e,r)=>{const o=getStatus(r);return o?t.derive.democracy.preimage(o.proposal||o.proposalHash).pipe(map((r=>({image:r,imageHash:getImageHash(o),index:t.registry.createType("ReferendumIndex",e),status:o})))):of(null)}))}function referendumsInfo(e,t){return memo(e,(e=>e.length?t.query.democracy.referendumInfoOf.multi(e).pipe(switchMap((r=>combineLatest(e.map(((e,o)=>t.derive.democracy._referendumInfo(e,r[o])))))),map((e=>e.filter((e=>!!e))))):of([])))}

	function sqrtElectorate(t,r){return memo(t,(()=>r.query.balances.totalIssuance().pipe(map(bnSqrt))))}

	var democracy = /*#__PURE__*/Object.freeze({
		__proto__: null,
		_referendumInfo: _referendumInfo,
		_referendumVotes: _referendumVotes,
		_referendumsVotes: _referendumsVotes,
		dispatchQueue: dispatchQueue,
		locks: locks,
		nextExternal: nextExternal,
		preimage: preimage,
		preimages: preimages,
		proposals: proposals$3,
		referendumIds: referendumIds,
		referendums: referendums,
		referendumsActive: referendumsActive,
		referendumsFinished: referendumsFinished,
		referendumsInfo: referendumsInfo,
		sqrtElectorate: sqrtElectorate
	});

	function isSeatHolder(e){return !Array.isArray(e)}function isCandidateTuple(e){return Array.isArray(e)}function getAccountTuple(e){return isSeatHolder(e)?[e.who,e.stake]:e}function getCandidate(e){return isCandidateTuple(e)?e[0]:e}function sortAccounts([,e],[,n]){return n.cmp(e)}function getConstants(e,n){return n?{candidacyBond:e.consts[n].candidacyBond,desiredRunnersUp:e.consts[n].desiredRunnersUp,desiredSeats:e.consts[n].desiredMembers,termDuration:e.consts[n].termDuration,votingBond:e.consts[n].votingBond}:{}}function getModules(e){const[n]=e.registry.getModuleInstances(e.runtimeVersion.specName,"council")||["council"];return [n,e.query.phragmenElection?"phragmenElection":e.query.electionsPhragmen?"electionsPhragmen":e.query.elections?"elections":null]}function queryAll(e,n,t){return e.queryMulti([e.query[n].members,e.query[t].candidates,e.query[t].members,e.query[t].runnersUp])}function queryCouncil(e,n){return combineLatest([e.query[n].members(),of([]),of([]),of([])])}function info$3(e,n){return memo(e,(()=>{const[e,t]=getModules(n);return (t?queryAll(n,e,t):queryCouncil(n,e)).pipe(map((([e,r,o,u])=>objectSpread({},getConstants(n,t),{candidateCount:n.registry.createType("u32",r.length),candidates:r.map(getCandidate),members:o.length?o.map(getAccountTuple).sort(sortAccounts):e.map((e=>[e,n.registry.createType("Balance")])),runnersUp:u.map(getAccountTuple).sort(sortAccounts)}))))}))}

	var elections = /*#__PURE__*/Object.freeze({
		__proto__: null,
		info: info$3
	});

	function mapResult([e,t,i,o]){return t.forEach(((t,r)=>{const a=t.toString(),m=o[r],n=!i[r].isEmpty,s=e[a];s&&s.hasMessage===n&&s.blockCount.eq(m)||(e[a]={blockCount:m,hasMessage:n,isOnline:n||m.gt(BN_ZERO)});})),e}function receivedHeartbeats(e,t){return memo(e,(()=>t.query.imOnline?.receivedHeartbeats?t.derive.staking.overview().pipe(switchMap((({currentIndex:e,validators:i})=>combineLatest([of({}),of(i),t.query.imOnline.receivedHeartbeats.multi(i.map(((t,i)=>[e,i]))),t.query.imOnline.authoredBlocks.multi(i.map((t=>[e,t])))]))),map(mapResult)):of({})))}

	var imOnline = /*#__PURE__*/Object.freeze({
		__proto__: null,
		receivedHeartbeats: receivedHeartbeats
	});

	const members$2=members$5("membership");const hasProposals$1=hasProposals$4("membership");const proposal$1=proposal$4("membership");const proposalCount$1=proposalCount$4("membership");const proposalHashes$1=proposalHashes$4("membership");const proposals$2=proposals$6("membership");const prime$1=prime$4("membership");

	var membership = /*#__PURE__*/Object.freeze({
		__proto__: null,
		hasProposals: hasProposals$1,
		members: members$2,
		prime: prime$1,
		proposal: proposal$1,
		proposalCount: proposalCount$1,
		proposalHashes: proposalHashes$1,
		proposals: proposals$2
	});

	function didUpdateToBool(o,e){return !!o.isSome&&o.unwrap().some((o=>o.eq(e)))}

	function parseActive(r,e){const a=e.find((([e])=>e===r));if(a&&a[1].isSome){const[r,e]=a[1].unwrap();return objectSpread({collatorId:r},e.isWithRetries?{isRetriable:!0,retries:e.asWithRetries.toNumber()}:{isRetriable:!1,retries:0})}return null}function parseCollators(r,e){return e.map((e=>{const a=e.find((([e])=>e===r));return a?a[1]:null}))}function parse$2(r,[e,a,t,i,o,s,p,u]){return o.isNone?null:{active:parseActive(r,e),didUpdate:didUpdateToBool(i,r),heads:p,id:r,info:objectSpread({id:r},o.unwrap()),pendingSwapId:s.unwrapOr(null),relayDispatchQueue:u,retryCollators:parseCollators(r,a),selectedCollators:parseCollators(r,t)}}function info$2(r,e){return memo(r,(r=>e.query.registrar&&e.query.parachains?e.queryMulti([e.query.registrar.active,e.query.registrar.retryQueue,e.query.registrar.selectedThreads,e.query.parachains.didUpdate,[e.query.registrar.paras,r],[e.query.registrar.pendingSwap,r],[e.query.parachains.heads,r],[e.query.parachains.relayDispatchQueue,r]]).pipe(map((a=>parse$2(e.registry.createType("ParaId",r),a)))):of(null)))}

	function parse$1([r,a,e,i,p]){return r.map(((r,t)=>({didUpdate:didUpdateToBool(a,r),id:r,info:objectSpread({id:r},e[t].unwrapOr(null)),pendingSwapId:i[t].unwrapOr(null),relayDispatchQueueSize:p[t][0].toNumber()})))}function overview$1(r,a){return memo(r,(()=>a.query.registrar?.parachains&&a.query.parachains?a.query.registrar.parachains().pipe(switchMap((r=>combineLatest([of(r),a.query.parachains.didUpdate(),a.query.registrar.paras.multi(r),a.query.registrar.pendingSwap.multi(r),a.query.parachains.relayDispatchQueueSize.multi(r)]))),map(parse$1)):of([])))}

	var parachains = /*#__PURE__*/Object.freeze({
		__proto__: null,
		info: info$2,
		overview: overview$1
	});

	function parse([e,r,t,n,a]){return {activeEra:r,activeEraStart:t,currentEra:n,currentIndex:e,validatorCount:a}}function queryStaking(e){return e.queryMulti([e.query.session.currentIndex,e.query.staking.activeEra,e.query.staking.currentEra,e.query.staking.validatorCount]).pipe(map((([e,r,t,n])=>{const{index:a,start:i}=r.unwrapOrDefault();return parse([e,a,i,t.unwrapOrDefault(),n])})))}function querySession(e){return e.query.session.currentIndex().pipe(map((r=>parse([r,e.registry.createType("EraIndex"),e.registry.createType("Option<Moment>"),e.registry.createType("EraIndex"),e.registry.createType("u32")]))))}function empty(e){return of(parse([e.registry.createType("SessionIndex",1),e.registry.createType("EraIndex"),e.registry.createType("Option<Moment>"),e.registry.createType("EraIndex"),e.registry.createType("u32")]))}function indexes(e,r){return memo(e,(()=>r.query.session?r.query.staking?queryStaking(r):querySession(r):empty(r)))}

	function info$1(e,r){return memo(e,(()=>r.derive.session.indexes().pipe(map((e=>{const s=r.consts?.babe?.epochDuration||r.registry.createType("u64",1),o=r.consts?.staking?.sessionsPerEra||r.registry.createType("SessionIndex",1);return objectSpread({eraLength:r.registry.createType("BlockNumber",o.mul(s)),isEpoch:!!r.query.babe,sessionLength:s,sessionsPerEra:o},e)})))))}

	function withProgressField(e){return (r,s)=>memo(r,(()=>s.derive.session.progress().pipe(map((r=>r[e])))))}function createDerive(e,r,[s,o,t,i]){const n=o.mul(r.sessionLength).iadd(t),a=s.sub(n),u=r.currentIndex.sub(i).imul(r.sessionLength).iadd(a);return objectSpread({eraProgress:e.registry.createType("BlockNumber",u),sessionProgress:e.registry.createType("BlockNumber",a)},r)}function queryAura(e){return e.derive.session.info().pipe(map((r=>objectSpread({eraProgress:e.registry.createType("BlockNumber"),sessionProgress:e.registry.createType("BlockNumber")},r))))}function queryBabe(e){return e.derive.session.info().pipe(switchMap((r=>combineLatest([of(r),e.query.staking?.erasStartSessionIndex?e.queryMulti([e.query.babe.currentSlot,e.query.babe.epochIndex,e.query.babe.genesisSlot,[e.query.staking.erasStartSessionIndex,r.activeEra]]):e.queryMulti([e.query.babe.currentSlot,e.query.babe.epochIndex,e.query.babe.genesisSlot])]))),map((([r,[s,o,t,i]])=>[r,[s,o,t,i&&i.isSome?i.unwrap():e.registry.createType("SessionIndex",1)]])))}function progress(e,r){return memo(e,(()=>r.query.babe?queryBabe(r).pipe(map((([e,s])=>createDerive(r,e,s)))):queryAura(r)))}const eraLength=withProgressField("eraLength");const eraProgress=withProgressField("eraProgress");const sessionProgress=withProgressField("sessionProgress");

	var session = /*#__PURE__*/Object.freeze({
		__proto__: null,
		eraLength: eraLength,
		eraProgress: eraProgress,
		indexes: indexes,
		info: info$1,
		progress: progress,
		sessionProgress: sessionProgress
	});

	function candidates(e,i){return memo(e,(()=>i.query.society.candidates().pipe(switchMap((e=>combineLatest([of(e),i.query.society.suspendedCandidates.multi(e.map((({who:e})=>e)))]))),map((([e,i])=>e.map((({kind:e,value:t,who:o},a)=>({accountId:o,isSuspended:i[a].isSome,kind:e,value:t}))))))))}

	function info(e,r){return memo(e,(()=>r.queryMulti([r.query.society.bids,r.query.society.defender,r.query.society.founder,r.query.society.head,r.query.society.maxMembers,r.query.society.pot]).pipe(map((([e,r,o,i,m,u])=>({bids:e,defender:r.unwrapOr(void 0),founder:o.unwrapOr(void 0),hasDefender:r.isSome&&i.isSome&&!i.eq(r)||!1,head:i.unwrapOr(void 0),maxMembers:m,pot:u}))))))}

	function member(m,e){return memo(m,(m=>e.derive.society._members([m]).pipe(map((([m])=>m)))))}

	function _members(e,i){return memo(e,(e=>combineLatest([of(e),i.query.society.payouts.multi(e),i.query.society.strikes.multi(e),i.query.society.defenderVotes.multi(e),i.query.society.suspendedMembers.multi(e),i.query.society.vouching.multi(e)]).pipe(map((([e,i,t,o,r,s])=>e.map(((e,m)=>({accountId:e,isDefenderVoter:o[m].isSome,isSuspended:r[m].isTrue,payouts:i[m],strikes:t[m],vote:o[m].unwrapOr(void 0),vouching:s[m].unwrapOr(void 0)}))))))))}function members$1(e,i){return memo(e,(()=>i.query.society.members().pipe(switchMap((e=>i.derive.society._members(e))))))}

	var society = /*#__PURE__*/Object.freeze({
		__proto__: null,
		_members: _members,
		candidates: candidates,
		info: info,
		member: member,
		members: members$1
	});

	const QUERY_OPTS={withDestination:!0,withLedger:!0,withNominations:!0,withPrefs:!0};function groupByEra(e){return e.reduce(((e,{era:t,value:r})=>{const n=t.toString();return e[n]=(e[n]||BN_ZERO).add(r.unwrap()),e}),{})}function calculateUnlocking(e,t,r){const n=Object.entries(groupByEra((t?.unlocking||[]).filter((({era:e})=>e.unwrap().gt(r.activeEra))))).map((([t,n])=>({remainingEras:new BN(t).isub(r.activeEra),value:e.registry.createType("Balance",n)})));return n.length?n:void 0}function redeemableSum(e,t,r){return e.registry.createType("Balance",(t?.unlocking||[]).reduce(((e,{era:t,value:n})=>t.unwrap().gt(r.currentEra)?e:e.iadd(n.unwrap())),new BN(0)))}function parseResult$1(e,t,r,n){return objectSpread({},r,n,{redeemable:redeemableSum(e,n.stakingLedger,t),unlocking:calculateUnlocking(e,n.stakingLedger,t)})}function accounts(e,t){return memo(e,((e,r=QUERY_OPTS)=>t.derive.session.info().pipe(switchMap((n=>combineLatest([t.derive.staking.keysMulti(e),t.derive.staking.queryMulti(e,r)]).pipe(map((([e,r])=>r.map(((r,a)=>parseResult$1(t,n,e[a],r)))))))))))}const account=firstMemo(((e,t,r)=>e.derive.staking.accounts([t],r)));

	function currentPoints(e,i){return memo(e,(()=>i.derive.session.indexes().pipe(switchMap((({activeEra:e})=>i.query.staking.erasRewardPoints(e))))))}

	function getEraCache(e,r,t){const i=`${e}-${r.toString()}`;return [i,t?void 0:deriveCache.get(i)]}function getEraMultiCache(e,r,t){return t?[]:r.map((r=>deriveCache.get(`${e}-${r.toString()}`))).filter((e=>!!e))}function setEraCache(e,r,t){return !r&&deriveCache.set(e,t),t}function setEraMultiCache(e,r,t){return !r&&t.forEach((r=>deriveCache.set(`${e}-${r.era.toString()}`,r))),t}function filterCachedEras(e,r,t){return e.map((e=>r.find((({era:r})=>e.eq(r)))||t.find((({era:r})=>e.eq(r)))))}

	const ERA_CHUNK_SIZE=14;function chunkEras(t,e){const r=arrayChunk(t,ERA_CHUNK_SIZE);let i=0;const n=new BehaviorSubject(r[i]);return n.pipe(switchMap(e),tap((()=>{nextTick((()=>{i++,i===r.length?n.complete():n.next(r[i]);}));})),toArray(),map(arrayFlatten))}function filterEras(t,e){return t.filter((t=>!e.some((({era:e})=>t.eq(e)))))}function erasHistoricApply(t){return (e,r)=>memo(e,((e=!1)=>r.derive.staking.erasHistoric(e).pipe(switchMap((i=>r.derive.staking[t](i,e))))))}function erasHistoricApplyAccount(t){return (e,r)=>memo(e,((e,i=!1)=>r.derive.staking.erasHistoric(i).pipe(switchMap((n=>r.derive.staking[t](e,n,i))))))}function singleEra(t){return (e,r)=>memo(e,(e=>r.derive.staking[t](e,!0)))}function combineEras(t){return (e,r)=>memo(e,((e,i)=>e.length?chunkEras(e,(e=>combineLatest(e.map((e=>r.derive.staking[t](e,i)))))):of([])))}

	const CACHE_KEY$4="eraExposure";function mapStakers(r,e){const o={},s={};return e.forEach((([r,e])=>{const a=r.args[1].toString();s[a]=e,e.others.forEach((({who:r},e)=>{const s=r.toString();o[s]=o[s]||[],o[s].push({validatorId:a,validatorIndex:e});}));})),{era:r,nominators:o,validators:s}}function _eraExposure(r,e){return memo(r,((r,o=!1)=>{const[s,a]=getEraCache(CACHE_KEY$4,r,o);return a?of(a):e.query.staking.erasStakersClipped.entries(r).pipe(map((e=>setEraCache(s,o,mapStakers(r,e)))))}))}const eraExposure=singleEra("_eraExposure");const _erasExposure=combineEras("_eraExposure");const erasExposure=erasHistoricApply("_erasExposure");

	function erasHistoric(t,e){return memo(t,(t=>combineLatest([e.query.staking.activeEra(),e.consts.staking.historyDepth?of(e.consts.staking.historyDepth):e.query.staking.historyDepth()]).pipe(map((([r,o])=>{const i=[],s=o.toNumber(),n=r.unwrapOrDefault().index;let a=n;for(;a.gte(BN_ZERO)&&i.length<s;)a===n&&!0!==t||i.push(e.registry.createType("EraIndex",a)),a=a.sub(BN_ONE);return i.reverse()})))))}

	const CACHE_KEY$3="eraPoints";function mapValidators({individual:t}){return [...t.entries()].filter((([,t])=>t.gt(BN_ZERO))).reduce(((t,[r,i])=>(t[r.toString()]=i,t)),{})}function mapPoints(t,r){return t.map(((t,i)=>({era:t,eraPoints:r[i].total,validators:mapValidators(r[i])})))}function _erasPoints(t,r){return memo(t,((t,i)=>{if(!t.length)return of([]);const e=getEraMultiCache(CACHE_KEY$3,t,i),a=filterEras(t,e);return a.length?r.query.staking.erasRewardPoints.multi(a).pipe(map((r=>filterCachedEras(t,e,setEraMultiCache(CACHE_KEY$3,i,mapPoints(a,r)))))):of(e)}))}const erasPoints=erasHistoricApply("_erasPoints");

	const CACHE_KEY$2="eraPrefs";function mapPrefs(r,e){const s={};return e.forEach((([r,e])=>{s[r.args[1].toString()]=e;})),{era:r,validators:s}}function _eraPrefs(r,e){return memo(r,((r,s)=>{const[a,t]=getEraCache(CACHE_KEY$2,r,s);return t?of(t):e.query.staking.erasValidatorPrefs.entries(r).pipe(map((e=>setEraCache(a,s,mapPrefs(r,e)))))}))}const eraPrefs=singleEra("_eraPrefs");const _erasPrefs=combineEras("_eraPrefs");const erasPrefs=erasHistoricApply("_erasPrefs");

	const CACHE_KEY$1="eraRewards";function mapRewards(r,e){return r.map(((r,a)=>({era:r,eraReward:e[a].unwrapOrDefault()})))}function _erasRewards(r,e){return memo(r,((r,a)=>{if(!r.length)return of([]);const t=getEraMultiCache(CACHE_KEY$1,r,a),s=filterEras(r,t);return s.length?e.query.staking.erasValidatorReward.multi(s).pipe(map((e=>filterCachedEras(r,t,setEraMultiCache(CACHE_KEY$1,a,mapRewards(s,e)))))):of(t)}))}const erasRewards=erasHistoricApply("_erasRewards");

	const CACHE_KEY="eraSlashes";function mapSlashes(a,r,e){const s={},t={};return r.forEach((([a,r])=>{s[a.args[1].toString()]=r.unwrap();})),e.forEach((([a,r])=>{t[a.args[1].toString()]=r.unwrapOrDefault()[1];})),{era:a,nominators:s,validators:t}}function _eraSlashes(a,r){return memo(a,((a,e)=>{const[s,t]=getEraCache(CACHE_KEY,a,e);return t?of(t):combineLatest([r.query.staking.nominatorSlashInEra.entries(a),r.query.staking.validatorSlashInEra.entries(a)]).pipe(map((([r,t])=>setEraCache(s,e,mapSlashes(a,r,t)))))}))}const eraSlashes=singleEra("_eraSlashes");const _erasSlashes=combineEras("_eraSlashes");const erasSlashes=erasHistoricApply("_erasSlashes");

	const DEFAULT_FLAGS$1={withController:!0,withExposure:!0,withPrefs:!0};function combineAccounts(t,e){return arrayFlatten([t,e.filter((e=>!t.find((t=>t.eq(e)))))])}function electedInfo(t,e){return memo(t,((t=DEFAULT_FLAGS$1)=>e.derive.staking.validators().pipe(switchMap((({nextElected:i,validators:r})=>e.derive.staking.queryMulti(combineAccounts(i,r),t).pipe(map((t=>({info:t,nextElected:i,validators:r})))))))))}

	function extractsIds(s,e,t){const i=(e.find((([e])=>e.eq(s)))||[void 0,[]])[1],r=t.unwrapOr([]);return {nextSessionIds:Array.isArray(r)?r:[...r.values()],sessionIds:Array.isArray(i)?i:[...i.values()]}}const keys=firstMemo(((s,e)=>s.derive.staking.keysMulti([e])));function keysMulti(s,e){return memo(s,(s=>s.length?e.query.session.queuedKeys().pipe(switchMap((t=>combineLatest([of(t),e.consts.session?.dedupKeyPrefix?e.query.session.nextKeys.multi(s.map((s=>[e.consts.session.dedupKeyPrefix,s]))):combineLatest(s.map((s=>e.query.session.nextKeys(s))))]))),map((([e,t])=>s.map(((s,i)=>extractsIds(s,e,t[i])))))):of([])))}

	function overview(e,t){return memo(e,(()=>combineLatest([t.derive.session.indexes(),t.derive.staking.validators()]).pipe(map((([e,{nextElected:t,validators:o}])=>objectSpread({},e,{nextElected:t,validators:o}))))))}

	function _ownExposures(e,o){return memo(e,((e,r,s)=>r.length?combineLatest([combineLatest(r.map((r=>o.query.staking.erasStakersClipped(r,e)))),combineLatest(r.map((r=>o.query.staking.erasStakers(r,e))))]).pipe(map((([e,o])=>r.map(((r,s)=>({clipped:e[s],era:r,exposure:o[s]})))))):of([])))}const ownExposure=firstMemo(((e,o,r)=>e.derive.staking._ownExposures(o,[r],!0)));const ownExposures=erasHistoricApplyAccount("_ownExposures");

	function _ownSlashes(o,t){return memo(o,((o,e,a)=>e.length?combineLatest([combineLatest(e.map((e=>t.query.staking.validatorSlashInEra(e,o)))),combineLatest(e.map((e=>t.query.staking.nominatorSlashInEra(e,o))))]).pipe(map((([o,t])=>e.map(((e,a)=>({era:e,total:o[a].isSome?o[a].unwrap()[1]:t[a].unwrapOrDefault()})))))):of([])))}const ownSlash=firstMemo(((o,t,e)=>o.derive.staking._ownSlashes(t,[e],!0)));const ownSlashes=erasHistoricApplyAccount("_ownSlashes");

	function parseDetails(e,t,r,a,i,n,o){return {accountId:e,controllerId:t&&t.unwrapOr(null),exposure:n,nominators:r.isSome?r.unwrap().targets:[],rewardDestination:a,stakingLedger:o.unwrapOrDefault(),stashId:e,validatorPrefs:i}}function getLedgers(e,t,{withLedger:r=!1}){const a=t.filter((e=>r&&!!e&&e.isSome)).map((e=>e.unwrap())),i=e.registry.createType("Option<StakingLedger>");return (a.length?combineLatest(a.map((t=>e.query.staking.ledger(t)))):of([])).pipe(map((e=>{let r=-1;return t.map((t=>t&&t.isSome&&e[++r]||i))})))}function getStashInfo(e,t,r,{withController:a,withDestination:i,withExposure:n,withLedger:o,withNominations:s,withPrefs:p}){const m=e.registry.createType("Option<Nominations>"),u=e.registry.createType("RewardDestination"),c=e.registry.createType("Exposure"),g=e.registry.createType("ValidatorPrefs");return combineLatest([a||o?combineLatest(t.map((t=>e.query.staking.bonded(t)))):of(t.map((()=>null))),s?combineLatest(t.map((t=>e.query.staking.nominators(t)))):of(t.map((()=>m))),i?combineLatest(t.map((t=>e.query.staking.payee(t)))):of(t.map((()=>u))),p?combineLatest(t.map((t=>e.query.staking.validators(t)))):of(t.map((()=>g))),n?combineLatest(t.map((t=>e.query.staking.erasStakers(r,t)))):of(t.map((()=>c)))])}function getBatch(e,t,r,a){return getStashInfo(e,r,t,a).pipe(switchMap((([t,i,n,o,s])=>getLedgers(e,t,a).pipe(map((e=>r.map(((r,a)=>parseDetails(r,t[a],i[a],n[a],o[a],s[a],e[a])))))))))}const query=firstMemo(((e,t,r)=>e.derive.staking.queryMulti([t],r)));function queryMulti(e,t){return memo(e,((e,r)=>t.derive.session.indexes().pipe(switchMap((({activeEra:a})=>{const i=e.map((e=>t.registry.createType("AccountId",e)));return i.length?getBatch(t,a,i,r):of([])})))))}

	function _stakerExposures(r,e){return memo(r,((r,t,s=!1)=>{const o=r.map((r=>e.registry.createType("AccountId",r).toString()));return e.derive.staking._erasExposure(t,s).pipe(map((r=>o.map((e=>r.map((({era:r,nominators:t,validators:s})=>{const o=!!s[e],i={},a=t[e]||[];return o?i[e]=s[e]:a&&a.forEach((({validatorId:r})=>{i[r]=s[r];})),{era:r,isEmpty:!Object.keys(i).length,isValidator:o,nominating:a,validators:i}})))))))}))}function stakerExposures(r,e){return memo(r,((r,t=!1)=>e.derive.staking.erasHistoric(t).pipe(switchMap((s=>e.derive.staking._stakerExposures(r,s,t))))))}const stakerExposure=firstMemo(((r,e,t)=>r.derive.staking.stakerExposures([e],t)));

	function _stakerPoints(t,r){return memo(t,((t,e,o)=>{const i=r.registry.createType("AccountId",t).toString();return r.derive.staking._erasPoints(e,o).pipe(map((t=>t.map((({era:t,eraPoints:e,validators:o})=>({era:t,eraPoints:e,points:o[i]||r.registry.createType("RewardPoint")}))))))}))}const stakerPoints=erasHistoricApplyAccount("_stakerPoints");

	function _stakerPrefs(r,t){return memo(r,((r,e,o)=>t.query.staking.erasValidatorPrefs.multi(e.map((t=>[t,r]))).pipe(map((r=>r.map(((r,t)=>({era:e[t],validatorPrefs:r}))))))))}const stakerPrefs=erasHistoricApplyAccount("_stakerPrefs");

	function parseRewards(e,r,[a,t,i],s){return s.map((({era:s,isEmpty:n,isValidator:o,nominating:d,validators:l})=>{const{eraPoints:c,validators:m}=a.find((e=>e.era.eq(s)))||{eraPoints:BN_ZERO,validators:{}},{eraReward:p}=i.find((e=>e.era.eq(s)))||{eraReward:e.registry.createType("Balance")},{validators:u}=t.find((e=>e.era.eq(s)))||{validators:{}},f={},g=r.toString();return Object.entries(l).forEach((([r,a])=>{const t=m[r]||BN_ZERO,i=u[r]?.commission.unwrap()||BN_ZERO,s=a.total?.unwrap()||BN_ZERO;let n,o=BN_ZERO;if(!(s.isZero()||t.isZero()||c.isZero())){o=p.mul(t).div(c);const e=i.mul(o).div(BN_BILLION);let d;if(r===g)d=a.own.unwrap();else {const e=a.others.find((({who:e})=>e.eq(g)));d=e?e.value.unwrap():BN_ZERO;}n=o.sub(e).imul(d).div(s).iadd(r===g?e:BN_ZERO);}f[r]={total:e.registry.createType("Balance",o),value:e.registry.createType("Balance",n)};})),{era:s,eraReward:p,isEmpty:n,isValidator:o,nominating:d,validators:f}}))}function allUniqValidators(e){return e.reduce((([e,r],a)=>{const t=[];return r.push(t),a.forEach((({validators:r})=>Object.keys(r).forEach((r=>{t.includes(r)||(t.push(r),e.includes(r)||e.push(r));})))),[e,r]}),[[],[]])}function removeClaimed(e,r,a){const t=[];Object.keys(a.validators).forEach((i=>{const s=e.indexOf(i);if(-1!==s){const e=r[s].stakingLedger;e?.claimedRewards.some((e=>a.era.eq(e)))&&t.push(i);}})),t.forEach((e=>{delete a.validators[e];}));}function filterRewards(e,r,{rewards:a,stakingLedger:t}){const i=e.filter((e=>!t.claimedRewards.some((r=>r.eq(e))))),s=r.map((([e])=>e)),n=r.map((([,e])=>e));return a.filter((({isEmpty:e})=>!e)).filter((e=>!!i.some((r=>e.era.eq(r)))&&(removeClaimed(s,n,e),!0))).filter((({validators:e})=>0!==Object.keys(e).length)).map((e=>objectSpread({},e,{nominators:e.nominating.filter((r=>e.validators[r.validatorId]))})))}function _stakerRewardsEras(e,r){return memo(e,((e,a=!1)=>combineLatest([r.derive.staking._erasPoints(e,a),r.derive.staking._erasPrefs(e,a),r.derive.staking._erasRewards(e,a)])))}function _stakerRewards(e,r){return memo(e,((e,a,t=!1)=>combineLatest([r.derive.staking.queryMulti(e,{withLedger:!0}),r.derive.staking._stakerExposures(e,a,t),r.derive.staking._stakerRewardsEras(a,t)]).pipe(switchMap((([e,i,s])=>{const n=e.map((({stakingLedger:e,stashId:a},t)=>a&&e?parseRewards(r,a,s,i[t]):[]));if(t)return of(n);const[o,d]=allUniqValidators(n);return r.derive.staking.queryMulti(o,{withLedger:!0}).pipe(map((r=>e.map((({stakingLedger:e},t)=>filterRewards(a,d[t].map((e=>[e,r.find((r=>r.accountId.eq(e)))])),{rewards:n[t],stakingLedger:e}))))))})))))}const stakerRewards=firstMemo(((e,r,a)=>e.derive.staking.erasHistoric(a).pipe(switchMap((t=>e.derive.staking._stakerRewards([r],t,a))))));function stakerRewardsMultiEras(e,r){return memo(e,((e,a)=>e.length&&a.length?r.derive.staking._stakerRewards(e,a,!1):of([])))}function stakerRewardsMulti(e,r){return memo(e,((e,a=!1)=>r.derive.staking.erasHistoric(a).pipe(switchMap((a=>r.derive.staking.stakerRewardsMultiEras(e,a))))))}

	function _stakerSlashes(r,e){return memo(r,((r,t,s)=>{const a=e.registry.createType("AccountId",r).toString();return e.derive.staking._erasSlashes(t,s).pipe(map((r=>r.map((({era:r,nominators:t,validators:s})=>({era:r,total:t[a]||s[a]||e.registry.createType("Balance")}))))))}))}const stakerSlashes=erasHistoricApplyAccount("_stakerSlashes");

	function onBondedEvent(t){let e=Date.now();return t.query.system.events().pipe(map((t=>(e=t.filter((({event:t,phase:e})=>{try{return e.isApplyExtrinsic&&"staking"===t.section&&"Bonded"===t.method}catch{return !1}}))?Date.now():e,e))),startWith(e),drr({skipTimeout:!0}))}function stashes(t,e){return memo(t,(()=>onBondedEvent(e).pipe(switchMap((()=>e.query.staking.validators.keys())),map((t=>t.map((({args:[t]})=>t)).filter((t=>t)))))))}

	function nextElected(e,t){return memo(e,(()=>t.query.staking.erasStakers?t.derive.session.indexes().pipe(switchMap((({currentEra:e})=>t.query.staking.erasStakers.keys(e))),map((e=>e.map((({args:[,e]})=>e))))):t.query.staking.currentElected()))}function validators(e,t){return memo(e,(()=>combineLatest([t.query.session?t.query.session.validators():of([]),t.query.staking?t.derive.staking.nextElected():of([])]).pipe(map((([e,t])=>({nextElected:t.length?t:e,validators:e}))))))}

	const DEFAULT_FLAGS={withController:!0,withPrefs:!0};function waitingInfo(t,i){return memo(t,((t=DEFAULT_FLAGS)=>combineLatest([i.derive.staking.validators(),i.derive.staking.stashes()]).pipe(switchMap((([{nextElected:e},n])=>{const r=e.map((t=>t.toString())),o=n.filter((t=>!r.includes(t.toString())));return i.derive.staking.queryMulti(o,t).pipe(map((t=>({info:t,waiting:o}))))})))))}

	var staking = /*#__PURE__*/Object.freeze({
		__proto__: null,
		_eraExposure: _eraExposure,
		_eraPrefs: _eraPrefs,
		_eraSlashes: _eraSlashes,
		_erasExposure: _erasExposure,
		_erasPoints: _erasPoints,
		_erasPrefs: _erasPrefs,
		_erasRewards: _erasRewards,
		_erasSlashes: _erasSlashes,
		_ownExposures: _ownExposures,
		_ownSlashes: _ownSlashes,
		_stakerExposures: _stakerExposures,
		_stakerPoints: _stakerPoints,
		_stakerPrefs: _stakerPrefs,
		_stakerRewards: _stakerRewards,
		_stakerRewardsEras: _stakerRewardsEras,
		_stakerSlashes: _stakerSlashes,
		account: account,
		accounts: accounts,
		currentPoints: currentPoints,
		electedInfo: electedInfo,
		eraExposure: eraExposure,
		eraPrefs: eraPrefs,
		eraSlashes: eraSlashes,
		erasExposure: erasExposure,
		erasHistoric: erasHistoric,
		erasPoints: erasPoints,
		erasPrefs: erasPrefs,
		erasRewards: erasRewards,
		erasSlashes: erasSlashes,
		keys: keys,
		keysMulti: keysMulti,
		nextElected: nextElected,
		overview: overview,
		ownExposure: ownExposure,
		ownExposures: ownExposures,
		ownSlash: ownSlash,
		ownSlashes: ownSlashes,
		query: query,
		queryMulti: queryMulti,
		stakerExposure: stakerExposure,
		stakerExposures: stakerExposures,
		stakerPoints: stakerPoints,
		stakerPrefs: stakerPrefs,
		stakerRewards: stakerRewards,
		stakerRewardsMulti: stakerRewardsMulti,
		stakerRewardsMultiEras: stakerRewardsMultiEras,
		stakerSlashes: stakerSlashes,
		stashes: stashes,
		validators: validators,
		waitingInfo: waitingInfo
	});

	const members=members$5("technicalCommittee");const hasProposals=hasProposals$4("technicalCommittee");const proposal=proposal$4("technicalCommittee");const proposalCount=proposalCount$4("technicalCommittee");const proposalHashes=proposalHashes$4("technicalCommittee");const proposals$1=proposals$6("technicalCommittee");const prime=prime$4("technicalCommittee");

	var technicalCommittee = /*#__PURE__*/Object.freeze({
		__proto__: null,
		hasProposals: hasProposals,
		members: members,
		prime: prime,
		proposal: proposal,
		proposalCount: proposalCount,
		proposalHashes: proposalHashes,
		proposals: proposals$1
	});

	function parseResult(o,{allIds:r,allProposals:s,approvalIds:p,councilProposals:e,proposalCount:a}){const l=[],t=[],u=e.filter((({proposal:r})=>r&&(o.tx.treasury.approveProposal.is(r)||o.tx.treasury.rejectProposal.is(r))));return r.forEach(((o,r)=>{if(s[r].isSome){const e=u.filter((({proposal:r})=>r&&o.eq(r.args[0]))).sort(((o,r)=>o.proposal&&r.proposal?o.proposal.method.localeCompare(r.proposal.method):o.proposal?-1:1)),a=p.some((r=>r.eq(o))),i={council:e,id:o,proposal:s[r].unwrap()};a?l.push(i):t.push(i);}})),{approvals:l,proposalCount:a,proposals:t}}function retrieveProposals(o,r,s){const p=[],e=r.toNumber();for(let r=0;r<e;r++)s.some((o=>o.eqn(r)))||p.push(o.registry.createType("ProposalIndex",r));const a=[...p,...s];return combineLatest([o.query.treasury.proposals.multi(a),o.derive.council?o.derive.council.proposals():of([])]).pipe(map((([p,e])=>parseResult(o,{allIds:a,allProposals:p,approvalIds:s,councilProposals:e,proposalCount:r}))))}function proposals(o,r){return memo(o,(()=>r.query.treasury?combineLatest([r.query.treasury.proposalCount(),r.query.treasury.approvals()]).pipe(switchMap((([o,s])=>retrieveProposals(r,o,s)))):of({approvals:[],proposalCount:r.registry.createType("ProposalIndex"),proposals:[]})))}

	var treasury = /*#__PURE__*/Object.freeze({
		__proto__: null,
		proposals: proposals
	});

	function events(e,t){return memo(e,(e=>combineLatest([t.rpc.chain.getBlock(e),t.queryAt(e).pipe(switchMap((e=>e.system.events())))]).pipe(map((([e,t])=>({block:e,events:t}))))))}

	const FALLBACK_MAX_HASH_COUNT=250;const FALLBACK_PERIOD=new BN(6e3);const MAX_FINALITY_LAG=new BN(5);const MORTAL_PERIOD=new BN(3e5);

	function latestNonce(e,n){return e.derive.balances.account(n).pipe(map((({accountNonce:e})=>e)))}function nextNonce(e,n){return e.rpc.system?.accountNextIndex?e.rpc.system.accountNextIndex(n):latestNonce(e,n)}function signingHeader(e){return combineLatest([e.rpc.chain.getHeader().pipe(switchMap((n=>n.parentHash.isEmpty?of(n):e.rpc.chain.getHeader(n.parentHash)))),e.rpc.chain.getFinalizedHead().pipe(switchMap((n=>e.rpc.chain.getHeader(n))))]).pipe(map((([e,n])=>unwrapBlockNumber(e).sub(unwrapBlockNumber(n)).gt(MAX_FINALITY_LAG)?e:n)))}function signingInfo(e,n){return (e,t,i)=>combineLatest([isUndefined(t)?latestNonce(n,e):-1===t?nextNonce(n,e):of(n.registry.createType("Index",t)),isUndefined(i)||isNumber(i)&&i>0?signingHeader(n):of(null)]).pipe(map((([e,t])=>({header:t,mortalLength:Math.min(n.consts.system?.blockHashCount?.toNumber()||FALLBACK_MAX_HASH_COUNT,MORTAL_PERIOD.div(n.consts.babe?.expectedBlockTime||n.consts.timestamp?.minimumPeriod.muln(2)||FALLBACK_PERIOD).iadd(MAX_FINALITY_LAG).toNumber()),nonce:e}))))}

	var tx = /*#__PURE__*/Object.freeze({
		__proto__: null,
		events: events,
		signingInfo: signingInfo
	});

	const derive={accounts:accounts$1,alliance:alliance,bagsList:bagsList,balances:balances,bounties:bounties,chain:chain,contracts:contracts,council:council,crowdloan:crowdloan,democracy:democracy,elections:elections,imOnline:imOnline,membership:membership,parachains:parachains,session:session,society:society,staking:staking,technicalCommittee:technicalCommittee,treasury:treasury,tx:tx};

	const checks={allianceMotion:{instances:["allianceMotion"],methods:[]},bagsList:{instances:["voterBagsList","voterList","bagsList"],methods:[],withDetect:!0},contracts:{instances:["contracts"],methods:[]},council:{instances:["council"],methods:[],withDetect:!0},crowdloan:{instances:["crowdloan"],methods:[]},democracy:{instances:["democracy"],methods:[]},elections:{instances:["phragmenElection","electionsPhragmen","elections","council"],methods:[],withDetect:!0},imOnline:{instances:["imOnline"],methods:[]},membership:{instances:["membership"],methods:[]},parachains:{instances:["parachains","registrar"],methods:[]},session:{instances:["session"],methods:[]},society:{instances:["society"],methods:[]},staking:{instances:["staking"],methods:["erasRewardPoints"]},technicalCommittee:{instances:["technicalCommittee"],methods:[],withDetect:!0},treasury:{instances:["treasury"],methods:[]}};function getModuleInstances(e,t,s){return e.registry.getModuleInstances(t,s)||[]}function injectFunctions(e,t,s){const n={},c=Object.keys(s),i=Object.keys(t.query),o=t.runtimeVersion.specName,a=e=>i.includes(e),r=e=>getModuleInstances(t,o,e).some(a),m=e=>Object.keys(s[e]),h=(n,c)=>s[n][c](e,t),d=e=>{return !checks[e]||checks[e].instances.some(a)&&(!checks[e].methods.length||checks[e].methods.every((s=checks[e].instances,e=>s.some((s=>i.includes(s)&&t.query[s][e])))))||checks[e].withDetect&&checks[e].instances.some(r);var s;};for(let e=0;e<c.length;e++){const t=c[e];d(t)&&lazyDeriveSection(n,t,m,h);}return n}function getAvailableDerives(e,t,s={}){return {...injectFunctions(e,t,derive),...injectFunctions(e,t,s)}}

	function decorateDeriveSections(e,t){const o=e=>Object.keys(t[e]),r=(o,r)=>e(t[o][r]),i={},c=Object.keys(t);for(let e=0;e<c.length;e++)lazyDeriveSection(i,c[e],o,r);return i}

	const l$3=logger("api/util");

	function filterEvents(e,{block:{extrinsics:i,header:n}},t,o){for(const[o,r]of i.entries())if(r.hash.eq(e))return {blockNumber:isCompact(n.number)?n.number.unwrap():n.number,events:t.filter((({phase:e})=>e.isApplyExtrinsic&&e.asApplyExtrinsic.eqn(o))),txIndex:o};if(o.isInBlock){const t=i.map((e=>e.hash.toHex()));l$3.warn(`block ${n.hash.toHex()}: Unable to find extrinsic ${e.toHex()} inside ${t.join(", ")}`);}return {}}

	function isKeyringPair(i){return isFunction$1(i.sign)}

	const recordIdentity=t=>t;function filterAndApply(t,s,r,i){return t.filter((({event:t})=>s===t.section&&r.includes(t.method))).map((t=>i(t)))}function getDispatchError({event:{data:[t]}}){return t}function getDispatchInfo({event:{data:t,method:s}}){return "ExtrinsicSuccess"===s?t[0]:t[1]}function extractError(t=[]){return filterAndApply(t,"system",["ExtrinsicFailed"],getDispatchError)[0]}function extractInfo(t=[]){return filterAndApply(t,"system",["ExtrinsicFailed","ExtrinsicSuccess"],getDispatchInfo)[0]}class SubmittableResult{constructor({blockNumber:t,dispatchError:s,dispatchInfo:r,events:i,internalError:e,status:n,txHash:a,txIndex:o}){this.dispatchError=s||extractError(i),this.dispatchInfo=r||extractInfo(i),this.events=i||[],this.internalError=e,this.status=n,this.txHash=a,this.txIndex=o,this.blockNumber=t;}get isCompleted(){return this.isError||this.status.isInBlock||this.status.isFinalized}get isError(){return this.status.isDropped||this.status.isFinalityTimeout||this.status.isInvalid||this.status.isUsurped}get isFinalized(){return this.status.isFinalized}get isInBlock(){return this.status.isInBlock}get isWarning(){return this.status.isRetracted}filterRecords(t,s){return filterAndApply(this.events,t,Array.isArray(s)?s:[s],recordIdentity)}findRecord(t,s){return this.filterRecords(t,s)[0]}toHuman(t){return {dispatchError:this.dispatchError?.toHuman(),dispatchInfo:this.dispatchInfo?.toHuman(),events:this.events.map((s=>s.toHuman(t))),internalError:this.internalError?.message.toString(),status:this.status.toHuman(t)}}}

	const identity=t=>t;function makeEraOptions(t,e,i,{header:s,mortalLength:n,nonce:r}){if(!s){if(i.era&&!i.blockHash)throw new Error("Expected blockHash to be passed alongside non-immortal era options");return isNumber(i.era)&&(delete i.era,delete i.blockHash),makeSignOptions(t,i,{nonce:r})}return makeSignOptions(t,i,{blockHash:s.hash,era:e.createTypeUnsafe("ExtrinsicEra",[{current:s.number,period:i.era||n}]),nonce:r})}function makeSignAndSendOptions(t,e){let i={};return isFunction$1(t)?e=t:i=objectSpread({},t),[i,e]}function makeSignOptions(t,e,i){return objectSpread({blockHash:t.genesisHash,genesisHash:t.genesisHash},e,i,{runtimeVersion:t.runtimeVersion,signedExtensions:t.registry.signedExtensions,version:t.extrinsicType})}function optionsOrNonce(t={}){return isBn(t)||isNumber(t)?{nonce:t}:t}function createClass({api:t,apiType:e,blockHash:i,decorateMethod:s}){var n,r,a,o,l,c,h,p;const u=t.registry.createClass("Extrinsic");return n=new WeakMap,r=new WeakMap,a=new WeakMap,o=new WeakMap,l=new WeakMap,c=new WeakMap,h=new WeakMap,p=new WeakMap,class extends u{constructor(i,s){super(i,s,{version:t.extrinsicType}),n.set(this,void 0),r.set(this,identity),a.set(this,((e,i)=>{const s=isKeyringPair(e)?e.address:e.toString(),n=optionsOrNonce(i);return t.derive.tx.signingInfo(s,n.nonce,n.era).pipe(first(),mergeMap((async i=>{const r=makeEraOptions(t,this.registry,n,i);let a=-1;return isKeyringPair(e)?this.sign(e,r):a=await __classPrivateFieldGet(this,h,"f").call(this,s,r,i.header),{options:r,updateId:a}})))})),o.set(this,((e,i)=>{if(!i.isFinalized&&!i.isInBlock)return of(__classPrivateFieldGet(this,r,"f").call(this,new SubmittableResult({status:i,txHash:e})));const s=i.isInBlock?i.asInBlock:i.asFinalized;return t.derive.tx.events(s).pipe(map((({block:t,events:s})=>__classPrivateFieldGet(this,r,"f").call(this,new SubmittableResult({...filterEvents(e,t,s,i),status:i,txHash:e})))),catchError((t=>of(__classPrivateFieldGet(this,r,"f").call(this,new SubmittableResult({internalError:t,status:i,txHash:e}))))))})),l.set(this,(e=>t.rpc.author.submitExtrinsic(this).pipe(tap((t=>{__classPrivateFieldGet(this,p,"f").call(this,t,e);}))))),c.set(this,(e=>{const i=this.hash;return t.rpc.author.submitAndWatchExtrinsic(this).pipe(switchMap((t=>__classPrivateFieldGet(this,o,"f").call(this,i,t))),tap((t=>{__classPrivateFieldGet(this,p,"f").call(this,t,e);})))})),h.set(this,(async(e,i,s)=>{const n=i.signer||t.signer;if(!n)throw new Error("No signer specified, either via api.setSigner or via sign options. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");const r=this.registry.createTypeUnsafe("SignerPayload",[objectSpread({},i,{address:e,blockNumber:s?s.number:0,method:this.method})]);let a;if(isFunction$1(n.signPayload))a=await n.signPayload(r.toPayload());else {if(!isFunction$1(n.signRaw))throw new Error("Invalid signer interface, it should implement either signPayload or signRaw (or both)");a=await n.signRaw(r.toRaw());}return super.addSignature(e,a.signature,r.toPayload()),a.id})),p.set(this,((e,i)=>{if(i&&-1!==i.updateId){const{options:s,updateId:n}=i,r=s.signer||t.signer;r&&isFunction$1(r.update)&&r.update(n,e);}})),__classPrivateFieldSet(this,n,"rxjs"===e,"f");}get hasDryRun(){return isFunction$1(t.rpc.system?.dryRun)}get hasPaymentInfo(){return isFunction$1(t.call.transactionPaymentApi?.queryInfo)}dryRun(e,n){if(!this.hasDryRun)throw new Error("The system.dryRun RPC call is not available in your environment");return i||isString(n)||isU8a(n)?s((()=>t.rpc.system.dryRun(this.toHex(),i||n))):s((()=>__classPrivateFieldGet(this,a,"f").call(this,e,n).pipe(switchMap((()=>t.rpc.system.dryRun(this.toHex()))))))()}paymentInfo(e,n){if(!this.hasPaymentInfo)throw new Error("The transactionPaymentApi.queryInfo runtime call is not available in your environment");if(i||isString(n)||isU8a(n))return s((()=>t.callAt(i||n).pipe(switchMap((t=>{const e=this.toU8a();return t.transactionPaymentApi.queryInfo(e,e.length)})))));const[r]=makeSignAndSendOptions(n),a=isKeyringPair(e)?e.address:e.toString();return s((()=>t.derive.tx.signingInfo(a,r.nonce,r.era).pipe(first(),switchMap((e=>{const i=makeEraOptions(t,this.registry,r,e),s=makeSignOptions(t,i,{}),n=this.isSigned?t.tx(this).signFake(a,s).toU8a():this.signFake(a,s).toU8a();return t.call.transactionPaymentApi.queryInfo(n,n.length)})))))()}send(e){const i=t.hasSubscriptions&&(__classPrivateFieldGet(this,n,"f")||!!e);return s(__classPrivateFieldGet(this,i?c:l,"f"))(e)}signAsync(t,e){return s((()=>__classPrivateFieldGet(this,a,"f").call(this,t,e).pipe(map((()=>this)))))()}signAndSend(e,i,r){const[o,h]=makeSignAndSendOptions(i,r),p=t.hasSubscriptions&&(__classPrivateFieldGet(this,n,"f")||!!h);return s((()=>__classPrivateFieldGet(this,a,"f").call(this,e,o).pipe(switchMap((t=>p?__classPrivateFieldGet(this,c,"f").call(this,t):__classPrivateFieldGet(this,l,"f").call(this,t))))))(h)}withResultTransform(t){return __classPrivateFieldSet(this,r,t,"f"),this}}}

	function createSubmittable(e,t,a,r,s){const c=createClass({api:t,apiType:e,blockHash:s,decorateMethod:a});return e=>new c(r||t.registry,e)}

	function findCall(r,o){return r.findMetaCall(u8aToU8a(o))}function findError(r,o){return r.findMetaError(u8aToU8a(o))}

	const typesChain={};var typesChain$1 = typesChain;

	const sharedTypes$5={AnchorData:{anchoredBlock:"u64",docRoot:"H256",id:"H256"},DispatchErrorModule:"DispatchErrorModuleU8",PreCommitData:{expirationBlock:"u64",identity:"H256",signingRoot:"H256"},Fee:{key:"Hash",price:"Balance"},MultiAccountData:{deposit:"Balance",depositor:"AccountId",signatories:"Vec<AccountId>",threshold:"u16"},ChainId:"u8",DepositNonce:"u64",ResourceId:"[u8; 32]","chainbridge::ChainId":"u8",RegistryId:"H160",TokenId:"U256",AssetId:{registryId:"RegistryId",tokenId:"TokenId"},AssetInfo:{metadata:"Bytes"},MintInfo:{anchorId:"Hash",proofs:"Vec<ProofMint>",staticHashes:"[Hash; 3]"},Proof:{leafHash:"H256",sortedHashes:"H256"},ProofMint:{hashes:"Vec<Hash>",property:"Bytes",salt:"[u8; 32]",value:"Bytes"},RegistryInfo:{fields:"Vec<Bytes>",ownerCanBurn:"bool"},ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","NonProxy"]}},standaloneTypes=objectSpread({},sharedTypes$5,{AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",LookupSource:"IndicesLookupSource",Multiplier:"Fixed64",RefCount:"RefCountTo259"}),versioned$8=[{minmax:[240,243],types:objectSpread({},standaloneTypes,{ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","Vesting"]}})},{minmax:[244,999],types:objectSpread({},standaloneTypes)},{minmax:[1e3,void 0],types:objectSpread({},sharedTypes$5)}];var centrifugeChain = versioned$8;

	const sharedTypes$4={CompactAssignments:"CompactAssignmentsWith24",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith24",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Governance","Staking","IdentityJudgement","CancelProxy","Auction"]},Weight:"WeightV1"},addrIndicesTypes={AccountInfo:"AccountInfoWithRefCount",Address:"LookupSource",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"IndicesLookupSource",ValidatorPrefs:"ValidatorPrefsWithCommission"},addrAccountIdTypes$2={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned$7=[{minmax:[1019,1031],types:objectSpread({},addrIndicesTypes,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchError:"DispatchErrorTo198",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",IdentityInfo:"IdentityInfoTo198",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1032,1042],types:objectSpread({},addrIndicesTypes,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",SlashingSpans:"SlashingSpansTo204",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1043,1045],types:objectSpread({},addrIndicesTypes,{BalanceLock:"BalanceLockTo212",CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Keys:"SessionKeys5",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo223",Votes:"VotesTo230",Weight:"u32"})},{minmax:[1046,1049],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo223",Weight:"u32"})},{minmax:[1050,1054],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",ReferendumInfo:"ReferendumInfoTo239",StakingLedger:"StakingLedgerTo240",Weight:"u32"})},{minmax:[1055,1056],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",StakingLedger:"StakingLedgerTo240",Weight:"u32"})},{minmax:[1057,1061],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[1062,2012],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[2013,2022],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"})},{minmax:[2023,2024],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2,{RefCount:"RefCountTo259"})},{minmax:[2025,2027],types:objectSpread({},sharedTypes$4,addrAccountIdTypes$2)},{minmax:[2028,2029],types:objectSpread({},sharedTypes$4,{AccountInfo:"AccountInfoWithDualRefCount",CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"})},{minmax:[2030,9e3],types:objectSpread({},sharedTypes$4,{CompactAssignments:"CompactAssignmentsWith16",RawSolution:"RawSolutionWith16"})},{minmax:[9010,9099],types:objectSpread({},sharedTypes$4,mapXcmTypes("V0"))},{minmax:[9100,9105],types:objectSpread({},sharedTypes$4,mapXcmTypes("V1"))},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}];var kusama = versioned$7;

	const versioned$6=[{minmax:[0,void 0],types:{Weight:"WeightV2"}}];var node = versioned$6;

	const versioned$5=[{minmax:[0,void 0],types:{Weight:"WeightV2"}}];var nodeTemplate = versioned$5;

	const sharedTypes$3={CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:{Any:0,NonTransfer:1,Governance:2,Staking:3,UnusedSudoBalances:4,IdentityJudgement:5,CancelProxy:6,Auction:7}},Weight:"WeightV1"},addrAccountIdTypes$1={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",DispatchErrorModule:"DispatchErrorModuleU8",Keys:"SessionKeys5",LookupSource:"AccountId",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned$4=[{minmax:[0,12],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1,{CompactAssignments:"CompactAssignmentsTo257",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[13,22],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1,{CompactAssignments:"CompactAssignmentsTo257",RefCount:"RefCountTo259"})},{minmax:[23,24],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1,{RefCount:"RefCountTo259"})},{minmax:[25,27],types:objectSpread({},sharedTypes$3,addrAccountIdTypes$1)},{minmax:[28,29],types:objectSpread({},sharedTypes$3,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[30,9109],types:objectSpread({},sharedTypes$3)},{minmax:[9110,void 0],types:{Weight:"WeightV1"}}];var polkadot = versioned$4;

	const sharedTypes$2={DispatchErrorModule:"DispatchErrorModuleU8",FullIdentification:"()",Keys:"SessionKeys7B",Weight:"WeightV1"},versioned$3=[{minmax:[0,200],types:objectSpread({},sharedTypes$2,{AccountInfo:"AccountInfoWithDualRefCount",Address:"AccountId",LookupSource:"AccountId"})},{minmax:[201,214],types:objectSpread({},sharedTypes$2,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[215,228],types:objectSpread({},sharedTypes$2,{Keys:"SessionKeys6"})},{minmax:[229,9099],types:objectSpread({},sharedTypes$2,mapXcmTypes("V0"))},{minmax:[9100,9105],types:objectSpread({},sharedTypes$2,mapXcmTypes("V1"))},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}];var rococo = versioned$3;

	const versioned$2=[{minmax:[0,void 0],types:{}}];var shell = versioned$2;

	const sharedTypes$1={DispatchErrorModule:"DispatchErrorModuleU8",TAssetBalance:"u128",ProxyType:{_enum:["Any","NonTransfer","CancelProxy","Assets","AssetOwner","AssetManager","Staking"]},Weight:"WeightV1"},versioned$1=[{minmax:[0,3],types:objectSpread({DispatchError:"DispatchErrorPre6First"},sharedTypes$1,mapXcmTypes("V0"))},{minmax:[4,5],types:objectSpread({DispatchError:"DispatchErrorPre6First"},sharedTypes$1,mapXcmTypes("V1"))},{minmax:[500,void 0],types:{Weight:"WeightV1"}}];var statemint = versioned$1;

	const sharedTypes={CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",RawSolution:"RawSolutionWith16",Keys:"SessionKeys6",ProxyType:{_enum:["Any","NonTransfer","Staking","SudoBalances","IdentityJudgement","CancelProxy"]},Weight:"WeightV1"},addrAccountIdTypes={AccountInfo:"AccountInfoWithRefCount",Address:"AccountId",CompactAssignments:"CompactAssignmentsWith16",DispatchErrorModule:"DispatchErrorModuleU8",LookupSource:"AccountId",Keys:"SessionKeys5",RawSolution:"RawSolutionWith16",ValidatorPrefs:"ValidatorPrefsWithCommission"},versioned=[{minmax:[1,2],types:objectSpread({},sharedTypes,addrAccountIdTypes,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",Multiplier:"Fixed64",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259",Weight:"u32"})},{minmax:[3,22],types:objectSpread({},sharedTypes,addrAccountIdTypes,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",OpenTip:"OpenTipTo225",RefCount:"RefCountTo259"})},{minmax:[23,42],types:objectSpread({},sharedTypes,addrAccountIdTypes,{CompactAssignments:"CompactAssignmentsTo257",DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"})},{minmax:[43,44],types:objectSpread({},sharedTypes,addrAccountIdTypes,{DispatchInfo:"DispatchInfoTo244",Heartbeat:"HeartbeatTo244",RefCount:"RefCountTo259"})},{minmax:[45,47],types:objectSpread({},sharedTypes,addrAccountIdTypes)},{minmax:[48,49],types:objectSpread({},sharedTypes,{AccountInfo:"AccountInfoWithDualRefCount"})},{minmax:[50,9099],types:objectSpread({},sharedTypes,mapXcmTypes("V0"))},{minmax:[9100,9105],types:objectSpread({},sharedTypes,mapXcmTypes("V1"))},{minmax:[9106,void 0],types:{Weight:"WeightV1"}}];var westend = versioned;

	const typesSpec={"centrifuge-chain":centrifugeChain,kusama:kusama,node:node,"node-template":nodeTemplate,polkadot:polkadot,rococo:rococo,shell:shell,statemine:statemint,statemint:statemint,westend:westend,westmint:statemint};var typesSpec$1 = typesSpec;

	const upgrades$6=[[0,1020,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[26669,1021,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[38245,1022,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[54248,1023,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[59659,1024,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[67651,1025,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[82191,1027,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[83238,1028,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[101503,1029,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[203466,1030,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[295787,1031,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[461692,1032,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[504329,1033,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[569327,1038,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",1],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[587687,1039,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[653183,1040,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[693488,1042,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[901442,1045,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1375086,1050,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1445458,1051,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1472960,1052,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1475648,1053,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1491596,1054,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1574408,1055,[["0xdf6acb689907609b",2],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",1],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2064961,1058,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2201991,1062,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2671528,2005,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2704202,2007,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2728002,2008,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2832534,2011,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2962294,2012,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[324e4,2013,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3274408,2015,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3323565,2019,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3534175,2022,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3860281,2023,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4143129,2024,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4401242,2025,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4841367,2026,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5961600,2027,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6137912,2028,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6561855,2029,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7100891,2030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7468792,9010,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7668600,9030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7812476,9040,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8010981,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8073833,9070,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8555825,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8945245,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9611377,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9625129,9111,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9866422,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10403784,9130,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10960765,9150,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11006614,9151,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11404482,9160,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11601803,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12008022,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12405451,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12665416,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12909508,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13109752,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13555777,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[13727747,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[14248044,9271,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[14433840,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[14645900,9291,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[15048375,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[15426015,9320,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15680713,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[15756296,9350,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]]];var upgrades$7 = upgrades$6;

	const upgrades$4=[[0,0,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[29231,1,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[188836,5,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[199405,6,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[214264,7,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[244358,8,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[303079,9,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[314201,10,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[342400,11,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[443963,12,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[528470,13,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[687751,14,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[746085,15,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[787923,16,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[799302,17,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1205128,18,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1603423,23,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1733218,24,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2005673,25,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2436698,26,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3613564,27,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3899547,28,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4345767,29,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4876134,30,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5661442,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6321619,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6713249,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7217907,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7229126,9110,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7560558,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8115869,9140,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8638103,9151,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9280179,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9738717,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10156856,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10458576,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10655116,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10879371,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11328884,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11532856,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11933818,9270,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[12217535,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12245277,9281,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12532644,9291,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]],[12876189,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0x17a6bc0d0062aeb3",1],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1]]]];var upgrades$5 = upgrades$4;

	const upgrades$2=[[214356,4,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",1],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[392764,7,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[409740,8,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[809976,20,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[877581,24,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[879238,25,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[889472,26,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[902937,27,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[932751,28,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[991142,29,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1030162,31,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1119657,32,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1199282,33,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1342534,34,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1392263,35,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1431703,36,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1433369,37,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[1490972,41,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2087397,43,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2316688,44,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[2549864,45,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3925782,46,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[3925843,47,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4207800,48,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[4627944,49,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5124076,50,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5478664,900,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5482450,9e3,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",4],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5584305,9010,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5784566,9030,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5879822,9031,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5896856,9032,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[5897316,9033,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6117927,9050,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6210274,9070,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",2],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6379314,9080,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",2],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[6979141,9090,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7568453,9100,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7766394,9111,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7911691,9120,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7968866,9121,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[7982889,9122,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[8514322,9130,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9091726,9140,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9091774,9150,[["0xdf6acb689907609b",3],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",1],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9406726,9160,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[9921066,9170,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10007115,9180,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",5],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10480973,9190,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10578091,9200,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10678509,9210,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[10811001,9220,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11096116,9230,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11409279,9250,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11584820,9251,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11716837,9260,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11876919,9261,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1]]],[11987927,9270,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[12077324,9271,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0x17a6bc0d0062aeb3",1]]],[12301871,9280,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[12604343,9290,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",2],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[12841034,9300,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[13128237,9310,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",1],["0xf3ff14d5ab527059",1],["0x17a6bc0d0062aeb3",1]]],[13272363,9320,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13483497,9330,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13649433,9340,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]],[13761100,9350,[["0xdf6acb689907609b",4],["0x37e397fc7c91f5e4",1],["0x40fe3ad401f8959a",6],["0xd2bc9897eed08f15",3],["0xf78b278be53f454c",2],["0xaf2c0297a23e6d3d",3],["0x49eaaf1b548a0cb0",1],["0x91d5df18b0d2cf58",1],["0xed99c5acb25eedf5",3],["0xcbca25e39f142387",2],["0x687ad44ad37f03c2",1],["0xab3c0572291feb8b",1],["0xbc9d89904f5b923f",1],["0x37c8bb1350a9a2a8",2],["0xf3ff14d5ab527059",2],["0x17a6bc0d0062aeb3",1]]]];var upgrades$3 = upgrades$2;

	var allKnown = /*#__PURE__*/Object.freeze({
		__proto__: null,
		kusama: upgrades$7,
		polkadot: upgrades$5,
		westend: upgrades$3
	});

	const NET_EXTRA={westend:{genesisHash:["0xe143f23803ac50e8f6f8e62695d1ce9e4e1d68aa36c1cd2cfd15340213f3423e"]}};function mapRaw([e,o]){const n=selectableNetworks.find((o=>o.network===e))||NET_EXTRA[e];if(!n)throw new Error(`Unable to find info for chain ${e}`);return {genesisHash:hexToU8a(n.genesisHash[0]),network:e,versions:o.map((([e,o,n])=>({apis:n,blockNumber:new BN(e),specVersion:new BN(o)})))}}const upgrades=Object.entries(allKnown).map(mapRaw);var upgrades$1 = upgrades;

	function withNames(e,n,t){return t(e.toString(),n.toString())}function filterVersions(e=[],n){return e.filter((({minmax:[e,t]})=>(null==e||n>=e)&&(null==t||n<=t))).reduce(((e,{types:n})=>objectSpread(e,n)),{})}function getSpecExtensions({knownTypes:e},n,t){return withNames(n,t,((n,t)=>objectSpread({},e.typesBundle?.spec?.[t]?.signedExtensions,e.typesBundle?.chain?.[n]?.signedExtensions)))}function getSpecTypes({knownTypes:e},n,t,s){const r=bnToBn(s).toNumber();return withNames(n,t,((n,t)=>objectSpread({},filterVersions(typesSpec$1[t],r),filterVersions(typesChain$1[n],r),filterVersions(e.typesBundle?.spec?.[t]?.types,r),filterVersions(e.typesBundle?.chain?.[n]?.types,r),e.typesSpec?.[t],e.typesChain?.[n],e.types)))}function getSpecHasher({knownTypes:e},n,t){return withNames(n,t,((n,t)=>e.hasher||e.typesBundle?.chain?.[n]?.hasher||e.typesBundle?.spec?.[t]?.hasher||null))}function getSpecRpc({knownTypes:e},n,t){return withNames(n,t,((n,t)=>objectSpread({},e.typesBundle?.spec?.[t]?.rpc,e.typesBundle?.chain?.[n]?.rpc)))}function getSpecRuntime({knownTypes:e},n,t){return withNames(n,t,((n,t)=>objectSpread({},e.typesBundle?.spec?.[t]?.runtime,e.typesBundle?.chain?.[n]?.runtime)))}function getSpecAlias({knownTypes:e},n,t){return withNames(n,t,((n,t)=>objectSpread({},e.typesBundle?.spec?.[t]?.alias,e.typesBundle?.chain?.[n]?.alias,e.typesAlias)))}function getUpgradeVersion(e,n){const t=upgrades$1.find((n=>e.eq(n.genesisHash)));return t?[t.versions.reduce(((e,t)=>n.gt(t.blockNumber)?t:e),void 0),t.versions.find((e=>n.lte(e.blockNumber)))]:[void 0,void 0]}

	const l$2=logger("api/augment");function logLength(e,t,n=[]){return t.length?` ${t.length} ${e}${n.length?" and":""}`:""}function logValues(e,t){return t.length?`\n\t${e.padStart(7)}: ${t.sort().join(", ")}`:""}function warn(e,t,[n,o]){(n.length||o.length)&&l$2.warn(`api.${e}: Found${logLength("added",n,o)}${logLength("removed",o)} ${t}:${logValues("added",n)}${logValues("removed",o)}`);}function findSectionExcludes(e,t){return e.filter((e=>!t.includes(e)))}function findSectionIncludes(e,t){return e.filter((e=>t.includes(e)))}function extractSections(e,t){const n=Object.keys(e),o=Object.keys(t);return [findSectionExcludes(n,o),findSectionExcludes(o,n)]}function findMethodExcludes(e,t){const n=Object.keys(e),o=findSectionIncludes(Object.keys(t),n),c=[];for(let n=0;n<o.length;n++){const l=o[n],r=Object.keys(e[l]),s=Object.keys(t[l]);for(let e=0;e<s.length;e++){const t=s[e];r.includes(t)||c.push(`${l}.${t}`);}}return c}function extractMethods(e,t){return [findMethodExcludes(t,e),findMethodExcludes(e,t)]}function augmentObject(e,t,n,o=!1){o&&objectClear(n),e&&Object.keys(n).length&&(warn(e,"modules",extractSections(t,n)),warn(e,"calls",extractMethods(t,n)));const c=Object.keys(t);for(let e=0;e<c.length;e++){const o=c[e],l=t[o];n[o]||(n[o]={}),lazyMethods(n[o],Object.keys(l),(e=>l[e]));}return n}

	function sig({lookup:e},{method:t,section:n},o){return `${n}.${t}(${o.map((t=>e.getTypeDef(t).type)).join(", ")})`}function extractStorageArgs(e,t,n){const o=n.filter((e=>!isUndefined(e)));if(t.meta.type.isPlain){if(0!==o.length)throw new Error(`${sig(e,t,[])} does not take any arguments, ${o.length} found`)}else {const{hashers:n,key:r}=t.meta.type.asMap,i=1===n.length?[r]:e.lookup.getSiType(r).def.asTuple.map((e=>e));if(o.length!==i.length)throw new Error(`${sig(e,t,i)} is a map, requiring ${i.length} arguments, ${o.length} found`)}return [t,o]}

	var _Events_eventemitter;class Events{constructor(){_Events_eventemitter.set(this,new EventEmitter);}emit(e,...t){return __classPrivateFieldGet(this,_Events_eventemitter,"f").emit(e,...t)}on(e,t){return __classPrivateFieldGet(this,_Events_eventemitter,"f").on(e,t),this}off(e,t){return __classPrivateFieldGet(this,_Events_eventemitter,"f").removeListener(e,t),this}once(e,t){return __classPrivateFieldGet(this,_Events_eventemitter,"f").once(e,t),this}}_Events_eventemitter=new WeakMap;

	var _Decorate_instanceId,_Decorate_runtimeLog,_Decorate_registry,_Decorate_storageGetQ,_Decorate_storageSubQ;const l$1=logger("api/init");let instanceCounter=0;function getAtQueryFn(e,{method:t,section:r}){return assertReturn(e.rx.query[r]&&e.rx.query[r][t],(()=>`query.${r}.${t} is not available in this version of the metadata`))}class Decorate extends Events{constructor(e,t,r){super(),_Decorate_instanceId.set(this,void 0),_Decorate_runtimeLog.set(this,{}),_Decorate_registry.set(this,void 0),_Decorate_storageGetQ.set(this,[]),_Decorate_storageSubQ.set(this,[]),this.__phantom=new BN(0),this._call={},this._consts={},this._errors={},this._events={},this._extrinsicType=GenericExtrinsic.LATEST_EXTRINSIC_VERSION,this._isReady=!1,this._query={},this._runtimeMap={},this._rx={call:{},consts:{},query:{},tx:{}},this._rxDecorateMethod=e=>e,__classPrivateFieldSet(this,_Decorate_instanceId,""+ ++instanceCounter,"f"),__classPrivateFieldSet(this,_Decorate_registry,e.source?.registry||e.registry||new TypeRegistry,"f"),this._rx.callAt=(e,t)=>from(this.at(e,t)).pipe(map((e=>e.rx.call))),this._rx.queryAt=(e,t)=>from(this.at(e,t)).pipe(map((e=>e.rx.query))),this._rx.registry=__classPrivateFieldGet(this,_Decorate_registry,"f");const s=e.source?e.source._rpcCore.provider.isClonable?e.source._rpcCore.provider.clone():e.source._rpcCore.provider:e.provider||new WsProvider;this._decorateMethod=r,this._options=e,this._type=t,this._rpcCore=new RpcCore(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),__classPrivateFieldGet(this,_Decorate_registry,"f"),s,this._options.rpc),this._isConnected=new BehaviorSubject(this._rpcCore.provider.isConnected),this._rx.hasSubscriptions=this._rpcCore.provider.hasSubscriptions;}get registry(){return __classPrivateFieldGet(this,_Decorate_registry,"f")}createType(e,...t){return __classPrivateFieldGet(this,_Decorate_registry,"f").createType(e,...t)}registerTypes(e){e&&__classPrivateFieldGet(this,_Decorate_registry,"f").register(e);}get hasSubscriptions(){return this._rpcCore.provider.hasSubscriptions}get supportMulti(){return this._rpcCore.provider.hasSubscriptions||!!this._rpcCore.state.queryStorageAt}_emptyDecorated(e,t){return {call:{},consts:{},errors:{},events:{},query:{},registry:e,rx:{call:{},query:{}},tx:createSubmittable(this._type,this._rx,this._decorateMethod,e,t)}}_createDecorated(e,t,r,s){r||(r=this._emptyDecorated(e.registry,s)),!t&&e.decoratedMeta||(e.decoratedMeta=expandMetadata(e.registry,e.metadata));const i=this._decorateCalls(e,this._decorateMethod,s),a=this._decorateCalls(e,this._rxDecorateMethod,s),o=this._decorateStorage(e.decoratedMeta,this._decorateMethod,s),c=this._decorateStorage(e.decoratedMeta,this._rxDecorateMethod,s);return augmentObject("consts",e.decoratedMeta.consts,r.consts,t),augmentObject("errors",e.decoratedMeta.errors,r.errors,t),augmentObject("events",e.decoratedMeta.events,r.events,t),augmentObject("query",o,r.query,t),augmentObject("query",c,r.rx.query,t),augmentObject("call",i,r.call,t),augmentObject("call",a,r.rx.call,t),r.findCall=t=>findCall(e.registry,t),r.findError=t=>findError(e.registry,t),r.queryMulti=s?this._decorateMultiAt(r,this._decorateMethod,s):this._decorateMulti(this._decorateMethod),r.runtimeVersion=e.runtimeVersion,{createdAt:s,decoratedApi:r,decoratedMeta:e.decoratedMeta}}_injectMetadata(e,t=!1){!t&&e.decoratedApi||(e.decoratedApi=this._emptyDecorated(e.registry));const{decoratedApi:r,decoratedMeta:s}=this._createDecorated(e,t,e.decoratedApi);this._call=r.call,this._consts=r.consts,this._errors=r.errors,this._events=r.events,this._query=r.query,this._rx.call=r.rx.call,this._rx.query=r.rx.query;const i=this._decorateExtrinsics(s,this._decorateMethod),a=this._decorateExtrinsics(s,this._rxDecorateMethod);t||!this._extrinsics?(this._extrinsics=i,this._rx.tx=a):(augmentObject("tx",i,this._extrinsics,!1),augmentObject(null,a,this._rx.tx,!1)),augmentObject(null,s.consts,this._rx.consts,t),this.emit("decorated");}injectMetadata(e,t,r){this._injectMetadata({counter:0,metadata:e,registry:r||__classPrivateFieldGet(this,_Decorate_registry,"f"),runtimeVersion:__classPrivateFieldGet(this,_Decorate_registry,"f").createType("RuntimeVersionPartial")},t);}_decorateFunctionMeta(e,t){return t.meta=e.meta,t.method=e.method,t.section=e.section,t.toJSON=e.toJSON,e.callIndex&&(t.callIndex=e.callIndex),t}_filterRpc(e,t){0!==Object.keys(t).length&&(this._rpcCore.addUserInterfaces(t),this._decorateRpc(this._rpcCore,this._decorateMethod,this._rpc),this._decorateRpc(this._rpcCore,this._rxDecorateMethod,this._rx.rpc));const r={};for(let t=0;t<e.length;t++){const[s]=e[t].split("_");r[s]=!0;}const s=Object.keys(r);for(let e=0;e<s.length;e++){const t=stringUpperFirst(s[e]),r=`${t}Api`;this._runtimeMap[blake2AsHex(t,64)]=t,this._runtimeMap[blake2AsHex(r,64)]=r;}this._filterRpcMethods(e);}_filterRpcMethods(e){const t=0!==e.length,r=[...this._rpcCore.mapping.entries()],s=[];for(let e=0;e<r.length;e++){const[,{alias:t,endpoint:i,method:a,pubsub:o,section:c}]=r[e];s.push(`${c}_${a}`),o&&(s.push(`${c}_${o[1]}`),s.push(`${c}_${o[2]}`)),t&&s.push(...t),i&&s.push(i);}const i=e.filter((e=>!s.includes(e)&&!e.includes("_unstable_")));i.length&&!this._options.noInitWarn&&l$1.warn(`RPC methods not decorated: ${i.join(", ")}`);for(let s=0;s<r.length;s++){const[i,{method:a,section:o}]=r[s];t&&!e.includes(i)&&"rpc_methods"!==i&&this._rpc[o]&&(delete this._rpc[o][a],delete this._rx.rpc[o][a]);}}_rpcSubmitter(e){return e(((e,...t)=>from(this._rpcCore.provider.send(e,t))))}_decorateRpc(e,t,r=this._rpcSubmitter(t)){const s=r,i=(r,s)=>{const i=e[r][s],a=t(i,{methodName:s});return a.meta=i.meta,a.raw=t(i.raw,{methodName:s}),a};for(let t=0;t<e.sections.length;t++){const r=e.sections[t];if(!Object.prototype.hasOwnProperty.call(s,r)){const t=Object.keys(e[r]),a=e=>i(r,e);for(let e=0;e<t.length;e++){const i=t[e];(this.hasSubscriptions||!i.startsWith("subscribe")&&!i.startsWith("unsubscribe"))&&(Object.prototype.hasOwnProperty.call(s,r)||(s[r]={}),lazyMethod(s[r],i,a));}}}return s}_addRuntimeDef(e,t){if(!t)return;const r=Object.entries(t);for(let t=0;t<r.length;t++){const[s,i]=r[t];if(e[s])for(let t=0;t<i.length;t++){const r=i[t],a=e[s].find((({version:e})=>r.version===e));a?objectSpread(a.methods,r.methods):e[s].push(r);}else e[s]=i;}}_getRuntimeDefs(e,t,r=""){const s={},i=Object.values(typeDefinitions);for(let e=0;e<i.length;e++)this._addRuntimeDef(s,i[e].runtime);return this._addRuntimeDef(s,getSpecRuntime(e,r,t)),this._addRuntimeDef(s,this._options.runtime),Object.entries(s)}_decorateCalls({registry:e,runtimeVersion:{apis:t,specName:r,specVersion:s}},i,a){const o={},c={},n={},_=this._getRuntimeDefs(e,r,this._runtimeChain),h=[],p=`${r.toString()}/${s.toString()}`,d=__classPrivateFieldGet(this,_Decorate_runtimeLog,"f")[p]||!1;__classPrivateFieldGet(this,_Decorate_runtimeLog,"f")[p]=!0;for(let e=0;e<_.length;e++){const[r,s]=_[e],i=blake2AsHex(r,64),a=t.find((([e])=>e.eq(i)));if(n[i]=!0,a){const e=s.map((({version:e})=>e)).sort(),t=s.find((({version:e})=>a[1].eq(e)));if(t){const e=stringCamelCase(r),s=Object.entries(t.methods);if(s.length){c[e]||(c[e]={});for(let t=0;t<s.length;t++){const[a,o]=s[t],n=stringCamelCase(a);c[e][n]=objectSpread({method:n,name:`${r}_${a}`,section:e,sectionHash:i},o);}}}else h.push(`${r}/${a[1].toString()} (${e.join("/")} known)`);}}const u=t.map((([e,t])=>[e.toHex(),t.toString()])).filter((([e])=>!n[e])).map((([e,t])=>`${this._runtimeMap[e]||e}/${t}`));this._options.noInitWarn||d||(h.length&&l$1.warn(`${p}: Not decorating runtime apis without matching versions: ${h.join(", ")}`),u.length&&l$1.warn(`${p}: Not decorating unknown runtime apis: ${u.join(", ")}`));const m=a?(e,t)=>this._rpcCore.state.call(e,t,a):(e,t)=>this._rpcCore.state.call(e,t),g=t=>lazyMethods({},Object.keys(c[t]),(r=>this._decorateCall(e,c[t][r],m,i))),y=Object.keys(c);for(let e=0;e<y.length;e++)lazyMethod(o,y[e],g);return o}_decorateCall(e,t,r,s){const i=s(((...s)=>{if(s.length!==t.params.length)throw new Error(`${t.name}:: Expected ${t.params.length} arguments, found ${s.length}`);const i=e.createType("Raw",u8aConcatStrict(s.map(((r,s)=>e.createTypeUnsafe(t.params[s].type,[r]).toU8a()))));return r(t.name,i).pipe(map((r=>e.createTypeUnsafe(t.type,[r]))))}));return i.meta=t,i}_decorateMulti(e){return e((e=>e.length?(this.hasSubscriptions?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt)(e.map((e=>Array.isArray(e)?e[0].creator.meta.type.isPlain?[e[0].creator]:1===e[0].creator.meta.type.asMap.hashers.length?[e[0].creator,e.slice(1)]:[e[0].creator,...e.slice(1)]:[e.creator]))):of([])))}_decorateMultiAt(e,t,r){return t((t=>t.length?this._rpcCore.state.queryStorageAt(t.map((t=>{if(Array.isArray(t)){const{creator:r}=getAtQueryFn(e,t[0].creator);return r.meta.type.isPlain?[r]:1===r.meta.type.asMap.hashers.length?[r,t.slice(1)]:[r,...t.slice(1)]}return [getAtQueryFn(e,t.creator).creator]})),r):of([])))}_decorateExtrinsics({tx:e},t){const r=createSubmittable(this._type,this._rx,t),s=t=>lazyMethods({},Object.keys(e[t]),(s=>s.startsWith("$")?e[t][s]:this._decorateExtrinsicEntry(e[t][s],r))),i=Object.keys(e);for(let e=0;e<i.length;e++)lazyMethod(r,i[e],s);return r}_decorateExtrinsicEntry(e,t){const r=(...r)=>t(e(...r));return r.is=t=>e.is(t),this._decorateFunctionMeta(e,r)}_decorateStorage({query:e,registry:t},r,s){const i={},a=i=>lazyMethods({},Object.keys(e[i]),(a=>s?this._decorateStorageEntryAt(t,e[i][a],r,s):this._decorateStorageEntry(e[i][a],r))),o=Object.keys(e);for(let e=0;e<o.length;e++)lazyMethod(i,o[e],a);return i}_decorateStorageEntry(e,t){const r=(t,r)=>extractStorageArgs(r||__classPrivateFieldGet(this,_Decorate_registry,"f"),e,t),s=t=>from(this.at(t)).pipe(map((t=>getAtQueryFn(t,e)))),i=this._decorateStorageCall(e,t);return i.creator=e,i.at=t(((e,...t)=>s(e).pipe(switchMap((e=>e(...t)))))),i.hash=t(((...e)=>this._rpcCore.state.getStorageHash(r(e)))),i.is=t=>t.section===e.section&&t.method===e.method,i.key=(...t)=>u8aToHex(compactStripLength(e(...t))[1]),i.keyPrefix=(...t)=>u8aToHex(e.keyPrefix(...t)),i.size=t(((...e)=>this._rpcCore.state.getStorageSize(r(e)))),i.sizeAt=t(((e,...t)=>s(e).pipe(switchMap((s=>this._rpcCore.state.getStorageSize(r(t,s.creator.meta.registry),e)))))),e.iterKey&&e.meta.type.isMap&&(i.entries=t(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),((...t)=>this._retrieveMapEntries(e,null,t)))),i.entriesAt=t(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),((e,...t)=>s(e).pipe(switchMap((r=>this._retrieveMapEntries(r.creator,e,t))))))),i.entriesPaged=t(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),(t=>this._retrieveMapEntriesPaged(e,void 0,t)))),i.keys=t(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),((...t)=>this._retrieveMapKeys(e,null,t)))),i.keysAt=t(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),((e,...t)=>s(e).pipe(switchMap((r=>this._retrieveMapKeys(r.creator,e,t))))))),i.keysPaged=t(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),(t=>this._retrieveMapKeysPaged(e,void 0,t))))),this.supportMulti&&e.meta.type.isMap&&(i.multi=t((t=>1===e.meta.type.asMap.hashers.length?this._retrieveMulti(t.map((t=>[e,[t]]))):this._retrieveMulti(t.map((t=>[e,t])))))),this._decorateFunctionMeta(e,i)}_decorateStorageEntryAt(e,t,r,s){const i=r=>extractStorageArgs(e,t,r),a=r(((...e)=>this._rpcCore.state.getStorage(i(e),s)));return a.creator=t,a.hash=r(((...e)=>this._rpcCore.state.getStorageHash(i(e),s))),a.is=e=>e.section===t.section&&e.method===t.method,a.key=(...e)=>u8aToHex(compactStripLength(t(...e))[1]),a.keyPrefix=(...e)=>u8aToHex(t.keyPrefix(...e)),a.size=r(((...e)=>this._rpcCore.state.getStorageSize(i(e),s))),t.iterKey&&t.meta.type.isMap&&(a.entries=r(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),((...e)=>this._retrieveMapEntries(t,s,e)))),a.entriesPaged=r(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),(e=>this._retrieveMapEntriesPaged(t,s,e)))),a.keys=r(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),((...e)=>this._retrieveMapKeys(t,s,e)))),a.keysPaged=r(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),(e=>this._retrieveMapKeysPaged(t,s,e))))),this.supportMulti&&t.meta.type.isMap&&(a.multi=r((e=>1===t.meta.type.asMap.hashers.length?this._retrieveMulti(e.map((e=>[t,[e]])),s):this._retrieveMulti(e.map((e=>[t,e])),s)))),this._decorateFunctionMeta(t,a)}_queueStorage(e,t){const r=t===__classPrivateFieldGet(this,_Decorate_storageSubQ,"f")?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;let s,i=t.length-1,a=0;return -1!==i&&t[i]&&50!==t[i][1].length?(s=t[i][0],a=t[i][1].length,t[i][1].push(e)):(i++,s=from(new Promise((e=>{nextTick((()=>{const r=t[i][1];delete t[i],e(r);}));}))).pipe(switchMap((e=>r(e)))),t.push([s,[e]])),s.pipe(map((e=>e[a])))}_decorateStorageCall(e,t){return t(memo(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),((...t)=>{const r=extractStorageArgs(__classPrivateFieldGet(this,_Decorate_registry,"f"),e,t);return this.hasSubscriptions?this._queueStorage(r,__classPrivateFieldGet(this,_Decorate_storageSubQ,"f")):this._rpcCore.state.getStorage(r)})),{methodName:e.method,overrideNoSub:(...t)=>this._queueStorage(extractStorageArgs(__classPrivateFieldGet(this,_Decorate_registry,"f"),e,t),__classPrivateFieldGet(this,_Decorate_storageGetQ,"f"))})}_retrieveMulti(e,t){if(!e.length)return of([]);const r=this.hasSubscriptions&&!t?this._rpcCore.state.subscribeStorage:this._rpcCore.state.queryStorageAt;return e.length<=250?t?r(e,t):r(e):combineLatest(arrayChunk(e,250).map((e=>t?r(e,t):r(e)))).pipe(map(arrayFlatten))}_retrieveMapKeys({iterKey:e,meta:t,method:r,section:s},i,a){if(!e||!t.type.isMap)throw new Error("keys can only be retrieved on maps");const o=e(...a).toHex(),c=new BehaviorSubject(o),n=i?e=>this._rpcCore.state.getKeysPaged(o,1e3,e,i):e=>this._rpcCore.state.getKeysPaged(o,1e3,e),_=e=>e.setMeta(t,s,r);return c.pipe(switchMap(n),map((e=>e.map(_))),tap((e=>nextTick((()=>{1e3===e.length?c.next(e[999].toHex()):c.complete();})))),toArray(),map(arrayFlatten))}_retrieveMapKeysPaged({iterKey:e,meta:t,method:r,section:s},i,a){if(!e||!t.type.isMap)throw new Error("keys can only be retrieved on maps");const o=e=>e.setMeta(t,s,r);return (i?e=>this._rpcCore.state.getKeysPaged(e,a.pageSize,a.startKey||e,i):e=>this._rpcCore.state.getKeysPaged(e,a.pageSize,a.startKey||e))(e(...a.args).toHex()).pipe(map((e=>e.map(o))))}_retrieveMapEntries(e,t,r){const s=t?e=>this._rpcCore.state.queryStorageAt(e,t):e=>this._rpcCore.state.queryStorageAt(e);return this._retrieveMapKeys(e,t,r).pipe(switchMap((e=>e.length?combineLatest(arrayChunk(e,250).map(s)).pipe(map((t=>arrayFlatten(t).map(((t,r)=>[e[r],t]))))):of([]))))}_retrieveMapEntriesPaged(e,t,r){const s=t?e=>this._rpcCore.state.queryStorageAt(e,t):e=>this._rpcCore.state.queryStorageAt(e);return this._retrieveMapKeysPaged(e,t,r).pipe(switchMap((e=>e.length?s(e).pipe(map((t=>t.map(((t,r)=>[e[r],t]))))):of([]))))}_decorateDeriveRx(e){const t=this._runtimeVersion?.specName.toString(),r=getAvailableDerives(__classPrivateFieldGet(this,_Decorate_instanceId,"f"),this._rx,objectSpread({},this._options.derives,this._options.typesBundle?.spec?.[t||""]?.derives));return decorateDeriveSections(e,r)}_decorateDerive(e){return decorateDeriveSections(e,this._rx.derive)}}_Decorate_instanceId=new WeakMap,_Decorate_runtimeLog=new WeakMap,_Decorate_registry=new WeakMap,_Decorate_storageGetQ=new WeakMap,_Decorate_storageSubQ=new WeakMap;

	var _Init_instances,_Init_atLast,_Init_healthTimer,_Init_registries,_Init_updateSub,_Init_waitingRegistries,_Init_onProviderConnect,_Init_onProviderDisconnect,_Init_onProviderError;const l=logger("api/init");function textToString(t){return t.toString()}class Init extends Decorate{constructor(t,e,i){super(t,e,i),_Init_instances.add(this),_Init_atLast.set(this,null),_Init_healthTimer.set(this,null),_Init_registries.set(this,[]),_Init_updateSub.set(this,null),_Init_waitingRegistries.set(this,{}),this.registry.setKnownTypes(t),t.source?__classPrivateFieldSet(this,_Init_registries,__classPrivateFieldGet(t.source,_Init_registries,"f"),"f"):this.registerTypes(t.types),this._rpc=this._decorateRpc(this._rpcCore,this._decorateMethod),this._rx.rpc=this._decorateRpc(this._rpcCore,this._rxDecorateMethod),this.supportMulti&&(this._queryMulti=this._decorateMulti(this._decorateMethod),this._rx.queryMulti=this._decorateMulti(this._rxDecorateMethod)),this._rx.signer=t.signer,this._rpcCore.setRegistrySwap((t=>this.getBlockRegistry(t))),this._rpcCore.setResolveBlockHash((t=>firstValueFrom(this._rpcCore.chain.getBlockHash(t)))),this.hasSubscriptions?(this._rpcCore.provider.on("disconnected",(()=>__classPrivateFieldGet(this,_Init_instances,"m",_Init_onProviderDisconnect).call(this))),this._rpcCore.provider.on("error",(t=>__classPrivateFieldGet(this,_Init_instances,"m",_Init_onProviderError).call(this,t))),this._rpcCore.provider.on("connected",(()=>__classPrivateFieldGet(this,_Init_instances,"m",_Init_onProviderConnect).call(this)))):this._options.noInitWarn||l.warn("Api will be available in a limited mode since the provider does not support subscriptions"),this._rpcCore.provider.isConnected&&__classPrivateFieldGet(this,_Init_instances,"m",_Init_onProviderConnect).call(this);}_initRegistry(t,e,i,s,r){t.clearCache(),t.setChainProperties(r||this.registry.getChainProperties()),t.setKnownTypes(this._options),t.register(getSpecTypes(t,e,i.specName,i.specVersion)),t.setHasher(getSpecHasher(t,e,i.specName)),t.knownTypes.typesBundle&&(t.knownTypes.typesAlias=getSpecAlias(t,e,i.specName)),t.setMetadata(s,void 0,objectSpread({},getSpecExtensions(t,e,i.specName),this._options.signedExtensions));}_getDefaultRegistry(){return assertReturn(__classPrivateFieldGet(this,_Init_registries,"f").find((({isDefault:t})=>t)),"Initialization error, cannot find the default registry")}async at(t,e){const i=u8aToU8a(t),s=u8aToHex(i),r=await this.getBlockRegistry(i,e);return __classPrivateFieldGet(this,_Init_atLast,"f")&&__classPrivateFieldGet(this,_Init_atLast,"f")[0]===s||__classPrivateFieldSet(this,_Init_atLast,[s,this._createDecorated(r,!0,null,i).decoratedApi],"f"),__classPrivateFieldGet(this,_Init_atLast,"f")[1]}async _createBlockRegistry(t,e,i){const s=new TypeRegistry(t),r=new Metadata(s,await firstValueFrom(this._rpcCore.state.getMetadata.raw(e.parentHash)));this._initRegistry(s,this._runtimeChain,i,r);const a={counter:0,lastBlockHash:t,metadata:r,registry:s,runtimeVersion:i};return __classPrivateFieldGet(this,_Init_registries,"f").push(a),a}_cacheBlockRegistryProgress(t,e){let i=__classPrivateFieldGet(this,_Init_waitingRegistries,"f")[t];return isUndefined(i)&&(i=__classPrivateFieldGet(this,_Init_waitingRegistries,"f")[t]=new Promise(((i,s)=>{e().then((e=>{delete __classPrivateFieldGet(this,_Init_waitingRegistries,"f")[t],i(e);})).catch((e=>{delete __classPrivateFieldGet(this,_Init_waitingRegistries,"f")[t],s(e);}));}))),i}_getBlockRegistryViaVersion(t,e){if(e){const i=__classPrivateFieldGet(this,_Init_registries,"f").find((({runtimeVersion:{specName:t,specVersion:i}})=>t.eq(e.specName)&&i.eq(e.specVersion)));if(i)return i.counter++,i.lastBlockHash=t,i}return null}async _getBlockRegistryViaHash(t){if(!this._genesisHash||!this._runtimeVersion)throw new Error("Cannot retrieve data on an uninitialized chain");const e=this.registry.createType("HeaderPartial",this._genesisHash.eq(t)?{number:BN_ZERO,parentHash:this._genesisHash}:await firstValueFrom(this._rpcCore.chain.getHeader.raw(t)));if(e.parentHash.isEmpty)throw new Error("Unable to retrieve header and parent from supplied hash");getUpgradeVersion(this._genesisHash,e.number);const r=this.registry.createType("RuntimeVersionPartial",await firstValueFrom(this._rpcCore.state.getRuntimeVersion.raw(e.parentHash)));return this._getBlockRegistryViaVersion(t,r)||await this._cacheBlockRegistryProgress(r.toHex(),(()=>this._createBlockRegistry(t,e,r)))}async getBlockRegistry(t,e){return __classPrivateFieldGet(this,_Init_registries,"f").find((({lastBlockHash:e})=>e&&u8aEq(e,t)))||this._getBlockRegistryViaVersion(t,e)||await this._cacheBlockRegistryProgress(u8aToHex(t),(()=>this._getBlockRegistryViaHash(t)))}async _loadMeta(){return !!this._isReady||(this._unsubscribeUpdates(),[this._genesisHash,this._runtimeMetadata]=this._options.source?._isReady?await this._metaFromSource(this._options.source):await this._metaFromChain(this._options.metadata),this._initFromMeta(this._runtimeMetadata))}async _metaFromSource(t){this._extrinsicType=t.extrinsicVersion,this._runtimeChain=t.runtimeChain,this._runtimeVersion=t.runtimeVersion;const e=Object.keys(t.rpc),i=[];for(let s=0;s<e.length;s++){const r=e[s],a=Object.keys(t.rpc[r]);for(let t=0;t<a.length;t++)i.push(`${r}_${a[t]}`);}return this._filterRpc(i,getSpecRpc(this.registry,t.runtimeChain,t.runtimeVersion.specName)),[t.genesisHash,t.runtimeMetadata]}_subscribeUpdates(){!__classPrivateFieldGet(this,_Init_updateSub,"f")&&this.hasSubscriptions&&__classPrivateFieldSet(this,_Init_updateSub,this._rpcCore.state.subscribeRuntimeVersion().pipe(switchMap((t=>this._runtimeVersion?.specVersion.eq(t.specVersion)?of(!1):this._rpcCore.state.getMetadata().pipe(map((e=>{l.log(`Runtime version updated to spec=${t.specVersion.toString()}, tx=${t.transactionVersion.toString()}`),this._runtimeMetadata=e,this._runtimeVersion=t,this._rx.runtimeVersion=t;const i=this._getDefaultRegistry();return i.metadata=e,i.runtimeVersion=t,this._initRegistry(this.registry,this._runtimeChain,t,e),this._injectMetadata(i,!0),!0})))))).subscribe(),"f");}async _metaFromChain(t){const[e,i,s,r,a,n]=await Promise.all([firstValueFrom(this._rpcCore.chain.getBlockHash(0)),firstValueFrom(this._rpcCore.state.getRuntimeVersion()),firstValueFrom(this._rpcCore.system.chain()),firstValueFrom(this._rpcCore.system.properties()),firstValueFrom(this._rpcCore.rpc.methods()),t?Promise.resolve(null):firstValueFrom(this._rpcCore.state.getMetadata())]);this._runtimeChain=s,this._runtimeVersion=i,this._rx.runtimeVersion=i;const o=`${e.toHex()||"0x"}-${i.specVersion.toString()}`,_=n||(t&&t[o]?new Metadata(this.registry,t[o]):await firstValueFrom(this._rpcCore.state.getMetadata()));return this._initRegistry(this.registry,s,i,_,r),this._filterRpc(a.methods.map(textToString),getSpecRpc(this.registry,s,i.specName)),this._subscribeUpdates(),__classPrivateFieldGet(this,_Init_registries,"f").length||__classPrivateFieldGet(this,_Init_registries,"f").push({counter:0,isDefault:!0,metadata:_,registry:this.registry,runtimeVersion:i}),_.getUniqTypes(this._options.throwOnUnknown||!1),[e,_]}_initFromMeta(t){return this._extrinsicType=t.asLatest.extrinsic.version.toNumber(),this._rx.extrinsicType=this._extrinsicType,this._rx.genesisHash=this._genesisHash,this._rx.runtimeVersion=this._runtimeVersion,this._injectMetadata(this._getDefaultRegistry(),!0),this._rx.derive=this._decorateDeriveRx(this._rxDecorateMethod),this._derive=this._decorateDerive(this._decorateMethod),!0}_subscribeHealth(){this._unsubscribeHealth(),__classPrivateFieldSet(this,_Init_healthTimer,this.hasSubscriptions?setInterval((()=>{firstValueFrom(this._rpcCore.system.health.raw()).catch((()=>{}));}),1e4):null,"f");}_unsubscribeHealth(){__classPrivateFieldGet(this,_Init_healthTimer,"f")&&(clearInterval(__classPrivateFieldGet(this,_Init_healthTimer,"f")),__classPrivateFieldSet(this,_Init_healthTimer,null,"f"));}_unsubscribeUpdates(){__classPrivateFieldGet(this,_Init_updateSub,"f")&&(__classPrivateFieldGet(this,_Init_updateSub,"f").unsubscribe(),__classPrivateFieldSet(this,_Init_updateSub,null,"f"));}_unsubscribe(){this._unsubscribeHealth(),this._unsubscribeUpdates();}}_Init_atLast=new WeakMap,_Init_healthTimer=new WeakMap,_Init_registries=new WeakMap,_Init_updateSub=new WeakMap,_Init_waitingRegistries=new WeakMap,_Init_instances=new WeakSet,_Init_onProviderConnect=async function(){this._isConnected.next(!0),this.emit("connected");try{const t=!1===this._options.initWasm||await cryptoWaitReady(),e=await this._loadMeta();this._subscribeHealth(),e&&!this._isReady&&t&&(this._isReady=!0,this.emit("ready",this));}catch(t){const e=new Error(`FATAL: Unable to initialize the API: ${t.message}`);l.error(e),this.emit("error",e);}},_Init_onProviderDisconnect=function(){this._isConnected.next(!1),this._unsubscribe(),this.emit("disconnected");},_Init_onProviderError=function(t){this.emit("error",t);};

	function assertResult(t){if(void 0===t)throw new Error("Api interfaces needs to be initialized before using, wait for 'isReady'");return t}class Getters extends Init{get call(){return assertResult(this._call)}get consts(){return assertResult(this._consts)}get derive(){return assertResult(this._derive)}get errors(){return assertResult(this._errors)}get events(){return assertResult(this._events)}get extrinsicVersion(){return this._extrinsicType}get genesisHash(){return assertResult(this._genesisHash)}get isConnected(){return this._isConnected.getValue()}get libraryInfo(){return `${packageInfo.name} v${packageInfo.version}`}get query(){return assertResult(this._query)}get queryMulti(){return assertResult(this._queryMulti)}get rpc(){return assertResult(this._rpc)}get runtimeChain(){return assertResult(this._runtimeChain)}get runtimeMetadata(){return assertResult(this._runtimeMetadata)}get runtimeVersion(){return assertResult(this._runtimeVersion)}get rx(){return assertResult(this._rx)}get stats(){return this._rpcCore.provider.stats}get type(){return this._type}get tx(){return assertResult(this._extrinsics)}findCall(t){return findCall(this.registry,t)}findError(t){return findError(this.registry,t)}}

	class ApiBase extends Getters{constructor(e={},r,t){super(e,r,t);}connect(){return this._rpcCore.connect()}disconnect(){return this._unsubscribe(),this._rpcCore.disconnect()}setSigner(e){this._rx.signer=e;}async sign(e,r,{signer:t}={}){if(isString(e)){const s=t||this._rx.signer;if(!s||!s.signRaw)throw new Error("No signer exists with a signRaw interface. You possibly need to pass through an explicit keypair for the origin so it can be used for signing.");return (await s.signRaw(objectSpread({type:"bytes"},r,{address:e}))).signature}return u8aToHex(e.sign(u8aToU8a(r.data)))}}

	var _Combinator_allHasFired,_Combinator_callback,_Combinator_fired,_Combinator_fns,_Combinator_isActive,_Combinator_results,_Combinator_subscriptions;class Combinator{constructor(i,t){_Combinator_allHasFired.set(this,!1),_Combinator_callback.set(this,void 0),_Combinator_fired.set(this,[]),_Combinator_fns.set(this,[]),_Combinator_isActive.set(this,!0),_Combinator_results.set(this,[]),_Combinator_subscriptions.set(this,[]),__classPrivateFieldSet(this,_Combinator_callback,t,"f"),__classPrivateFieldSet(this,_Combinator_subscriptions,i.map((async(i,t)=>{const[a,...s]=Array.isArray(i)?i:[i];return __classPrivateFieldGet(this,_Combinator_fired,"f").push(!1),__classPrivateFieldGet(this,_Combinator_fns,"f").push(a),a(...s,this._createCallback(t))})),"f");}_allHasFired(){return __classPrivateFieldSet(this,_Combinator_allHasFired,__classPrivateFieldGet(this,_Combinator_allHasFired,"f")||0===__classPrivateFieldGet(this,_Combinator_fired,"f").filter((i=>!i)).length,"f"),__classPrivateFieldGet(this,_Combinator_allHasFired,"f")}_createCallback(i){return t=>{__classPrivateFieldGet(this,_Combinator_fired,"f")[i]=!0,__classPrivateFieldGet(this,_Combinator_results,"f")[i]=t,this._triggerUpdate();}}_triggerUpdate(){if(__classPrivateFieldGet(this,_Combinator_isActive,"f")&&isFunction$1(__classPrivateFieldGet(this,_Combinator_callback,"f"))&&this._allHasFired())try{__classPrivateFieldGet(this,_Combinator_callback,"f").call(this,__classPrivateFieldGet(this,_Combinator_results,"f"));}catch(i){}}unsubscribe(){__classPrivateFieldGet(this,_Combinator_isActive,"f")&&(__classPrivateFieldSet(this,_Combinator_isActive,!1,"f"),__classPrivateFieldGet(this,_Combinator_subscriptions,"f").forEach((async i=>{try{const t=await i;isFunction$1(t)&&t();}catch(i){}})));}}_Combinator_allHasFired=new WeakMap,_Combinator_callback=new WeakMap,_Combinator_fired=new WeakMap,_Combinator_fns=new WeakMap,_Combinator_isActive=new WeakMap,_Combinator_results=new WeakMap,_Combinator_subscriptions=new WeakMap;

	function promiseTracker(e,r){let t=!1;return {reject:e=>(t||(t=!0,r(e)),EMPTY),resolve:r=>{t||(t=!0,e(r));}}}function extractArgs(e,r){const t=e.slice(),o=e.length&&isFunction$1(e[e.length-1])?t.pop():void 0;if(r&&!isFunction$1(o))throw new Error("Expected a callback to be passed with subscriptions");return [t,o]}function decorateCall(e,r){return new Promise(((t,o)=>{const c=promiseTracker(t,o),i=e(...r).pipe(catchError((e=>c.reject(e)))).subscribe((e=>{c.resolve(e),nextTick((()=>i.unsubscribe()));}));}))}function decorateSubscribe(e,r,t){return new Promise(((o,c)=>{const i=promiseTracker(o,c),n=e(...r).pipe(catchError((e=>i.reject(e))),tap((()=>i.resolve((()=>n.unsubscribe()))))).subscribe((e=>{nextTick((()=>t(e)));}));}))}function toPromiseMethod(e,r){const t=!!(r&&r.methodName&&r.methodName.includes("subscribe"));return function(...o){const[c,i]=extractArgs(o,t);return i?decorateSubscribe(e,c,i):decorateCall(r?.overrideNoSub||e,c)}}

	var _ApiPromise_isReadyPromise,_ApiPromise_isReadyOrErrorPromise;class ApiPromise extends ApiBase{constructor(e){super(e,"promise",toPromiseMethod),_ApiPromise_isReadyPromise.set(this,void 0),_ApiPromise_isReadyOrErrorPromise.set(this,void 0),__classPrivateFieldSet(this,_ApiPromise_isReadyPromise,new Promise((e=>{super.once("ready",(()=>e(this)));})),"f"),__classPrivateFieldSet(this,_ApiPromise_isReadyOrErrorPromise,new Promise(((e,r)=>{const i=promiseTracker(e,r);super.once("ready",(()=>i.resolve(this))),super.once("error",(e=>i.reject(e)));})),"f");}static create(e){const r=new ApiPromise(e);return e&&e.throwOnConnect?r.isReadyOrError:(r.isReadyOrError.catch((()=>{})),r.isReady)}get isReady(){return __classPrivateFieldGet(this,_ApiPromise_isReadyPromise,"f")}get isReadyOrError(){return __classPrivateFieldGet(this,_ApiPromise_isReadyOrErrorPromise,"f")}clone(){return new ApiPromise(objectSpread({},this._options,{source:this}))}async combineLatest(e,r){const i=new Combinator(e,r);return ()=>{i.unsubscribe();}}}_ApiPromise_isReadyPromise=new WeakMap,_ApiPromise_isReadyOrErrorPromise=new WeakMap;

	const enc=new TextEncoder,dec=new TextDecoder,Blockchain=class{#e;#t;#n;#s;#r;#d;constructor(e){this.#e=e.keyring,this.#t=new State,this.#s=new WsProvider(e.endpoint),this.#r=new Pool,this.#d=new Pool;const t=ApiPromise.create({provider:this.#s});cryptoWaitReady().then((()=>{t.then((e=>{this.#n=e,this.#n.query.system.events((t=>{t.forEach((t=>{const{event:n}=t;if(e.events.templateModule.Offer.is(n)){let e=encodeAddress(n.data[1]);if(encodeAddress(n.data[2])===this.#e.address){const t=new BinData(n.data[0].buffer),s=t.getUint16(),r=new Uint8Array(t.getBuffer(s)),d=this.#e.decryptMessage(r,decodeAddress(e)),i=dec.decode(d);this.#r.run({from:e,offer:i});}}if(e.events.templateModule.Answer.is(n)){const e=encodeAddress(n.data[1]);if(encodeAddress(n.data[2])===this.#e.address){const t=new BinData(n.data[0].buffer),s=t.getUint16(),r=new Uint8Array(t.getBuffer(s)),d=this.#e.decryptMessage(r,decodeAddress(e)),i=dec.decode(d);this.#d.run({from:e,offer:i});}}}));})),this.#t.ready();}));}));}createOffer(e){return new Promise((t=>{this.#t.onReady((()=>{const n=enc.encode(e.offer);let s=this.#e.encryptMessage(n,decodeAddress(e.to));const r=new BinData(2048);r.setUint16(s.byteLength),r.setBuffer(s);const d=new BinData(300);d.setString(e.welcomeMsg),this.#n.tx.templateModule.offerChat(d.uint8Array,r.uint8Array,e.to).signAndSend(this.#e,(({events:e=[],status:n})=>{n.isInBlock&&t();}));}));}))}createAnswer(e){return new Promise((t=>{this.#t.onReady((()=>{const n=new BinData(2048),s=enc.encode(e.offer),r=this.#e.encryptMessage(s,decodeAddress(e.to));n.setUint16(r.byteLength),n.setBuffer(r),this.#n.tx.templateModule.answerChat(n.uint8Array,e.to).signAndSend(this.#e,(({events:e=[],status:n})=>{n.isInBlock&&t();}));}));}))}onOffer(e){this.#r.push(e);}onAnswer(e){this.#d.push(e);}};

	const PeerChannel=class{pc;remoteAddress;#e;constructor(e,n){if(this.pc=e.pc,this.messages={},this.messageId=1,this.remoteAddress=e.remoteAddress,e.channel)this.channel=e.channel;else {let e={ordered:!1},n="<system>";this.channel=this.pc.createDataChannel(n,e),this.channel.binaryType="arraybuffer";}this.channel.onerror=e=>console.log("[PeerChannel] dc has onerror",e),this.channel.onopen=()=>{n&&n(this);},this.channel.onmessage=e=>{let n=new BinData(e.data),s=n.getUint32(),t=n.getUint32(),a=n.getUint32(),i=n.getBuffer();PeerChannelMessage.get({channel:this,id:s,blocksCount:a,onLoad:e=>{this.#e&&this.#e(e);}}).frameSet(t,i);};}close(){this.channel.close();}onMessage(e){this.#e=e;}sendMessage(e){e instanceof Uint8Array||console.error("[PeerChannel] wrong messageType. Uint8Array required");let n=new BinData(e),s=Math.ceil(n.length()/PeerChannelMessage.FRAME_PAYLOAD_SIZE),t=0;for(;n.notEnd;){let e=n.getBuffer(PeerChannelMessage.FRAME_PAYLOAD_SIZE),a=new BinData(e.byteLength+12);a.setUint32(this.messageId),a.setUint32(t),a.setUint32(s),a.setBuffer(e),t++,this.channel.send(new Uint8Array(a.buffer));}this.messageId++;}},PeerChannelMessage=class e{id;length;#n;#s;constructor(n){this.channel=n.channel,this.id=n.id,this.#n=n.blocksCount,this.#s=n.onLoad,this.payload=new Uint8Array(n.blocksCount*e.FRAME_PAYLOAD_SIZE),this.required=n.blocksCount;}frameSet(n,s){this.required--;let t=n*e.FRAME_PAYLOAD_SIZE;this.payload.set(new Uint8Array(s),t),n+1===this.#n&&(this.length=(this.#n-1)*e.FRAME_PAYLOAD_SIZE+s.byteLength,this.payload=new Uint8Array(this.payload.buffer,0,this.length)),this.required||this.#s(this.payload);}static get(n){let s=n.channel.messages[n.id];return s||(s=n.channel.messages[n.id]=new e(n)),s}static FRAME_PAYLOAD_SIZE=16384};

	let Peer=class{remoteAddress;systemChannel;#e;#t=new State;#n=!1;constructor(e){this.remoteAddress=e.remoteAddress,this.#e=new wrtc.RTCPeerConnection({iceServers:[e.iceServer]}),this.#e.onsignalingstatechange=e=>{},this.#e.oniceconnectionstatechange=e=>{};}onReady(e){this.#t.onReady(e);}offerCreate(){return new Promise((e=>{this.#n=!0,this.channelCreate({remoteAddress:this.remoteAddress}).then((e=>{this.systemChannel=e,this.#t.ready();})),this.#e.onicecandidate=t=>{null===t.candidate&&e(abab.btoa(JSON.stringify(this.#e.localDescription)));},this.#e.onicecandidateerror=e=>{},this.#e.onnegotiationneeded=e=>{this.#e.createOffer().then((e=>{this.#e.setLocalDescription(e);}));};}))}offerAccept(e){return new Promise((t=>{let n;this.#e.setRemoteDescription(new wrtc.RTCSessionDescription(JSON.parse(abab.atob(e)))).catch(console.log).then((()=>{this.#n?t():(this.#e.onicecandidate=e=>{let s=()=>{n=abab.btoa(JSON.stringify(this.#e.localDescription)),t(n);};null!==e.candidate||this.oncandidateready||s();},this.#e.ondatachannel=e=>{this.channelCreate({remoteAddress:this.remoteAddress,channel:e.channel}).then((e=>{this.systemChannel=e,this.#t.ready();}));},this.#e.createAnswer().then((e=>{this.#e.setLocalDescription(e);})).catch(console.log));}));}))}channelCreate(e){return new Promise((t=>{let n;n=new PeerChannel({pc:this.#e,remoteAddress:e.remoteAddress,channel:e.channel},(()=>{t(n);}));}))}};

	const peers={},DOTRTC=class{#e;#o;peers;constructor(e){this.peers={},e.iceServer||(e.iceServer={urls:"stun:stun2.l.google.com:19302"}),this.#e=e,this.#o=new Blockchain({keyring:e.keyring,endpoint:e.endpoint||"wss://diffy.bsn.si/"}),this.#o.onOffer((o=>{let r=new Peer({remoteAddress:o.from,iceServer:e.iceServer});e.onConnectionRequest({remoteAddress:o.from,accept:()=>{r.onReady((()=>{e.onConnect(r.systemChannel);})),r.offerAccept(o.offer).then((e=>{this.#o.createAnswer({to:o.from,offer:e});}));}});})),this.#o.onAnswer((o=>{const r=peers[o.from];r.offerAccept(o.offer),r.onReady((()=>{e.onConnect(r.systemChannel);}));}));}connect(e){return new Promise((o=>{if(peers[e.to])peers[e.to].onReady((()=>{o(peers[e.to]);}));else {let o=peers[e.to]=new Peer({remoteAddress:e.to,iceServer:this.#e.iceServer});Promise.all([o.offerCreate()]).then((([o])=>{this.#o.createOffer({to:e.to,offer:o,welcomeMsg:"helloTest"});}));}}))}};

	const $tplAuth=document.getElementById("tplAuth"),$tplConnector=document.getElementById("tplConnector"),$tplMsg=document.getElementById("tplMsg"),$msg=document.getElementById("msg"),$log=document.getElementById("log"),$phrase=document.getElementById("phrase"),$toAddress=document.getElementById("to");window.app=new class{#e;#t;auth=()=>{cryptoWaitReady().then((()=>{$tplAuth.style.display="none",$tplConnector.style.display="block";const e=new Keyring({type:"ed25519"}).addFromUri($phrase.value);this.addLog(`My address: <b>${e.address}</b>`),this.#e=new DOTRTC({keyring:e,onConnectionRequest:e=>{this.addLog(`<b>${e.remoteAddress}</b> try connect to me`),e.accept();},onConnect:e=>{this.#t=e,this.addLog(`<b>${e.remoteAddress}</b> connected to me`),$tplConnector.style.display="none",$tplMsg.style.display="block",e.onMessage((e=>{const t=(new TextDecoder).decode(e);this.addLog("Got message:"+t);}));}});}));};connect=()=>{const e=$toAddress.value;this.addLog(`Connecting to <b>${e}</b> ...`),this.#e.connect({to:e});};sendMessage=()=>{this.addLog("send message: "+$msg.value);const e=(new TextEncoder).encode($msg.value);$msg.value="",this.#t.sendMessage(e);};addLog=e=>{$log.innerHTML+="<div>"+e+"</div>";}};

})({RTCPeerConnection: RTCPeerConnection, RTCSessionDescription: RTCSessionDescription}, {atob: atob.bind(window), btoa: btoa.bind(window)});
